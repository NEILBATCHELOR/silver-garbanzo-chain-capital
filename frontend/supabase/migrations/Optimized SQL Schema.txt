-- Create ENUM type for pool_type to enforce valid values
CREATE TYPE pool_type_enum AS ENUM ('Total Pool', 'Tranche');

-- Create Provider Table to normalize provider data
CREATE TABLE provider (
    provider_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    address VARCHAR(255)
);

-- Create Payer Table to normalize payer data
CREATE TABLE payer (
    payer_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
);

-- Create Pool Table for pool/tranche data
CREATE TABLE pool (
    pool_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    pool_name VARCHAR(255),
    pool_type pool_type_enum,
    creation_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Invoice Table with relationships to Provider, Payer, and Pool
CREATE TABLE invoice (
    invoice_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    provider_id INT REFERENCES provider(provider_id),
    patient_name VARCHAR(255),
    patient_dob DATE,
    service_dates VARCHAR(255),
    procedure_codes VARCHAR(255),
    diagnosis_codes VARCHAR(255),
    billed_amount DECIMAL(10,2),
    adjustments DECIMAL(10,2),
    net_amount_due DECIMAL(10,2) CHECK (net_amount_due >= 0),
    payer_id INT REFERENCES payer(payer_id),
    policy_number VARCHAR(50),
    invoice_number VARCHAR(50) UNIQUE,
    invoice_date DATE,
    due_date DATE,
    factoring_discount_rate DECIMAL(5,2),
    factoring_terms TEXT,
    upload_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    pool_id INT REFERENCES pool(pool_id)
);

-- Create indexes to optimize query performance
CREATE INDEX idx_invoice_pool_id ON invoice(pool_id);
CREATE INDEX idx_invoice_provider_id ON invoice(provider_id);
CREATE INDEX idx_invoice_payer_id ON invoice(payer_id);