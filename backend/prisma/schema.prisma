generator client {
  provider        = "prisma-client-js"
  output          = "../src/infrastructure/database/generated"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String     @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @db.Timestamptz(6)
  updated_at      DateTime?  @db.Timestamptz(6)
  email           String?    @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      auth_users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model auth_users {
  instance_id                                               String?                     @db.Uuid
  id                                                        String                      @id @db.Uuid
  aud                                                       String?                     @db.VarChar(255)
  role                                                      String?                     @db.VarChar(255)
  email                                                     String?                     @db.VarChar(255)
  encrypted_password                                        String?                     @db.VarChar(255)
  email_confirmed_at                                        DateTime?                   @db.Timestamptz(6)
  invited_at                                                DateTime?                   @db.Timestamptz(6)
  confirmation_token                                        String?                     @db.VarChar(255)
  confirmation_sent_at                                      DateTime?                   @db.Timestamptz(6)
  recovery_token                                            String?                     @db.VarChar(255)
  recovery_sent_at                                          DateTime?                   @db.Timestamptz(6)
  email_change_token_new                                    String?                     @db.VarChar(255)
  email_change                                              String?                     @db.VarChar(255)
  email_change_sent_at                                      DateTime?                   @db.Timestamptz(6)
  last_sign_in_at                                           DateTime?                   @db.Timestamptz(6)
  raw_app_meta_data                                         Json?
  raw_user_meta_data                                        Json?
  is_super_admin                                            Boolean?
  created_at                                                DateTime?                   @db.Timestamptz(6)
  updated_at                                                DateTime?                   @db.Timestamptz(6)
  phone                                                     String?                     @unique
  phone_confirmed_at                                        DateTime?                   @db.Timestamptz(6)
  phone_change                                              String?                     @default("")
  phone_change_token                                        String?                     @default("") @db.VarChar(255)
  phone_change_sent_at                                      DateTime?                   @db.Timestamptz(6)
  confirmed_at                                              DateTime?                   @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                                String?                     @default("") @db.VarChar(255)
  email_change_confirm_status                               Int?                        @default(0) @db.SmallInt
  banned_until                                              DateTime?                   @db.Timestamptz(6)
  reauthentication_token                                    String?                     @default("") @db.VarChar(255)
  reauthentication_sent_at                                  DateTime?                   @db.Timestamptz(6)
  is_sso_user                                               Boolean                     @default(false)
  deleted_at                                                DateTime?                   @db.Timestamptz(6)
  is_anonymous                                              Boolean                     @default(false)
  identities                                                identities[]
  mfa_factors                                               mfa_factors[]
  one_time_tokens                                           one_time_tokens[]
  sessions                                                  sessions[]
  approval_requests                                         approval_requests[]
  audit_logs                                                audit_logs[]
  compliance_reports_compliance_reports_created_byTousers   compliance_reports[]        @relation("compliance_reports_created_byTousers")
  compliance_reports_compliance_reports_updated_byTousers   compliance_reports[]        @relation("compliance_reports_updated_byTousers")
  credential_usage_logs                                     credential_usage_logs[]
  document_workflows_document_workflows_created_byTousers   document_workflows[]        @relation("document_workflows_created_byTousers")
  document_workflows_document_workflows_updated_byTousers   document_workflows[]        @relation("document_workflows_updated_byTousers")
  fund_nav_data_fund_nav_data_created_byTousers             fund_nav_data[]             @relation("fund_nav_data_created_byTousers")
  fund_nav_data_fund_nav_data_validated_byTousers           fund_nav_data[]             @relation("fund_nav_data_validated_byTousers")
  investor_approvals                                        investor_approvals[]
  issuer_access_roles_issuer_access_roles_created_byTousers issuer_access_roles[]       @relation("issuer_access_roles_created_byTousers")
  issuer_access_roles_issuer_access_roles_updated_byTousers issuer_access_roles[]       @relation("issuer_access_roles_updated_byTousers")
  issuer_access_roles_issuer_access_roles_user_idTousers    issuer_access_roles[]       @relation("issuer_access_roles_user_idTousers")
  issuer_documents_issuer_documents_created_byTousers       issuer_documents[]          @relation("issuer_documents_created_byTousers")
  issuer_documents_issuer_documents_reviewed_byTousers      issuer_documents[]          @relation("issuer_documents_reviewed_byTousers")
  issuer_documents_issuer_documents_updated_byTousers       issuer_documents[]          @relation("issuer_documents_updated_byTousers")
  investor_documents_investor_documents_created_byTousers   investor_documents[]        @relation("investor_documents_created_byTousers")
  investor_documents_investor_documents_reviewed_byTousers  investor_documents[]        @relation("investor_documents_reviewed_byTousers")
  investor_documents_investor_documents_updated_byTousers   investor_documents[]        @relation("investor_documents_updated_byTousers")
  multi_sig_wallets                                         multi_sig_wallets[]
  nav_oracle_configs                                        nav_oracle_configs[]
  onchain_identities                                        onchain_identities[]
  redemption_settlements                                    redemption_settlements[]
  redemption_window_configs                                 redemption_window_configs[]
  redemption_windows_redemption_windows_created_byTousers   redemption_windows[]        @relation("redemption_windows_created_byTousers")
  redemption_windows_redemption_windows_processed_byTousers redemption_windows[]        @relation("redemption_windows_processed_byTousers")
  security_events                                           security_events[]
  tokens                                                    tokens[]
  transaction_proposals                                     transaction_proposals[]
  transaction_signatures                                    transaction_signatures[]
  user_mfa_settings                                         user_mfa_settings[]
  users                                                     public_users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model alerts {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  severity    String
  service     String
  title       String
  description String?
  status      String    @default("OPEN")
  assignee    String?
  metadata    Json?     @default("{}")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([service], map: "idx_alerts_service")
  @@index([severity], map: "idx_alerts_severity")
  @@index([status], map: "idx_alerts_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model approval_config_approvers {
  id                                                      String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  approval_config_id                                      String           @db.Uuid
  approver_type                                           String
  approver_user_id                                        String?          @db.Uuid
  approver_role_id                                        String?          @db.Uuid
  is_required                                             Boolean?         @default(true)
  order_priority                                          Int?             @default(0)
  created_at                                              DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at                                              DateTime?        @default(now()) @db.Timestamptz(6)
  created_by                                              String?          @db.Uuid
  approval_configs                                        approval_configs @relation(fields: [approval_config_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles                                                   roles?           @relation(fields: [approver_role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_approval_config_approvers_approver_user_idTousers public_users?    @relation("approval_config_approvers_approver_user_idTousers", fields: [approver_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_approval_config_approvers_created_byTousers       public_users?    @relation("approval_config_approvers_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([approval_config_id, approver_role_id], map: "unique_config_role_approver")
  @@unique([approval_config_id, approver_user_id], map: "unique_config_user_approver")
  @@index([approval_config_id], map: "idx_approval_config_approvers_config_id")
  @@index([approver_role_id], map: "idx_approval_config_approvers_role_id")
  @@index([approver_type], map: "idx_approval_config_approvers_type")
  @@index([approver_user_id], map: "idx_approval_config_approvers_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model approval_config_history {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  approval_config_id String           @db.Uuid
  change_type        String
  old_data           Json?
  new_data           Json?
  changed_by         String?          @db.Uuid
  change_reason      String?
  created_at         DateTime?        @default(now()) @db.Timestamptz(6)
  approval_configs   approval_configs @relation(fields: [approval_config_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users              public_users?    @relation(fields: [changed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([changed_by], map: "idx_approval_config_history_changed_by")
  @@index([approval_config_id], map: "idx_approval_config_history_config_id")
  @@index([created_at], map: "idx_approval_config_history_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model approval_configs {
  id                                             String                            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  permission_id                                  String                            @unique @db.Uuid
  required_approvals                             Int                               @default(2)
  eligible_roles                                 String[]
  auto_approval_conditions                       Json?
  created_at                                     DateTime?                         @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime?                         @default(now()) @db.Timestamptz(6)
  consensus_type                                 String                            @default("2of3")
  config_name                                    String?
  config_description                             String?
  approval_mode                                  String?                           @default("mixed")
  requires_all_approvers                         Boolean?                          @default(false)
  auto_approve_threshold                         Int?                              @default(0)
  escalation_config                              Json?
  notification_config                            Json?
  active                                         Boolean?                          @default(true)
  created_by                                     String?                           @db.Uuid
  last_modified_by                               String?                           @db.Uuid
  approval_config_approvers                      approval_config_approvers[]
  approval_config_history                        approval_config_history[]
  users_approval_configs_created_byTousers       public_users?                     @relation("approval_configs_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_approval_configs_last_modified_byTousers public_users?                     @relation("approval_configs_last_modified_byTousers", fields: [last_modified_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  redemption_approver_assignments                redemption_approver_assignments[]

  @@index([active], map: "idx_approval_configs_active")
  @@index([approval_mode], map: "idx_approval_configs_approval_mode")
  @@index([created_by], map: "idx_approval_configs_created_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model approval_requests {
  id                 String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  action             String     @db.VarChar(100)
  resource           String     @db.VarChar(100)
  resource_id        String     @db.VarChar(100)
  requested_by       String     @db.Uuid
  status             String     @default("pending") @db.VarChar(20)
  approvers          String[]   @db.Uuid
  approved_by        String[]   @default([]) @db.Uuid
  rejected_by        String[]   @default([]) @db.Uuid
  required_approvals Int        @default(2)
  metadata           Json?
  created_at         DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?  @default(now()) @db.Timestamptz(6)
  users              auth_users @relation(fields: [requested_by], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model audit_logs {
  id                 String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  timestamp          DateTime    @default(now()) @db.Timestamptz(6)
  action             String
  username           String?     @default("system")
  details            String?     @default("system action")
  status             String?     @default("Success")
  signature          String?
  verified           Boolean?    @default(false)
  user_email         String?
  user_id            String?     @db.Uuid
  entity_type        String?
  entity_id          String?
  old_data           Json?
  new_data           Json?
  metadata           Json?
  project_id         String?     @db.Uuid
  action_type        String?
  changes            Json?
  occurred_at        DateTime?   @default(now()) @db.Timestamptz(6)
  system_process_id  String?     @db.Uuid
  batch_operation_id String?     @db.Uuid
  severity           String?     @default("info")
  duration           Int?
  source             String?
  is_automated       Boolean?    @default(false)
  category           String?     @db.VarChar
  parent_id          String?     @db.Uuid
  correlation_id     String?     @db.VarChar
  session_id         String?     @db.VarChar
  ip_address         String?     @db.VarChar
  user_agent         String?     @db.VarChar
  api_version        String?     @db.VarChar
  request_id         String?     @db.VarChar
  importance         Int?        @default(1)
  users              auth_users? @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([action], map: "idx_audit_logs_action")
  @@index([action_type], map: "idx_audit_logs_action_type")
  @@index([batch_operation_id], map: "idx_audit_logs_batch_operation")
  @@index([category], map: "idx_audit_logs_category")
  @@index([correlation_id], map: "idx_audit_logs_correlation_id")
  @@index([entity_type, entity_id], map: "idx_audit_logs_entity")
  @@index([entity_type], map: "idx_audit_logs_entity_type")
  @@index([is_automated], map: "idx_audit_logs_is_automated")
  @@index([parent_id], map: "idx_audit_logs_parent_id")
  @@index([timestamp(sort: Desc), source, status], map: "idx_audit_logs_performance")
  @@index([session_id], map: "idx_audit_logs_session_id")
  @@index([severity], map: "idx_audit_logs_severity")
  @@index([source], map: "idx_audit_logs_source")
  @@index([status], map: "idx_audit_logs_status")
  @@index([system_process_id], map: "idx_audit_logs_system_process")
  @@index([timestamp(sort: Desc)], map: "idx_audit_logs_timestamp")
  @@index([username], map: "idx_audit_logs_user")
  @@index([user_id], map: "idx_audit_logs_user_id")
  @@schema("public")
}

model auth_events {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?   @db.Uuid
  event_type String
  ip_address String?
  user_agent String?
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bulk_operations {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  completed_at    DateTime? @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  metadata        Json?
  operation_type  String?
  status          String?
  tags            String[]
  target_ids      String[]  @db.Uuid
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  progress        Float?    @default(0)
  processed_count Int?      @default(0)
  failed_count    Int?      @default(0)
  error_details   Json?

  @@index([created_at(sort: Desc)], map: "idx_bulk_operations_created_at")
  @@index([operation_type], map: "idx_bulk_operations_operation_type")
  @@index([status], map: "idx_bulk_operations_status")
  @@schema("public")
}

model cap_table_investors {
  id           String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cap_table_id String?     @db.Uuid
  investor_id  String      @db.Uuid
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  cap_tables   cap_tables? @relation(fields: [cap_table_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  investors    investors   @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([cap_table_id, investor_id])
  @@schema("public")
}

model cap_tables {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                String
  description         String?
  project_id          String?               @db.Uuid
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  cap_table_investors cap_table_investors[]
  projects            projects?             @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model compliance_checks {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id String    @db.Uuid
  project_id  String    @db.Uuid
  risk_level  String
  risk_reason String
  status      String
  reviewed_by String?   @db.Uuid
  reviewed_at DateTime? @db.Timestamptz(6)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  investors   investors @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  projects    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([investor_id, project_id])
  @@index([project_id, risk_level], map: "idx_compliance_checks_project_risk")
  @@schema("public")
}

model compliance_reports {
  id                                         String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_id                                  String            @db.Uuid
  generated_at                               DateTime          @default(now()) @db.Timestamptz(6)
  status                                     compliance_status @default(pending_review)
  findings                                   Json              @default("[]")
  metadata                                   Json              @default("{}")
  created_at                                 DateTime          @default(now()) @db.Timestamptz(6)
  updated_at                                 DateTime          @default(now()) @db.Timestamptz(6)
  created_by                                 String            @db.Uuid
  updated_by                                 String            @db.Uuid
  users_compliance_reports_created_byTousers auth_users        @relation("compliance_reports_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_compliance_reports_updated_byTousers auth_users        @relation("compliance_reports_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([generated_at], map: "idx_compliance_reports_generated_at")
  @@index([issuer_id], map: "idx_compliance_reports_issuer_id")
  @@index([status], map: "idx_compliance_reports_status")
  @@schema("public")
}

model compliance_settings {
  id                    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  organization_id       String   @unique
  kyc_status            String   @default("not_started")
  require_accreditation Boolean  @default(false)
  minimum_investment    Int      @default(0)
  jurisdictions         String[] @default([])
  investor_count        Int      @default(0)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model consensus_settings {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  consensus_type     String   @unique
  required_approvals Int
  eligible_roles     String[]
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  updated_at         DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model credential_usage_logs {
  id                  String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  credential_id       String              @db.Uuid
  action_type         String
  action_details      Json?
  performed_by        String?             @db.Uuid
  performed_at        DateTime?           @default(now()) @db.Timestamptz(6)
  ip_address          String?
  user_agent          String?
  project_credentials project_credentials @relation(fields: [credential_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users               auth_users?         @relation(fields: [performed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([credential_id], map: "idx_credential_usage_logs_credential_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model deployment_rate_limits {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id      String    @db.Uuid
  project_id   String    @db.Uuid
  token_id     String    @db.Uuid
  started_at   DateTime  @default(now()) @db.Timestamptz(6)
  completed_at DateTime? @db.Timestamptz(6)
  status       String
  network      String?
  environment  String?
  tokens       tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token")

  @@unique([token_id, started_at], map: "unique_token_deployment")
  @@index([started_at], map: "idx_deployment_rate_limits_started_at")
  @@index([status], map: "idx_deployment_rate_limits_status")
  @@index([user_id, project_id], map: "idx_deployment_rate_limits_user_project")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_activity_logs {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  activity_type   String
  entity_id       String
  entity_type     String
  description     String
  user_id         String?
  status          String
  metadata        Json?
  ip_address      String?   @db.Inet
  user_agent      String?
  organization_id String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([activity_type], map: "idx_dfns_activity_logs_activity_type")
  @@index([created_at], map: "idx_dfns_activity_logs_created_at")
  @@index([entity_id], map: "idx_dfns_activity_logs_entity_id")
  @@index([entity_type], map: "idx_dfns_activity_logs_entity_type")
  @@schema("public")
}

model dfns_api_requests {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  endpoint         String
  method           String
  request_id       String?
  request_body     Json?
  response_body    Json?
  status_code      Int
  response_time_ms Int?
  error_message    String?
  user_id          String?
  organization_id  String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_dfns_api_requests_created_at")
  @@index([endpoint], map: "idx_dfns_api_requests_endpoint")
  @@index([status_code], map: "idx_dfns_api_requests_status_code")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_applications {
  id                   String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  app_id               String    @unique
  name                 String
  description          String?
  kind                 String
  origin               String?
  relying_party        String?
  status               String    @default("Active")
  external_id          String?
  logo_url             String?
  terms_of_service_url String?
  privacy_policy_url   String?
  organization_id      String?
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([app_id], map: "idx_dfns_applications_app_id")
  @@index([organization_id], map: "idx_dfns_applications_organization_id")
  @@index([status], map: "idx_dfns_applications_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_authentication_challenges {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  challenge_id   String    @unique
  user_id        String
  challenge_data Json
  status         String    @default("pending")
  expires_at     DateTime  @db.Timestamptz(6)
  completed_at   DateTime? @db.Timestamptz(6)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_dfns_authentication_challenges_expires_at")
  @@index([status], map: "idx_dfns_authentication_challenges_status")
  @@index([user_id], map: "idx_dfns_authentication_challenges_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_broadcast_transactions {
  id                String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  broadcast_id      String        @unique
  wallet_id         String?
  kind              String
  transaction       String
  external_id       String?
  status            String        @default("Pending")
  tx_hash           String?
  date_created      DateTime      @default(now()) @db.Timestamptz(6)
  date_broadcast    DateTime?     @db.Timestamptz(6)
  date_confirmed    DateTime?     @db.Timestamptz(6)
  error_message     String?
  dfns_broadcast_id String        @unique
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets      dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_credential_challenges {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  challenge_id    String    @unique
  user_id         String
  credential_type String
  challenge_data  Json
  status          String    @default("pending")
  expires_at      DateTime  @db.Timestamptz(6)
  completed_at    DateTime? @db.Timestamptz(6)
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_dfns_credential_challenges_expires_at")
  @@index([status], map: "idx_dfns_credential_challenges_status")
  @@index([user_id], map: "idx_dfns_credential_challenges_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_credentials {
  id                 String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  credential_id      String      @unique
  user_id            String?     @db.Uuid
  name               String?
  kind               String
  status             String      @default("Active")
  public_key         String
  algorithm          String
  attestation_type   String?
  authenticator_info Json?
  enrolled_at        DateTime    @default(now()) @db.Timestamptz(6)
  last_used_at       DateTime?   @db.Timestamptz(6)
  dfns_credential_id String?     @unique
  created_at         DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?   @default(now()) @db.Timestamptz(6)
  dfns_users         dfns_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([credential_id], map: "idx_dfns_credentials_credential_id")
  @@index([status], map: "idx_dfns_credentials_status")
  @@index([user_id], map: "idx_dfns_credentials_user_id")
  @@schema("public")
}

model dfns_exchange_accounts {
  id                         String                      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  account_id                 String                      @unique
  exchange_integration_id    String?
  account_type               String
  trading_enabled            Boolean?                    @default(false)
  withdrawal_enabled         Boolean?                    @default(false)
  last_updated               DateTime?                   @default(now()) @db.Timestamptz(6)
  dfns_account_id            String?                     @unique
  created_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  dfns_exchange_integrations dfns_exchange_integrations? @relation(fields: [exchange_integration_id], references: [integration_id], onDelete: Cascade, onUpdate: NoAction)
  dfns_exchange_balances     dfns_exchange_balances[]

  @@schema("public")
}

model dfns_exchange_balances {
  id                     String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  account_id             String?
  asset                  String
  total                  String                  @default("0")
  available              String                  @default("0")
  locked                 String                  @default("0")
  last_updated           DateTime?               @default(now()) @db.Timestamptz(6)
  created_at             DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?               @default(now()) @db.Timestamptz(6)
  dfns_exchange_accounts dfns_exchange_accounts? @relation(fields: [account_id], references: [account_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([account_id, asset])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_exchange_integrations {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  integration_id         String                   @unique
  name                   String
  exchange_kind          String
  credentials            Json
  status                 String                   @default("Active")
  config                 Json?
  last_sync_at           DateTime?                @db.Timestamptz(6)
  organization_id        String?
  dfns_exchange_id       String?                  @unique
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  dfns_exchange_accounts dfns_exchange_accounts[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_fee_sponsors {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sponsor_id          String                @unique
  name                String
  sponsor_address     String
  network             String
  status              String                @default("Active")
  balance             String                @default("0")
  spent_amount        String                @default("0")
  transaction_count   Int?                  @default(0)
  external_id         String?
  organization_id     String?
  dfns_sponsor_id     String?               @unique
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  dfns_sponsored_fees dfns_sponsored_fees[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_activity_logs {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id         String                 @db.Uuid
  activity_type          String
  status                 String
  description            String?
  provider_data          Json?
  error_details          Json?
  created_at             DateTime?              @default(now()) @db.Timestamptz(6)
  dfns_fiat_transactions dfns_fiat_transactions @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([activity_type], map: "idx_dfns_fiat_activity_logs_activity_type")
  @@index([created_at], map: "idx_dfns_fiat_activity_logs_created_at")
  @@index([transaction_id], map: "idx_dfns_fiat_activity_logs_transaction_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_provider_configs {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String    @unique
  configuration             Json
  is_enabled                Boolean?  @default(true)
  supported_currencies      String[]  @default([])
  supported_payment_methods String[]  @default([])
  created_at                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_quotes {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String
  type                      String
  from_amount               Decimal   @db.Decimal(20, 8)
  from_currency             String
  to_amount                 Decimal   @db.Decimal(20, 8)
  to_currency               String
  exchange_rate             Decimal   @db.Decimal(20, 8)
  fees                      Json
  payment_method            String
  estimated_processing_time String?
  expires_at                DateTime  @db.Timestamptz(6)
  created_at                DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_dfns_fiat_quotes_created_at")
  @@index([expires_at], map: "idx_dfns_fiat_quotes_expires_at")
  @@index([provider], map: "idx_dfns_fiat_quotes_provider")
  @@index([type], map: "idx_dfns_fiat_quotes_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_transactions {
  id                        String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String
  provider_transaction_id   String
  type                      String
  status                    String
  amount                    Decimal                   @db.Decimal(20, 8)
  currency                  String
  crypto_asset              String
  wallet_address            String
  wallet_id                 String?                   @db.Uuid
  payment_method            String?
  bank_account              Json?
  payment_url               String?
  withdrawal_address        String?
  tx_hash                   String?
  exchange_rate             Json?
  fees                      Json?
  estimated_completion_time String?
  expires_at                DateTime?                 @db.Timestamptz(6)
  metadata                  Json?                     @default("{}")
  user_id                   String?                   @db.Uuid
  project_id                String?                   @db.Uuid
  organization_id           String?                   @db.Uuid
  created_at                DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                 @default(now()) @db.Timestamptz(6)
  dfns_fiat_activity_logs   dfns_fiat_activity_logs[]
  dfns_wallets              dfns_wallets?             @relation(fields: [wallet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([provider, provider_transaction_id])
  @@index([created_at], map: "idx_dfns_fiat_transactions_created_at")
  @@index([crypto_asset], map: "idx_dfns_fiat_transactions_crypto_asset")
  @@index([currency], map: "idx_dfns_fiat_transactions_currency")
  @@index([organization_id], map: "idx_dfns_fiat_transactions_organization_id")
  @@index([project_id], map: "idx_dfns_fiat_transactions_project_id")
  @@index([provider], map: "idx_dfns_fiat_transactions_provider")
  @@index([provider, status], map: "idx_dfns_fiat_transactions_provider_status")
  @@index([status], map: "idx_dfns_fiat_transactions_status")
  @@index([type], map: "idx_dfns_fiat_transactions_type")
  @@index([user_id], map: "idx_dfns_fiat_transactions_user_id")
  @@index([user_id, status], map: "idx_dfns_fiat_transactions_user_status")
  @@index([wallet_id], map: "idx_dfns_fiat_transactions_wallet_id")
  @@index([wallet_id, type], map: "idx_dfns_fiat_transactions_wallet_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_permission_assignments {
  id               String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  permission_id    String?
  identity_id      String
  identity_kind    String
  assigned_by      String
  assigned_at      DateTime          @default(now()) @db.Timestamptz(6)
  organization_id  String?
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?         @default(now()) @db.Timestamptz(6)
  dfns_permissions dfns_permissions? @relation(fields: [permission_id], references: [permission_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([permission_id, identity_id, identity_kind])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_permissions {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  permission_id               String                        @unique
  name                        String
  resources                   String[]
  operations                  String[]
  effect                      String
  condition                   Json?
  status                      String                        @default("Active")
  description                 String?
  category                    String?
  organization_id             String?
  dfns_permission_id          String?                       @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  dfns_permission_assignments dfns_permission_assignments[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_personal_access_tokens {
  id                     String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                   String
  status                 String      @default("Active")
  expires_at             DateTime?   @db.Timestamptz(6)
  last_used_at           DateTime?   @db.Timestamptz(6)
  permission_assignments Json?
  user_id                String?     @db.Uuid
  dfns_token_id          String?     @unique
  created_at             DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?   @default(now()) @db.Timestamptz(6)
  dfns_users             dfns_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_policies {
  id                    String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  policy_id             String                  @unique
  name                  String
  description           String?
  rule                  Json
  activity_kind         String
  status                String                  @default("Active")
  external_id           String?
  organization_id       String?
  dfns_policy_id        String?                 @unique
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @default(now()) @db.Timestamptz(6)
  dfns_policy_approvals dfns_policy_approvals[]

  @@index([activity_kind], map: "idx_dfns_policies_activity_kind")
  @@index([policy_id], map: "idx_dfns_policies_policy_id")
  @@index([status], map: "idx_dfns_policies_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_policy_approvals {
  id               String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  approval_id      String         @unique
  activity_id      String
  policy_id        String?
  status           String         @default("Pending")
  reason           String?
  approved_by      String?
  approved_at      DateTime?      @db.Timestamptz(6)
  rejected_by      String?
  rejected_at      DateTime?      @db.Timestamptz(6)
  metadata         Json?
  organization_id  String?
  dfns_approval_id String?        @unique
  created_at       DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?      @default(now()) @db.Timestamptz(6)
  dfns_policies    dfns_policies? @relation(fields: [policy_id], references: [policy_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_service_accounts {
  id                      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                    String
  status                  String    @default("Active")
  external_id             String?
  public_key              String?
  permission_assignments  Json?
  organization_id         String?
  dfns_service_account_id String?   @unique
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_signatures {
  id                String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  signature_id      String             @unique
  key_id            String?
  kind              String
  message           String
  external_id       String?
  status            String             @default("Pending")
  signature         String?
  public_key        String
  date_created      DateTime           @default(now()) @db.Timestamptz(6)
  date_completed    DateTime?          @db.Timestamptz(6)
  error_message     String?
  dfns_signature_id String             @unique
  created_at        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?          @default(now()) @db.Timestamptz(6)
  dfns_signing_keys dfns_signing_keys? @relation(fields: [key_id], references: [key_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_signing_keys {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  key_id          String            @unique
  public_key      String
  network         String
  curve           String
  scheme          String
  status          String            @default("Active")
  delegated       Boolean?          @default(false)
  delegated_to    String?
  external_id     String?
  tags            String[]
  imported        Boolean?          @default(false)
  exported        Boolean?          @default(false)
  date_exported   DateTime?         @db.Timestamptz(6)
  organization_id String?
  dfns_key_id     String            @unique
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  dfns_signatures dfns_signatures[]
  dfns_wallets    dfns_wallets[]

  @@index([key_id], map: "idx_dfns_signing_keys_key_id")
  @@index([network], map: "idx_dfns_signing_keys_network")
  @@index([status], map: "idx_dfns_signing_keys_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_sponsored_fees {
  id                String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sponsored_fee_id  String             @unique
  fee_sponsor_id    String?
  wallet_id         String?
  tx_hash           String
  amount            String
  asset             String
  status            String             @default("Pending")
  sponsored_at      DateTime           @default(now()) @db.Timestamptz(6)
  error_message     String?
  created_at        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?          @default(now()) @db.Timestamptz(6)
  dfns_fee_sponsors dfns_fee_sponsors? @relation(fields: [fee_sponsor_id], references: [sponsor_id], onDelete: Cascade, onUpdate: NoAction)
  dfns_wallets      dfns_wallets?      @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_staking_integrations {
  id                String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  staking_id        String        @unique
  wallet_id         String?
  network           String
  validator_address String?
  delegation_amount String        @default("0")
  status            String
  total_rewards     String        @default("0")
  pending_rewards   String        @default("0")
  claimed_rewards   String        @default("0")
  last_reward_at    DateTime?     @db.Timestamptz(6)
  last_claim_at     DateTime?     @db.Timestamptz(6)
  apr               String?
  unstaking_period  String?
  dfns_staking_id   String?       @unique
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets      dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_sync_status {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  entity_type     String
  entity_id       String?
  last_sync_at    DateTime  @default(now()) @db.Timestamptz(6)
  sync_status     String
  error_message   String?
  next_sync_at    DateTime? @db.Timestamptz(6)
  organization_id String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([entity_type, entity_id])
  @@index([entity_type], map: "idx_dfns_sync_status_entity_type")
  @@index([last_sync_at], map: "idx_dfns_sync_status_last_sync_at")
  @@index([sync_status], map: "idx_dfns_sync_status_sync_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_transaction_history {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id        String?
  tx_hash          String
  direction        String
  status           String
  asset_symbol     String
  asset_name       String?
  contract_address String?
  amount           String
  fee              String?
  to_address       String?
  from_address     String?
  block_number     BigInt?
  block_hash       String?
  timestamp        DateTime      @db.Timestamptz(6)
  metadata         Json?
  last_updated     DateTime?     @default(now()) @db.Timestamptz(6)
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets     dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, tx_hash])
  @@index([timestamp], map: "idx_dfns_transaction_history_timestamp")
  @@index([tx_hash], map: "idx_dfns_transaction_history_tx_hash")
  @@index([wallet_id], map: "idx_dfns_transaction_history_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_transfers {
  id                          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  transfer_id                 String        @unique
  wallet_id                   String?
  to_address                  String
  amount                      String
  asset                       String?
  memo                        String?
  external_id                 String?
  nonce                       Int?
  gas_limit                   String?
  gas_price                   String?
  max_fee_per_gas             String?
  max_priority_fee_per_gas    String?
  status                      String        @default("Pending")
  tx_hash                     String?
  fee                         String?
  date_created                DateTime      @default(now()) @db.Timestamptz(6)
  date_broadcast              DateTime?     @db.Timestamptz(6)
  date_confirmed              DateTime?     @db.Timestamptz(6)
  estimated_confirmation_time String?
  error_message               String?
  dfns_transfer_id            String        @unique
  created_at                  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets                dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([status], map: "idx_dfns_transfers_status")
  @@index([transfer_id], map: "idx_dfns_transfers_transfer_id")
  @@index([tx_hash], map: "idx_dfns_transfers_tx_hash")
  @@index([wallet_id], map: "idx_dfns_transfers_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_user_action_challenges {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  challenge_id   String    @unique
  user_id        String
  action_type    String
  action_data    Json
  challenge      String
  signature      String?
  signing_method String?
  credential_id  String?
  status         String    @default("pending")
  expires_at     DateTime  @db.Timestamptz(6)
  verified_at    DateTime? @db.Timestamptz(6)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_dfns_user_action_challenges_expires_at")
  @@index([status], map: "idx_dfns_user_action_challenges_status")
  @@index([user_id], map: "idx_dfns_user_action_challenges_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_user_sessions {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id    String    @unique
  user_id       String
  access_token  String
  refresh_token String
  expires_at    DateTime  @db.Timestamptz(6)
  remember_me   Boolean   @default(false)
  status        String    @default("active")
  logged_out_at DateTime? @db.Timestamptz(6)
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([access_token], map: "idx_dfns_user_sessions_access_token")
  @@index([expires_at], map: "idx_dfns_user_sessions_expires_at")
  @@index([status], map: "idx_dfns_user_sessions_status")
  @@index([user_id], map: "idx_dfns_user_sessions_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_users {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username                    String                        @unique
  email                       String?
  status                      String                        @default("Active")
  kind                        String
  external_id                 String?
  public_key                  String?
  recovery_setup              Boolean?                      @default(false)
  mfa_enabled                 Boolean?                      @default(false)
  last_login_at               DateTime?                     @db.Timestamptz(6)
  registered_at               DateTime                      @default(now()) @db.Timestamptz(6)
  organization_id             String?
  dfns_user_id                String?                       @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  dfns_credentials            dfns_credentials[]
  dfns_personal_access_tokens dfns_personal_access_tokens[]

  @@index([dfns_user_id], map: "idx_dfns_users_dfns_user_id")
  @@index([email], map: "idx_dfns_users_email")
  @@index([status], map: "idx_dfns_users_status")
  @@index([username], map: "idx_dfns_users_username")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_validators {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  validator_address String
  network           String
  name              String?
  commission        String    @default("0")
  delegated_amount  String    @default("0")
  status            String
  apr               String?
  uptime            String?
  rank              Int?
  last_updated      DateTime? @default(now()) @db.Timestamptz(6)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([validator_address, network])
  @@schema("public")
}

model dfns_wallet_balances {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id        String?
  asset_symbol     String
  asset_name       String?
  contract_address String?
  balance          String        @default("0")
  value_in_usd     String?
  decimals         Int           @default(18)
  verified         Boolean?      @default(false)
  native_asset     Boolean?      @default(false)
  last_updated     DateTime?     @default(now()) @db.Timestamptz(6)
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets     dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, asset_symbol, contract_address])
  @@index([asset_symbol], map: "idx_dfns_wallet_balances_asset_symbol")
  @@index([wallet_id], map: "idx_dfns_wallet_balances_wallet_id")
  @@schema("public")
}

model dfns_wallet_nfts {
  id           String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id    String?
  contract     String
  token_id     String
  collection   String?
  name         String?
  description  String?
  image_url    String?
  external_url String?
  attributes   Json?
  last_updated DateTime?     @default(now()) @db.Timestamptz(6)
  created_at   DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, contract, token_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_wallets {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id                   String                        @unique
  network                     String
  name                        String?
  address                     String
  signing_key_id              String?
  custodial                   Boolean?                      @default(true)
  imported                    Boolean?                      @default(false)
  exported                    Boolean?                      @default(false)
  date_exported               DateTime?                     @db.Timestamptz(6)
  external_id                 String?
  tags                        String[]
  status                      String                        @default("Active")
  delegated                   Boolean?                      @default(false)
  delegated_to                String?
  organization_id             String?
  project_id                  String?                       @db.Uuid
  investor_id                 String?                       @db.Uuid
  dfns_wallet_id              String                        @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  dfns_broadcast_transactions dfns_broadcast_transactions[]
  dfns_fiat_transactions      dfns_fiat_transactions[]
  dfns_sponsored_fees         dfns_sponsored_fees[]
  dfns_staking_integrations   dfns_staking_integrations[]
  dfns_transaction_history    dfns_transaction_history[]
  dfns_transfers              dfns_transfers[]
  dfns_wallet_balances        dfns_wallet_balances[]
  dfns_wallet_nfts            dfns_wallet_nfts[]
  dfns_signing_keys           dfns_signing_keys?            @relation(fields: [signing_key_id], references: [key_id], onDelete: Restrict, onUpdate: NoAction)

  @@index([address], map: "idx_dfns_wallets_address")
  @@index([investor_id], map: "idx_dfns_wallets_investor_id")
  @@index([network], map: "idx_dfns_wallets_network")
  @@index([project_id], map: "idx_dfns_wallets_project_id")
  @@index([status], map: "idx_dfns_wallets_status")
  @@index([wallet_id], map: "idx_dfns_wallets_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_webhook_deliveries {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  delivery_id   String         @unique
  webhook_id    String?
  event         String
  payload       Json
  status        String         @default("Pending")
  response_code Int?
  response_body String?
  attempts      Int?           @default(0)
  next_retry_at DateTime?      @db.Timestamptz(6)
  delivered_at  DateTime?      @db.Timestamptz(6)
  error_message String?
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?      @default(now()) @db.Timestamptz(6)
  dfns_webhooks dfns_webhooks? @relation(fields: [webhook_id], references: [webhook_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_webhooks {
  id                      String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  webhook_id              String                    @unique
  name                    String
  url                     String
  description             String?
  events                  String[]
  status                  String                    @default("Active")
  secret                  String?
  headers                 Json?
  external_id             String?
  organization_id         String?
  dfns_webhook_id         String?                   @unique
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  dfns_webhook_deliveries dfns_webhook_deliveries[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model distribution_redemptions {
  id                    String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  distribution_id       String              @db.Uuid
  redemption_request_id String              @db.Uuid
  amount_redeemed       Decimal             @db.Decimal
  created_at            DateTime            @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?           @default(now()) @db.Timestamptz(6)
  distributions         distributions       @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distribution_redemptions_distribution_fkey")
  redemption_requests   redemption_requests @relation(fields: [redemption_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distribution_redemptions_redemption_fkey")

  @@unique([distribution_id, redemption_request_id], map: "distribution_redemptions_unique")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model distributions {
  id                       String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token_allocation_id      String                     @db.Uuid
  investor_id              String                     @db.Uuid
  subscription_id          String                     @db.Uuid
  project_id               String?                    @db.Uuid
  token_type               String
  token_amount             Decimal                    @db.Decimal
  distribution_date        DateTime                   @db.Timestamptz(6)
  distribution_tx_hash     String
  wallet_id                String?                    @db.Uuid
  blockchain               String
  token_address            String?
  token_symbol             String?
  to_address               String
  status                   String                     @default("confirmed")
  notes                    String?
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  remaining_amount         Decimal                    @db.Decimal
  fully_redeemed           Boolean                    @default(false)
  standard                 token_standard_enum?
  redemption_status        String?
  distribution_redemptions distribution_redemptions[]
  investors                investors                  @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "distributions_investor_fkey")
  projects                 projects?                  @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "distributions_project_fkey")
  subscriptions            subscriptions              @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distributions_subscription_fkey")
  multi_sig_wallets        multi_sig_wallets?         @relation(fields: [wallet_id], references: [id], onUpdate: NoAction, map: "distributions_wallet_fkey")

  @@index([distribution_date], map: "idx_distributions_distribution_date")
  @@index([investor_id], map: "idx_distributions_investor_id")
  @@index([token_allocation_id], map: "idx_distributions_token_allocation_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model document_approvals {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  document_id String?       @db.Uuid
  approver_id String?       @db.Uuid
  status      String
  comments    String?
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  users       public_users? @relation(fields: [approver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  documents   documents?    @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([document_id], map: "idx_document_approvals_document_id")
  @@schema("public")
}

model document_versions {
  id             String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  document_id    String?       @db.Uuid
  version_number Int
  file_path      String?
  file_url       String?
  uploaded_by    String?       @db.Uuid
  metadata       Json?
  created_at     DateTime?     @default(now()) @db.Timestamptz(6)
  documents      documents?    @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          public_users? @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([document_id, version_number])
  @@index([document_id], map: "idx_document_versions_document_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model document_workflows {
  id                                         String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id                                String           @db.Uuid
  required_signers                           String[]         @db.Uuid
  completed_signers                          String[]         @default([]) @db.Uuid
  status                                     workflow_status  @default(pending)
  deadline                                   DateTime?        @db.Timestamptz(6)
  metadata                                   Json             @default("{}")
  created_at                                 DateTime         @default(now()) @db.Timestamptz(6)
  updated_at                                 DateTime         @default(now()) @db.Timestamptz(6)
  created_by                                 String           @db.Uuid
  updated_by                                 String           @db.Uuid
  users_document_workflows_created_byTousers auth_users       @relation("document_workflows_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  issuer_documents                           issuer_documents @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_document_workflows_updated_byTousers auth_users       @relation("document_workflows_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([document_id], map: "idx_document_workflows_document_id")
  @@index([status], map: "idx_document_workflows_status")
  @@schema("public")
}

model documents {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String
  type               String
  status             String               @default("pending")
  file_path          String?
  file_url           String?
  entity_id          String               @db.Uuid
  entity_type        String
  metadata           Json?                @default("{}")
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  category           String?
  project_id         String?              @db.Uuid
  uploaded_by        String?              @db.Uuid
  expiry_date        DateTime?            @db.Timestamptz(6)
  workflow_stage_id  String?
  version            Int?                 @default(1)
  document_approvals document_approvals[]
  document_versions  document_versions[]
  workflow_stages    workflow_stages?     @relation(fields: [workflow_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([entity_id], map: "idx_documents_entity_id")
  @@index([entity_type], map: "idx_documents_entity_type")
  @@index([expiry_date], map: "idx_documents_expiry_date")
  @@index([status], map: "idx_documents_status")
  @@index([workflow_stage_id], map: "idx_documents_workflow_stage")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model faucet_requests {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_address   String
  token_address    String?
  amount           String
  network          String
  status           String    @default("PENDING")
  transaction_hash String?
  user_id          String?   @db.Uuid
  ip_address       String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @db.Timestamptz(6)

  @@index([created_at], map: "idx_faucet_requests_created_at")
  @@index([network], map: "idx_faucet_requests_network")
  @@index([status], map: "idx_faucet_requests_status")
  @@index([wallet_address], map: "idx_faucet_requests_wallet_address")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fiat_quotes {
  id                          String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                    String
  type                        String
  from_amount                 Decimal            @db.Decimal(20, 8)
  from_currency               String
  to_amount                   Decimal            @db.Decimal(20, 8)
  to_currency                 String
  exchange_rate               Decimal            @db.Decimal(20, 8)
  fees                        Json
  payment_method              String
  estimated_processing_time   String?
  expires_at                  DateTime           @db.Timestamptz(6)
  user_id                     String?            @db.Uuid
  session_id                  String?
  converted_to_transaction_id String?            @db.Uuid
  created_at                  DateTime           @default(now()) @db.Timestamptz(6)
  fiat_transactions           fiat_transactions? @relation(fields: [converted_to_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_fiat_quotes_created_at")
  @@index([expires_at], map: "idx_fiat_quotes_expires_at")
  @@index([provider], map: "idx_fiat_quotes_provider")
  @@index([session_id], map: "idx_fiat_quotes_session_id")
  @@index([type], map: "idx_fiat_quotes_type")
  @@index([user_id], map: "idx_fiat_quotes_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fiat_transactions {
  id                        String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String
  provider_transaction_id   String
  type                      String
  status                    String
  amount                    Decimal                   @db.Decimal(20, 8)
  currency                  String
  crypto_asset              String
  wallet_address            String
  wallet_id                 String?                   @db.Uuid
  payment_method            String?
  bank_account              Json?
  payment_url               String?
  withdrawal_address        String?
  tx_hash                   String?
  exchange_rate             Json?
  fees                      Json?
  estimated_completion_time String?
  expires_at                DateTime?                 @db.Timestamptz(6)
  metadata                  Json?                     @default("{}")
  user_id                   String?                   @db.Uuid
  project_id                String?                   @db.Uuid
  organization_id           String?                   @db.Uuid
  created_at                DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                  @default(now()) @db.Timestamptz(6)
  fiat_quotes               fiat_quotes[]
  ramp_transaction_events   ramp_transaction_events[]

  @@unique([provider, provider_transaction_id], map: "fiat_transactions_provider_transaction_unique")
  @@index([created_at(sort: Desc)], map: "idx_fiat_transactions_created_at")
  @@index([provider], map: "idx_fiat_transactions_provider")
  @@index([provider_transaction_id], map: "idx_fiat_transactions_provider_transaction_id")
  @@index([status], map: "idx_fiat_transactions_status")
  @@index([type], map: "idx_fiat_transactions_type")
  @@index([user_id], map: "idx_fiat_transactions_user_id")
  @@index([wallet_address], map: "idx_fiat_transactions_wallet_address")
  @@schema("public")
}

model fmi_executions {
  id           String     @id
  tradeId      String
  quantity     Decimal    @db.Decimal(18, 8)
  price        Decimal    @db.Decimal(18, 8)
  executedAt   DateTime   @default(now())
  venue        String?
  counterparty String?
  fees         Decimal?   @db.Decimal(18, 8)
  fmi_trades   fmi_trades @relation(fields: [tradeId], references: [id])

  @@schema("public")
}

model fmi_market_data {
  id        String   @id
  symbol    String
  price     Decimal  @db.Decimal(18, 8)
  volume    Decimal  @db.Decimal(18, 8)
  high24h   Decimal? @db.Decimal(18, 8)
  low24h    Decimal? @db.Decimal(18, 8)
  change24h Decimal? @db.Decimal(18, 8)
  timestamp DateTime @default(now())
  source    String

  @@unique([symbol, timestamp])
  @@schema("public")
}

model fmi_positions {
  id            String    @id
  userId        String
  symbol        String
  quantity      Decimal   @db.Decimal(18, 8)
  averagePrice  Decimal   @db.Decimal(18, 8)
  marketValue   Decimal   @db.Decimal(18, 8)
  unrealizedPnL Decimal   @db.Decimal(18, 8)
  realizedPnL   Decimal   @db.Decimal(18, 8)
  lastUpdated   DateTime
  createdAt     DateTime  @default(now())
  fmi_users     fmi_users @relation(fields: [userId], references: [id])

  @@unique([userId, symbol])
  @@schema("public")
}

model fmi_risk_limits {
  id           String    @id
  userId       String
  limitType    LimitType
  symbol       String?
  limitValue   Decimal   @db.Decimal(18, 8)
  currentValue Decimal   @default(0) @db.Decimal(18, 8)
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime
  fmi_users    fmi_users @relation(fields: [userId], references: [id])

  @@schema("public")
}

model fmi_trades {
  id             String           @id
  tradeId        String           @unique
  userId         String
  symbol         String
  side           TradeSide
  quantity       Decimal          @db.Decimal(18, 8)
  price          Decimal?         @db.Decimal(18, 8)
  orderType      OrderType
  status         TradeStatus      @default(PENDING)
  executedAt     DateTime?
  settledAt      DateTime?
  blockchain     String?
  txHash         String?
  blockNumber    BigInt?
  gasUsed        BigInt?
  fees           Decimal?         @db.Decimal(18, 8)
  metadata       Json?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  fmi_executions fmi_executions[]
  fmi_users      fmi_users        @relation(fields: [userId], references: [id])

  @@schema("public")
}

model fmi_users {
  id              String            @id
  email           String            @unique
  name            String?
  role            UserRole          @default(TRADER)
  isActive        Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  fmi_positions   fmi_positions[]
  fmi_risk_limits fmi_risk_limits[]
  fmi_trades      fmi_trades[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fund_nav_data {
  id                                      String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  fund_id                                 String      @db.Uuid
  date                                    DateTime    @db.Date
  nav                                     Decimal     @db.Decimal(18, 6)
  total_assets                            Decimal     @db.Decimal(78, 18)
  total_liabilities                       Decimal     @default(0) @db.Decimal(78, 18)
  outstanding_shares                      Decimal     @db.Decimal(78, 18)
  previous_nav                            Decimal?    @db.Decimal(18, 6)
  change_amount                           Decimal?    @db.Decimal(18, 6)
  change_percent                          Decimal?    @db.Decimal(8, 4)
  source                                  String      @default("manual")
  validated                               Boolean?    @default(false)
  validated_by                            String?     @db.Uuid
  validated_at                            DateTime?   @db.Timestamptz(6)
  notes                                   String?
  calculation_method                      String?
  market_conditions                       String?
  created_at                              DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime?   @default(now()) @db.Timestamptz(6)
  created_by                              String?     @db.Uuid
  users_fund_nav_data_created_byTousers   auth_users? @relation("fund_nav_data_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_fund_nav_data_validated_byTousers auth_users? @relation("fund_nav_data_validated_byTousers", fields: [validated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([fund_id, date], map: "unique_fund_date")
  @@index([fund_id, date(sort: Desc)], map: "idx_fund_nav_data_fund_date")
  @@index([validated, date(sort: Desc)], map: "idx_fund_nav_data_validated")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model geographic_jurisdictions {
  id                                                                                                              String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  country_code                                                                                                    String                           @unique @db.Char(2)
  country_code_3                                                                                                  String                           @unique @db.Char(3)
  country_name                                                                                                    String
  region                                                                                                          String
  regulatory_regime                                                                                               String?
  sanctions_risk_level                                                                                            String?                          @default("low")
  fatf_compliance_status                                                                                          String?                          @default("compliant")
  tax_treaty_status                                                                                               String?
  kyc_requirements_level                                                                                          String?                          @default("standard")
  aml_risk_rating                                                                                                 String?                          @default("low")
  is_ofac_sanctioned                                                                                              Boolean?                         @default(false)
  is_eu_sanctioned                                                                                                Boolean?                         @default(false)
  is_un_sanctioned                                                                                                Boolean?                         @default(false)
  offshore_financial_center                                                                                       Boolean?                         @default(false)
  created_at                                                                                                      DateTime?                        @default(now()) @db.Timestamptz(6)
  updated_at                                                                                                      DateTime?                        @default(now()) @db.Timestamptz(6)
  regulatory_equivalence_mapping_regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions regulatory_equivalence_mapping[] @relation("regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions")
  regulatory_equivalence_mapping_regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions       regulatory_equivalence_mapping[] @relation("regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions")
  token_geographic_restrictions                                                                                   token_geographic_restrictions[]

  @@index([region, regulatory_regime], map: "idx_jurisdictions_region")
  @@index([is_ofac_sanctioned, is_eu_sanctioned, is_un_sanctioned], map: "idx_jurisdictions_sanctions")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model guardian_api_tests {
  id                                                                               String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  test_name                                                                        String                @db.VarChar(100)
  test_type                                                                        String                @db.VarChar(50)
  endpoint                                                                         String                @db.VarChar(200)
  http_method                                                                      String                @db.VarChar(10)
  request_payload                                                                  Json?
  request_headers                                                                  Json?
  response_status                                                                  Int?
  response_payload                                                                 Json?
  response_headers                                                                 Json?
  guardian_wallet_id                                                               String?               @db.VarChar(100)
  guardian_operation_id                                                            String?               @db.VarChar(100)
  guardian_wallet_address                                                          String?               @db.VarChar(100)
  execution_time_ms                                                                Int?
  success                                                                          Boolean               @default(false)
  error_message                                                                    String?
  created_at                                                                       DateTime?             @default(now()) @db.Timestamptz(6)
  created_by                                                                       String?               @db.VarChar(100)
  notes                                                                            String?
  guardian_operations                                                              guardian_operations[]
  guardian_wallets_guardian_wallets_creation_request_idToguardian_api_tests        guardian_wallets[]    @relation("guardian_wallets_creation_request_idToguardian_api_tests")
  guardian_wallets_guardian_wallets_operation_check_request_idToguardian_api_tests guardian_wallets[]    @relation("guardian_wallets_operation_check_request_idToguardian_api_tests")
  guardian_wallets_guardian_wallets_wallet_details_request_idToguardian_api_tests  guardian_wallets[]    @relation("guardian_wallets_wallet_details_request_idToguardian_api_tests")

  @@index([created_at], map: "idx_guardian_api_tests_created_at")
  @@index([guardian_operation_id], map: "idx_guardian_api_tests_guardian_operation_id")
  @@index([guardian_wallet_id], map: "idx_guardian_api_tests_guardian_wallet_id")
  @@index([test_type], map: "idx_guardian_api_tests_test_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model guardian_operations {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id       String              @unique @db.VarChar(100)
  operation_type     String              @db.VarChar(50)
  operation_status   String?             @db.VarChar(50)
  guardian_wallet_id String?             @db.VarChar(100)
  related_test_id    String?             @db.Uuid
  operation_result   Json?
  operation_error    Json?
  created_at         DateTime?           @default(now()) @db.Timestamptz(6)
  last_checked_at    DateTime?           @default(now()) @db.Timestamptz(6)
  completed_at       DateTime?           @db.Timestamptz(6)
  check_count        Int?                @default(0)
  notes              String?
  guardian_api_tests guardian_api_tests? @relation(fields: [related_test_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation_id], map: "idx_guardian_operations_operation_id")
  @@index([operation_status], map: "idx_guardian_operations_status")
  @@index([guardian_wallet_id], map: "idx_guardian_operations_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model guardian_wallets {
  id                                                                                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  guardian_wallet_id                                                                 String              @unique @db.VarChar(100)
  guardian_operation_id                                                              String?             @db.VarChar(100)
  guardian_internal_id                                                               String?             @db.VarChar(100)
  wallet_name                                                                        String?             @db.VarChar(200)
  wallet_status                                                                      String?             @db.VarChar(50)
  wallet_addresses                                                                   Json?
  wallet_metadata                                                                    Json?
  creation_request_id                                                                String?             @db.Uuid
  operation_check_request_id                                                         String?             @db.Uuid
  wallet_details_request_id                                                          String?             @db.Uuid
  requested_at                                                                       DateTime?           @default(now()) @db.Timestamptz(6)
  operation_completed_at                                                             DateTime?           @db.Timestamptz(6)
  wallet_retrieved_at                                                                DateTime?           @db.Timestamptz(6)
  test_notes                                                                         String?
  created_by                                                                         String?             @db.VarChar(100)
  updated_at                                                                         DateTime?           @default(now()) @db.Timestamptz(6)
  guardian_api_tests_guardian_wallets_creation_request_idToguardian_api_tests        guardian_api_tests? @relation("guardian_wallets_creation_request_idToguardian_api_tests", fields: [creation_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guardian_api_tests_guardian_wallets_operation_check_request_idToguardian_api_tests guardian_api_tests? @relation("guardian_wallets_operation_check_request_idToguardian_api_tests", fields: [operation_check_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guardian_api_tests_guardian_wallets_wallet_details_request_idToguardian_api_tests  guardian_api_tests? @relation("guardian_wallets_wallet_details_request_idToguardian_api_tests", fields: [wallet_details_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([guardian_wallet_id], map: "idx_guardian_wallets_guardian_wallet_id")
  @@index([requested_at], map: "idx_guardian_wallets_requested_at")
  @@index([wallet_status], map: "idx_guardian_wallets_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model health_checks {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  service       String    @unique
  status        String
  response_time Int?
  details       Json?     @default("{}")
  last_check    DateTime? @default(now()) @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([service], map: "idx_health_checks_service")
  @@schema("public")
}

model investor_approvals {
  id                 String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  investor_id        String      @db.Uuid
  reviewer_id        String?     @db.Uuid
  status             String      @default("pending")
  rejection_reason   String?
  approval_date      DateTime?   @db.Timestamptz(6)
  submission_date    DateTime?   @default(now()) @db.Timestamptz(6)
  approval_type      String
  required_documents Json?
  review_notes       String?
  metadata           Json?
  created_at         DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?   @default(now()) @db.Timestamptz(6)
  investors          investors   @relation(fields: [investor_id], references: [investor_id], onDelete: NoAction, onUpdate: NoAction)
  users              auth_users? @relation(fields: [reviewer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approval_type], map: "idx_investor_approvals_approval_type")
  @@index([investor_id], map: "idx_investor_approvals_investor_id")
  @@index([status], map: "idx_investor_approvals_status")
  @@schema("public")
}

model investor_group_members {
  group_id        String          @db.Uuid
  investor_id     String          @db.Uuid
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  investor_groups investor_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "investor_group_members_group_fkey")
  investors       investors       @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "investor_group_members_investor_fkey")

  @@id([group_id, investor_id])
  @@schema("public")
}

model investor_groups {
  id                        String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                      String
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  project_id                String?                     @db.Uuid
  description               String?
  member_count              Int                         @default(0)
  group                     String?
  investor_group_members    investor_group_members[]
  projects                  projects?                   @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  investor_groups_investors investor_groups_investors[]

  @@schema("public")
}

model investor_groups_investors {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  group_id        String          @db.Uuid
  investor_id     String          @db.Uuid
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  investor_groups investor_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  investors       investors       @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([group_id, investor_id])
  @@index([group_id], map: "idx_investor_groups_investors_group_id")
  @@index([investor_id], map: "idx_investor_groups_investors_investor_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model investors {
  investor_id               String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                      String
  email                     String
  type                      String
  wallet_address            String?
  kyc_status                kyc_status
  lastUpdated               String?
  verification_details      Json?
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  kyc_expiry_date           DateTime?                   @db.Timestamptz(6)
  company                   String?
  notes                     String?
  investor_status           String?                     @default("pending")
  investor_type             String?                     @default("individual")
  onboarding_completed      Boolean?                    @default(false)
  risk_assessment           Json?
  profile_data              Json?
  accreditation_status      String?                     @default("not_started")
  accreditation_expiry_date DateTime?                   @db.Timestamptz(6)
  accreditation_type        String?
  tax_residency             String?
  tax_id_number             String?
  investment_preferences    Json?
  last_compliance_check     DateTime?                   @db.Timestamptz(6)
  cap_table_investors       cap_table_investors[]
  compliance_checks         compliance_checks[]
  distributions             distributions[]
  investor_approvals        investor_approvals[]
  investor_documents        investor_documents[]
  investor_group_members    investor_group_members[]
  investor_groups_investors investor_groups_investors[]
  kyc_screening_logs        kyc_screening_logs[]
  subscriptions             subscriptions[]
  token_allocations         token_allocations[]
  wallets                   wallets[]

  @@index([kyc_status], map: "idx_investors_kyc_status")
  @@index([type], map: "idx_investors_type")
  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model investors_backup_pre_kyc_update {
  investor_id               String?   @db.Uuid
  name                      String?
  email                     String?
  type                      String?
  wallet_address            String?
  kyc_status                String?
  lastUpdated               String?
  verification_details      Json?
  created_at                DateTime? @db.Timestamptz(6)
  updated_at                DateTime? @db.Timestamptz(6)
  kyc_expiry_date           DateTime? @db.Timestamptz(6)
  company                   String?
  notes                     String?
  investor_status           String?
  investor_type             String?
  onboarding_completed      Boolean?
  risk_assessment           Json?
  profile_data              Json?
  accreditation_status      String?
  accreditation_expiry_date DateTime? @db.Timestamptz(6)
  accreditation_type        String?
  tax_residency             String?
  tax_id_number             String?
  investment_preferences    Json?
  last_compliance_check     DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model invoice {
  invoice_id              Int       @id @default(autoincrement())
  provider_id             Int?
  patient_name            String?   @db.VarChar(255)
  patient_dob             DateTime? @db.Date
  service_dates           String?   @db.VarChar(255)
  procedure_codes         String?   @db.VarChar(255)
  diagnosis_codes         String?   @db.VarChar(255)
  billed_amount           Decimal?  @db.Decimal(10, 2)
  adjustments             Decimal?  @db.Decimal(10, 2)
  net_amount_due          Decimal?  @db.Decimal(10, 2)
  payer_id                Int?
  policy_number           String?   @db.VarChar(50)
  invoice_number          String?   @unique @db.VarChar(50)
  invoice_date            DateTime? @db.Date
  due_date                DateTime? @db.Date
  factoring_discount_rate Decimal?  @db.Decimal(5, 2)
  factoring_terms         String?
  upload_timestamp        DateTime? @default(now()) @db.Timestamp(6)
  pool_id                 Int?
  payer                   payer?    @relation(fields: [payer_id], references: [payer_id], onDelete: NoAction, onUpdate: NoAction)
  pool                    pool?     @relation(fields: [pool_id], references: [pool_id], onDelete: NoAction, onUpdate: NoAction)
  provider                provider? @relation(fields: [provider_id], references: [provider_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([payer_id], map: "idx_invoice_payer_id")
  @@index([pool_id], map: "idx_invoice_pool_id")
  @@index([provider_id], map: "idx_invoice_provider_id")
  @@schema("public")
}

model invoices {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount          Decimal?  @db.Decimal
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  currency        String?
  due_date        DateTime? @db.Date
  invoice_number  String?
  issued_date     DateTime? @db.Date
  paid            Boolean?  @default(false)
  subscription_id String?   @db.Uuid

  @@schema("public")
}

model issuer_access_roles {
  id                                          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_id                                   String      @db.Uuid
  user_id                                     String      @db.Uuid
  role                                        issuer_role
  created_at                                  DateTime    @default(now()) @db.Timestamptz(6)
  updated_at                                  DateTime    @default(now()) @db.Timestamptz(6)
  created_by                                  String      @db.Uuid
  updated_by                                  String      @db.Uuid
  users_issuer_access_roles_created_byTousers auth_users  @relation("issuer_access_roles_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_access_roles_updated_byTousers auth_users  @relation("issuer_access_roles_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_access_roles_user_idTousers    auth_users  @relation("issuer_access_roles_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([issuer_id, user_id])
  @@index([issuer_id], map: "idx_issuer_access_roles_issuer_id")
  @@index([role], map: "idx_issuer_access_roles_role")
  @@index([user_id], map: "idx_issuer_access_roles_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model issuer_detail_documents {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id    String    @db.Uuid
  document_type String
  document_url  String
  document_name String
  uploaded_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  uploaded_by   String?   @db.Uuid
  status        String?   @default("active")
  metadata      Json?
  is_public     Boolean   @default(false)
  projects      projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model issuer_documents {
  id                                        String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_id                                 String               @db.Uuid
  document_type                             document_type
  document_name                             String
  file_url                                  String
  status                                    document_status      @default(pending)
  is_public                                 Boolean              @default(false)
  uploaded_at                               DateTime             @default(now()) @db.Timestamptz(6)
  expires_at                                DateTime?            @db.Timestamptz(6)
  last_reviewed_at                          DateTime?            @db.Timestamptz(6)
  reviewed_by                               String?              @db.Uuid
  version                                   Int                  @default(1)
  metadata                                  Json                 @default("{}")
  created_at                                DateTime             @default(now()) @db.Timestamptz(6)
  updated_at                                DateTime             @default(now()) @db.Timestamptz(6)
  created_by                                String               @db.Uuid
  updated_by                                String               @db.Uuid
  document_workflows                        document_workflows[]
  users_issuer_documents_created_byTousers  auth_users           @relation("issuer_documents_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_documents_reviewed_byTousers auth_users?          @relation("issuer_documents_reviewed_byTousers", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_documents_updated_byTousers  auth_users           @relation("issuer_documents_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([issuer_id], map: "idx_issuer_documents_issuer_id")
  @@index([status], map: "idx_issuer_documents_status")
  @@index([document_type], map: "idx_issuer_documents_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model investor_documents {
  id                                          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  investor_id                                 String        @db.Uuid
  document_type                               document_type
  document_name                               String
  file_url                                    String
  status                                      document_status @default(pending)
  is_public                                   Boolean       @default(false)
  uploaded_at                                 DateTime      @default(now()) @db.Timestamptz(6)
  expires_at                                  DateTime?     @db.Timestamptz(6)
  last_reviewed_at                            DateTime?     @db.Timestamptz(6)
  reviewed_by                                 String?       @db.Uuid
  version                                     Int           @default(1)
  metadata                                    Json          @default("{}")
  created_at                                  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at                                  DateTime      @default(now()) @db.Timestamptz(6)
  created_by                                  String        @db.Uuid
  updated_by                                  String        @db.Uuid
  investors                                   investors     @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  users_investor_documents_created_byTousers  auth_users    @relation("investor_documents_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_investor_documents_reviewed_byTousers auth_users?   @relation("investor_documents_reviewed_byTousers", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_investor_documents_updated_byTousers  auth_users    @relation("investor_documents_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([investor_id], map: "idx_investor_documents_investor_id")
  @@index([status], map: "idx_investor_documents_status") 
  @@index([document_type], map: "idx_investor_documents_type")
  @@schema("public")
}

model kyc_screening_logs {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id     String    @db.Uuid
  previous_status String?
  new_status      String?
  method          String
  notes           String?
  performed_by    String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  investors       investors @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model mfa_policies {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  required   Boolean
  applies_to String[]  @db.Uuid
  exceptions String[]  @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model monitoring_metrics {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  service     String
  metric_name String
  value       Decimal   @db.Decimal
  unit        String?   @default("count")
  tags        Json?     @default("{}")
  recorded_at DateTime? @default(now()) @db.Timestamptz(6)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([metric_name], map: "idx_monitoring_metrics_metric_name")
  @@index([service, recorded_at], map: "idx_monitoring_metrics_service_time")
  @@schema("public")
}

model moonpay_asset_cache {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contract_address String
  token_id         String
  asset_data       Json
  cached_at        DateTime? @default(now()) @db.Timestamptz(6)
  expires_at       DateTime? @default(dbgenerated("(now() + '24:00:00'::interval)")) @db.Timestamptz(6)

  @@unique([contract_address, token_id])
  @@index([contract_address, token_id], map: "idx_moonpay_asset_cache_contract_token")
  @@index([expires_at], map: "idx_moonpay_asset_cache_expires_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_compliance_alerts {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  alert_id            String?   @unique
  alert_type          String
  severity            String    @default("medium")
  status              String    @default("open")
  customer_id         String?
  transaction_id      String?
  entity_type         String?
  entity_id           String?
  risk_score          Decimal?  @db.Decimal
  risk_level          String?
  title               String
  description         String
  details             Json?     @default("{}")
  screening_results   Json?     @default("{}")
  recommended_actions String[]
  assigned_to         String?
  reviewed_by         String?
  resolved_by         String?
  escalated_to        String?
  resolution_notes    String?
  auto_generated      Boolean?  @default(false)
  source              String?   @default("moonpay_api")
  external_reference  String?
  related_alerts      String[]
  metadata            Json?     @default("{}")
  triggered_at        DateTime? @default(now()) @db.Timestamptz(6)
  reviewed_at         DateTime? @db.Timestamptz(6)
  resolved_at         DateTime? @db.Timestamptz(6)
  escalated_at        DateTime? @db.Timestamptz(6)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@index([alert_id], map: "idx_moonpay_compliance_alerts_alert_id")
  @@index([assigned_to], map: "idx_moonpay_compliance_alerts_assigned_to")
  @@index([customer_id], map: "idx_moonpay_compliance_alerts_customer_id")
  @@index([details], map: "idx_moonpay_compliance_alerts_details", type: Gin)
  @@index([entity_type, entity_id], map: "idx_moonpay_compliance_alerts_entity")
  @@index([risk_level], map: "idx_moonpay_compliance_alerts_risk_level")
  @@index([severity], map: "idx_moonpay_compliance_alerts_severity")
  @@index([status], map: "idx_moonpay_compliance_alerts_status")
  @@index([transaction_id], map: "idx_moonpay_compliance_alerts_transaction_id")
  @@index([triggered_at], map: "idx_moonpay_compliance_alerts_triggered_at")
  @@index([alert_type], map: "idx_moonpay_compliance_alerts_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_customers {
  id                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_customer_id         String?   @unique
  moonpay_customer_id          String?   @unique
  email                        String?
  first_name                   String?
  last_name                    String?
  date_of_birth                DateTime? @db.Date
  address                      Json?
  kyc_level                    String?   @default("none")
  identity_verification_status String?
  verification_documents       Json?
  transaction_limits           Json?
  preferred_payment_methods    String[]
  created_at                   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([email], map: "idx_moonpay_customers_email")
  @@index([external_customer_id], map: "idx_moonpay_customers_external_id")
  @@index([moonpay_customer_id], map: "idx_moonpay_customers_moonpay_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_passes {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_pass_id String?   @unique
  project_id       String
  contract_address String
  token_id         String
  metadata_url     String?
  name             String
  description      String?
  image            String?
  attributes       Json?
  owner_address    String?
  status           String
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([contract_address, token_id], map: "idx_moonpay_passes_contract_token")
  @@index([owner_address], map: "idx_moonpay_passes_owner")
  @@index([project_id], map: "idx_moonpay_passes_project_id")
  @@index([status], map: "idx_moonpay_passes_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_policies {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_policy_id String?   @unique
  name               String
  type               String
  rules              Json
  is_active          Boolean?  @default(true)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_policy_logs {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  log_id                String?   @unique
  policy_id             String
  policy_name           String
  policy_type           String
  action_type           String
  execution_status      String    @default("success")
  entity_type           String?
  entity_id             String?
  customer_id           String?
  transaction_id        String?
  rule_conditions       Json?     @default("{}")
  rule_results          Json?     @default("{}")
  violation_details     Json?     @default("{}")
  before_state          Json?     @default("{}")
  after_state           Json?     @default("{}")
  triggered_by          String?
  executed_by           String?
  approved_by           String?
  reason                String?
  notes                 String?
  severity              String?   @default("info")
  compliance_impact     String?
  requires_action       Boolean?  @default(false)
  action_taken          String?
  follow_up_required    Boolean?  @default(false)
  follow_up_date        DateTime? @db.Timestamptz(6)
  retention_period_days Int?      @default(2555)
  auto_generated        Boolean?  @default(false)
  source                String?   @default("moonpay_policy_engine")
  correlation_id        String?
  session_id            String?
  ip_address            String?   @db.Inet
  user_agent            String?
  metadata              Json?     @default("{}")
  executed_at           DateTime? @default(now()) @db.Timestamptz(6)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([action_type], map: "idx_moonpay_policy_logs_action_type")
  @@index([correlation_id], map: "idx_moonpay_policy_logs_correlation_id")
  @@index([customer_id], map: "idx_moonpay_policy_logs_customer_id")
  @@index([entity_type, entity_id], map: "idx_moonpay_policy_logs_entity")
  @@index([executed_at], map: "idx_moonpay_policy_logs_executed_at")
  @@index([execution_status], map: "idx_moonpay_policy_logs_execution_status")
  @@index([log_id], map: "idx_moonpay_policy_logs_log_id")
  @@index([metadata], map: "idx_moonpay_policy_logs_metadata", type: Gin)
  @@index([policy_id], map: "idx_moonpay_policy_logs_policy_id")
  @@index([policy_type], map: "idx_moonpay_policy_logs_policy_type")
  @@index([requires_action], map: "idx_moonpay_policy_logs_requires_action")
  @@index([severity], map: "idx_moonpay_policy_logs_severity")
  @@index([transaction_id], map: "idx_moonpay_policy_logs_transaction_id")
  @@schema("public")
}

model moonpay_projects {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_project_id String?   @unique
  name                String
  description         String?
  contract_address    String?
  network             String
  total_supply        Int?
  max_supply          Int?
  metadata            Json?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_swap_transactions {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_transaction_id String?   @unique
  quote_id                String
  status                  String
  base_currency           String
  quote_currency          String
  base_amount             Decimal   @db.Decimal
  quote_amount            Decimal   @db.Decimal
  from_address            String
  to_address              String
  tx_hash                 String?
  fees                    Json?
  metadata                Json?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_moonpay_swap_transactions_created_at")
  @@index([external_transaction_id], map: "idx_moonpay_swap_transactions_external_id")
  @@index([status], map: "idx_moonpay_swap_transactions_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_transactions {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_transaction_id String?   @unique
  type                    String
  status                  String    @default("pending")
  crypto_currency         String
  fiat_currency           String
  crypto_amount           Decimal?  @db.Decimal
  fiat_amount             Decimal   @db.Decimal
  wallet_address          String?
  payment_method          String?
  customer_id             String?
  redirect_url            String?
  widget_redirect_url     String?
  fees                    Json?
  metadata                Json?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@index([wallet_address, type, status, created_at], map: "idx_moonpay_transactions_composite")
  @@index([created_at], map: "idx_moonpay_transactions_created_at")
  @@index([customer_id], map: "idx_moonpay_transactions_customer_id")
  @@index([external_transaction_id], map: "idx_moonpay_transactions_external_id")
  @@index([status], map: "idx_moonpay_transactions_status")
  @@index([type], map: "idx_moonpay_transactions_type")
  @@index([wallet_address], map: "idx_moonpay_transactions_wallet_address")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_webhook_config {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  webhook_id                  String?   @unique
  url                         String
  environment                 String    @default("sandbox")
  events                      String[]  @default([])
  status                      String    @default("active")
  version                     String?   @default("v1")
  secret_key                  String?
  description                 String?
  retry_policy                Json?     @default("{\"timeout\": 30000, \"max_delay\": 30000, \"max_attempts\": 3, \"initial_delay\": 1000, \"backoff_strategy\": \"exponential\"}")
  headers                     Json?     @default("{}")
  delivery_settings           Json?     @default("{\"enabled\": true, \"timeout\": 30, \"verify_ssl\": true}")
  metadata                    Json?     @default("{}")
  last_delivery_attempt       DateTime? @db.Timestamptz(6)
  last_successful_delivery    DateTime? @db.Timestamptz(6)
  last_failure_reason         String?
  delivery_attempts_count     Int?      @default(0)
  successful_deliveries_count Int?      @default(0)
  failed_deliveries_count     Int?      @default(0)
  is_active                   Boolean?  @default(true)
  created_by                  String?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_moonpay_webhook_config_created_at")
  @@index([environment], map: "idx_moonpay_webhook_config_environment")
  @@index([events], map: "idx_moonpay_webhook_config_events", type: Gin)
  @@index([status], map: "idx_moonpay_webhook_config_status")
  @@index([webhook_id], map: "idx_moonpay_webhook_config_webhook_id")
  @@schema("public")
}

model moonpay_webhook_events {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_type            String
  event_data            Json
  signature             String
  processed             Boolean?  @default(false)
  processing_attempts   Int?      @default(0)
  last_processing_error String?
  received_at           DateTime? @default(now()) @db.Timestamptz(6)
  processed_at          DateTime? @db.Timestamptz(6)

  @@index([processed], map: "idx_moonpay_webhook_events_processed")
  @@index([received_at], map: "idx_moonpay_webhook_events_received_at")
  @@index([event_type], map: "idx_moonpay_webhook_events_type")
  @@schema("public")
}

model multi_sig_confirmations {
  id                     String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  transaction_id         String?                 @db.Uuid
  owner                  String
  signature              String
  created_at             DateTime?               @default(now()) @db.Timestamptz(6)
  confirmed              Boolean?
  signer                 String?
  timestamp              DateTime?               @db.Timestamptz(6)
  multi_sig_transactions multi_sig_transactions? @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model multi_sig_transactions {
  id                         String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id                  String?                   @db.Uuid
  destination_wallet_address String
  value                      String
  data                       String                    @default("0x")
  nonce                      Int
  hash                       String
  executed                   Boolean                   @default(false)
  confirmations              Int                       @default(0)
  blockchain                 String
  token_address              String?
  token_symbol               String?
  created_at                 DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                 @default(now()) @db.Timestamptz(6)
  blockchain_specific_data   Json?
  description                String?
  required                   Int?
  to                         String?
  multi_sig_confirmations    multi_sig_confirmations[]
  multi_sig_wallets          multi_sig_wallets?        @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([blockchain])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model multi_sig_wallets {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                   String
  blockchain             String
  address                String
  owners                 String[]
  threshold              Int
  created_by             String?                  @db.Uuid
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  status                 String?                  @default("active")
  blocked_at             DateTime?                @db.Timestamptz(6)
  block_reason           String?
  distributions          distributions[]
  multi_sig_transactions multi_sig_transactions[]
  users                  auth_users?              @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_proposals  transaction_proposals[]
  wallet_details         wallet_details[]

  @@index([blockchain])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_oracle_configs {
  id                   String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  fund_id              String      @db.Uuid
  name                 String
  oracle_type          String
  endpoint_url         String?
  api_key_encrypted    String?
  response_path        String?
  update_frequency     Int?        @default(3600)
  last_update          DateTime?   @db.Timestamptz(6)
  min_nav              Decimal?    @db.Decimal(18, 6)
  max_nav              Decimal?    @db.Decimal(18, 6)
  max_change_percent   Decimal?    @default(10.0) @db.Decimal(8, 4)
  active               Boolean?    @default(true)
  success_rate         Decimal?    @default(0.0) @db.Decimal(5, 2)
  last_error           String?
  consecutive_failures Int?        @default(0)
  created_at           DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?   @default(now()) @db.Timestamptz(6)
  created_by           String?     @db.Uuid
  users                auth_users? @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([active], map: "idx_nav_oracle_configs_active")
  @@index([fund_id], map: "idx_nav_oracle_configs_fund_id")
  @@schema("public")
}

model notifications {
  id              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String
  type            String
  title           String
  description     String
  date            DateTime @default(now()) @db.Timestamptz(6)
  read            Boolean  @default(false)
  action_required Boolean  @default(false)
  action_url      String?
  metadata        Json?
  created_at      DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model onboarding_restrictions {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type       String
  value      String
  reason     String
  active     Boolean  @default(true)
  created_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  created_by String

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model onchain_claims {
  id                     String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  identity_id            String?             @db.Uuid
  issuer_id              String?             @db.Uuid
  topic                  Int
  data                   String?
  signature              String
  valid_from             DateTime?           @db.Timestamptz(6)
  valid_to               DateTime?           @db.Timestamptz(6)
  verification_timestamp DateTime            @default(now()) @db.Timestamptz(6)
  status                 String
  onchain_identities     onchain_identities? @relation(fields: [identity_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  onchain_issuers        onchain_issuers?    @relation(fields: [issuer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([identity_id, issuer_id, topic, signature])
  @@index([identity_id], map: "idx_onchain_claims_identity_id")
  @@index([issuer_id], map: "idx_onchain_claims_issuer_id")
  @@index([topic], map: "idx_onchain_claims_topic")
  @@schema("public")
}

model onchain_identities {
  id                           String                         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                      String?                        @db.Uuid
  identity_address             String
  blockchain                   String
  network                      String
  created_at                   DateTime                       @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime                       @default(now()) @db.Timestamptz(6)
  is_active                    Boolean                        @default(true)
  onchain_claims               onchain_claims[]
  users                        auth_users?                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  onchain_verification_history onchain_verification_history[]

  @@unique([identity_address, blockchain, network])
  @@unique([user_id, blockchain, network])
  @@index([identity_address], map: "idx_onchain_identities_identity_address")
  @@index([user_id], map: "idx_onchain_identities_user_id")
  @@schema("public")
}

model onchain_issuers {
  id                 String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  issuer_address     String
  issuer_name        String
  blockchain         String
  network            String
  trusted_for_claims Int[]            @default([])
  created_at         DateTime         @default(now()) @db.Timestamptz(6)
  updated_at         DateTime         @default(now()) @db.Timestamptz(6)
  is_active          Boolean          @default(true)
  onchain_claims     onchain_claims[]

  @@unique([issuer_address, blockchain, network])
  @@schema("public")
}

model onchain_verification_history {
  id                     String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  identity_id            String?             @db.Uuid
  verification_type      String
  required_claims        Int[]               @default([])
  result                 Boolean
  reason                 String?
  verification_timestamp DateTime            @default(now()) @db.Timestamptz(6)
  onchain_identities     onchain_identities? @relation(fields: [identity_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([identity_id], map: "idx_onchain_verification_history_identity_id")
  @@schema("public")
}

model organizations {
  id                    String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String
  created_at            DateTime?            @default(now()) @db.Timestamptz(6)
  legal_name            String?
  registration_number   String?
  registration_date     DateTime?            @db.Timestamptz(6)
  tax_id                String?
  jurisdiction          String?
  business_type         String?
  status                String?              @default("pending")
  contact_email         String?
  contact_phone         String?
  website               String?
  address               Json?
  legal_representatives Json?
  compliance_status     String?              @default("pending_review")
  onboarding_completed  Boolean?             @default(false)
  updated_at            DateTime?            @default(now()) @db.Timestamptz(6)
  whitelist_settings    whitelist_settings[]

  @@schema("public")
}

model payer {
  payer_id Int       @id @default(autoincrement())
  name     String?   @db.VarChar(255)
  invoice  invoice[]

  @@schema("public")
}

model permissions {
  name             String             @id
  description      String
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime           @default(now()) @db.Timestamptz(6)
  role_permissions role_permissions[]

  @@schema("public")
}

model policy_rule_approvers {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  policy_rule_id String    @db.Uuid
  user_id        String    @db.Uuid
  created_by     String    @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  status         String?   @default("pending")
  comment        String?
  timestamp      DateTime? @db.Timestamptz(6)
  rules          rules     @relation(fields: [policy_rule_id], references: [rule_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([policy_rule_id], map: "idx_policy_rule_approvers_rule_id")
  @@index([user_id], map: "idx_policy_rule_approvers_user_id")
  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model policy_rule_approvers_backup {
  policy_rule_id String?   @db.Uuid
  user_id        String?   @db.Uuid
  created_at     DateTime? @db.Timestamptz(6)
  created_by     String?   @db.Uuid
  status         String?
  comment        String?
  timestamp      DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model policy_template_approvers {
  template_id      String           @db.Uuid
  user_id          String           @db.Uuid
  created_by       String?          @db.Uuid
  status           String?          @default("pending")
  timestamp        DateTime?        @default(now()) @db.Timestamptz(6)
  policy_templates policy_templates @relation(fields: [template_id], references: [template_id], onDelete: Cascade, onUpdate: NoAction)
  users            public_users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([template_id, user_id])
  @@index([template_id], map: "idx_policy_template_approvers_template_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model policy_templates {
  template_id               String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_name             String
  description               String?
  template_data             Json
  created_by                String
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  template_type             String?                     @default(dbgenerated("\nCASE\n    WHEN ((template_data ->> 'type'::text) IS NOT NULL) THEN (template_data ->> 'type'::text)\n    ELSE 'general'::text\nEND"))
  status                    String                      @default("active")
  policy_template_approvers policy_template_approvers[]

  @@index([created_at(sort: Desc)], map: "idx_policy_templates_created_at")
  @@index([template_name], map: "idx_policy_templates_name")
  @@index([status], map: "idx_policy_templates_status")
  @@index([template_type], map: "idx_policy_templates_type")
  @@schema("public")
}

model pool {
  pool_id            Int             @id @default(autoincrement())
  pool_name          String?         @db.VarChar(255)
  pool_type          pool_type_enum?
  creation_timestamp DateTime?       @default(now()) @db.Timestamp(6)
  invoice            invoice[]

  @@schema("public")
}

model project_credentials {
  id                    String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  project_id            String                  @db.Uuid
  public_key            String
  key_vault_id          String
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  revoked_at            DateTime?               @db.Timestamptz(6)
  is_active             Boolean?                @default(true)
  credential_usage_logs credential_usage_logs[]
  projects              projects                @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([project_id], map: "idx_project_credentials_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model projects {
  id                            String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                          String
  description                   String?
  created_at                    DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?                  @default(now()) @db.Timestamptz(6)
  project_type                  String?
  token_symbol                  String?
  target_raise                  Decimal?                   @db.Decimal
  authorized_shares             Int?
  share_price                   Decimal?                   @db.Decimal
  company_valuation             Decimal?                   @db.Decimal
  legal_entity                  String?
  jurisdiction                  String?
  tax_id                        String?
  status                        String?                    @default("active")
  is_primary                    Boolean?                   @default(false)
  investment_status             String                     @default("Open")
  estimated_yield_percentage    Decimal?                   @db.Decimal
  duration                      project_duration?
  subscription_start_date       DateTime?                  @db.Timestamptz(6)
  subscription_end_date         DateTime?                  @db.Timestamptz(6)
  transaction_start_date        DateTime?                  @db.Timestamptz(6)
  maturity_date                 DateTime?                  @db.Timestamptz(6)
  currency                      String?                    @default("USD") @db.VarChar(3)
  minimum_investment            Decimal?                   @db.Decimal
  total_notional                Decimal?                   @db.Decimal
  sustainability_classification String?                    @db.VarChar(50)
  esg_risk_rating               String?                    @db.VarChar(20)
  principal_adverse_impacts     String?                    @db.VarChar(20)
  taxonomy_alignment_percentage Decimal?                   @db.Decimal(5, 2)
  risk_profile                  String?                    @db.VarChar(20)
  governance_structure          String?
  compliance_framework          String[]
  third_party_custodian         Boolean?                   @default(false)
  custodian_name                String?
  target_investor_type          String?                    @db.VarChar(20)
  complexity_indicator          String?                    @db.VarChar(20)
  liquidity_terms               String?                    @db.VarChar(50)
  fee_structure_summary         String?
  capital_protection_level      Decimal?                   @db.Decimal(5, 2)
  underlying_assets             String[]
  barrier_level                 Decimal?                   @db.Decimal(10, 2)
  payoff_structure              String?                    @db.VarChar(50)
  voting_rights                 String?                    @db.VarChar(50)
  dividend_policy               String?
  dilution_protection           String[]
  exit_strategy                 String?                    @db.VarChar(50)
  credit_rating                 String?                    @db.VarChar(10)
  coupon_frequency              String?                    @db.VarChar(20)
  callable_features             Boolean?                   @default(false)
  call_date                     DateTime?                  @db.Timestamptz(6)
  call_price                    Decimal?                   @db.Decimal(10, 2)
  security_collateral           String?
  fund_vintage_year             Int?
  investment_stage              String?                    @db.VarChar(50)
  sector_focus                  String[]
  geographic_focus              String[]
  property_type                 String?                    @db.VarChar(50)
  geographic_location           String?
  development_stage             String?                    @db.VarChar(50)
  environmental_certifications  String[]
  debtor_credit_quality         String?                    @db.VarChar(20)
  collection_period_days        Int?
  recovery_rate_percentage      Decimal?                   @db.Decimal(5, 2)
  diversification_metrics       Json?
  project_capacity_mw           Decimal?                   @db.Decimal(10, 2)
  power_purchase_agreements     String?
  regulatory_approvals          String[]
  carbon_offset_potential       Decimal?                   @db.Decimal(10, 2)
  blockchain_network            String?                    @db.VarChar(50)
  smart_contract_audit_status   String?                    @db.VarChar(20)
  consensus_mechanism           String?                    @db.VarChar(50)
  gas_fee_structure             String?
  oracle_dependencies           String[]
  collateral_type               String?                    @db.VarChar(20)
  reserve_management_policy     String?
  audit_frequency               String?                    @db.VarChar(20)
  redemption_mechanism          String?
  depeg_risk_mitigation         String[]
  token_economics               String?
  custody_arrangements          String?
  smart_contract_address        String?                    @db.VarChar(42)
  upgrade_governance            String?
  data_processing_basis         String?                    @db.VarChar(30)
  privacy_policy_link           String?
  data_retention_policy         String?
  business_continuity_plan      Boolean?                   @default(false)
  cybersecurity_framework       String[]
  disaster_recovery_procedures  String?
  tax_reporting_obligations     String[]
  regulatory_permissions        String[]
  cross_border_implications     String?
  cap_tables                    cap_tables[]
  compliance_checks             compliance_checks[]
  distributions                 distributions[]
  investor_groups               investor_groups[]
  issuer_detail_documents       issuer_detail_documents[]
  project_credentials           project_credentials[]
  subscriptions                 subscriptions[]
  token_allocations             token_allocations[]
  token_deployment_history      token_deployment_history[]
  token_templates               token_templates[]
  tokens                        tokens[]

  @@index([is_primary], map: "idx_project_is_primary")
  @@index([blockchain_network], map: "idx_projects_blockchain_network")
  @@index([collateral_type], map: "idx_projects_collateral_type")
  @@index([complexity_indicator], map: "idx_projects_complexity_indicator")
  @@index([esg_risk_rating], map: "idx_projects_esg_risk_rating")
  @@index([project_type], map: "idx_projects_project_type")
  @@index([risk_profile], map: "idx_projects_risk_profile")
  @@index([status, project_type], map: "idx_projects_status_type")
  @@index([sustainability_classification], map: "idx_projects_sustainability_classification")
  @@index([target_investor_type], map: "idx_projects_target_investor_type")
  @@schema("public")
}

model provider {
  provider_id Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  invoice     invoice[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_network_config {
  id                       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id          String?  @db.Uuid
  api_key_encrypted        String
  host_app_name            String
  host_logo_url            String
  enabled_flows            String[] @default(["ONRAMP", "OFFRAMP"])
  environment              String   @default("production")
  webhook_secret_encrypted String?
  configuration            Json?    @default("{}")
  is_active                Boolean  @default(true)
  created_by               String?  @db.Uuid
  created_at               DateTime @default(now()) @db.Timestamptz(6)
  updated_at               DateTime @default(now()) @db.Timestamptz(6)

  @@index([environment], map: "idx_ramp_network_config_environment")
  @@index([is_active], map: "idx_ramp_network_config_is_active")
  @@index([organization_id], map: "idx_ramp_network_config_organization_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_supported_assets {
  id                         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  symbol                     String
  name                       String
  chain                      String
  type                       String
  address                    String?
  logo_url                   String?
  enabled                    Boolean  @default(true)
  hidden                     Boolean  @default(false)
  decimals                   Int
  price_data                 Json?
  currency_code              String   @default("USD")
  min_purchase_amount        Decimal? @db.Decimal(20, 8)
  max_purchase_amount        Decimal? @db.Decimal(20, 8)
  min_purchase_crypto_amount String?
  network_fee                Decimal? @db.Decimal(20, 8)
  flow_type                  String
  last_updated               DateTime @default(now()) @db.Timestamptz(6)
  created_at                 DateTime @default(now()) @db.Timestamptz(6)

  @@unique([symbol, chain, flow_type], map: "ramp_supported_assets_symbol_chain_flow_unique")
  @@index([chain], map: "idx_ramp_supported_assets_chain")
  @@index([enabled], map: "idx_ramp_supported_assets_enabled")
  @@index([flow_type], map: "idx_ramp_supported_assets_flow_type")
  @@index([last_updated(sort: Desc)], map: "idx_ramp_supported_assets_last_updated")
  @@index([symbol], map: "idx_ramp_supported_assets_symbol")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_transaction_events {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id    String            @db.Uuid
  event_type        String
  event_data        Json
  ramp_event_id     String?
  timestamp         DateTime          @default(now()) @db.Timestamptz(6)
  session_id        String?
  user_agent        String?
  ip_address        String?           @db.Inet
  fiat_transactions fiat_transactions @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([event_type], map: "idx_ramp_transaction_events_event_type")
  @@index([session_id], map: "idx_ramp_transaction_events_session_id")
  @@index([timestamp(sort: Desc)], map: "idx_ramp_transaction_events_timestamp")
  @@index([transaction_id], map: "idx_ramp_transaction_events_transaction_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_webhook_events {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_id          String    @unique
  event_type        String
  flow_type         String
  payload           Json
  processing_status String    @default("pending")
  error_message     String?
  processed_at      DateTime? @db.Timestamptz(6)
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  updated_at        DateTime  @default(now()) @db.Timestamptz(6)

  @@index([created_at(sort: Desc)], map: "idx_ramp_webhook_events_created_at")
  @@index([event_id], map: "idx_ramp_webhook_events_event_id")
  @@index([flow_type], map: "idx_ramp_webhook_events_flow_type")
  @@index([event_type], map: "idx_ramp_webhook_events_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_approver_assignments {
  id                    String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  redemption_request_id String           @db.Uuid
  approval_config_id    String           @db.Uuid
  approver_user_id      String           @db.Uuid
  assigned_at           DateTime?        @default(now()) @db.Timestamptz(6)
  status                String?          @default("pending")
  approval_timestamp    DateTime?        @db.Timestamptz(6)
  rejection_reason      String?
  comments              String?
  approval_signature    String?
  ip_address            String?          @db.Inet
  user_agent            String?
  approval_configs      approval_configs @relation(fields: [approval_config_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                 public_users     @relation(fields: [approver_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([redemption_request_id, approver_user_id], map: "unique_redemption_approver")
  @@index([approver_user_id], map: "idx_redemption_approver_assignments_approver_id")
  @@index([approval_config_id], map: "idx_redemption_approver_assignments_config_id")
  @@index([redemption_request_id], map: "idx_redemption_approver_assignments_request_id")
  @@index([status], map: "idx_redemption_approver_assignments_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_approvers {
  id                  String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  redemption_id       String              @db.Uuid
  name                String
  role                String
  avatar_url          String?
  approved            Boolean             @default(false)
  approved_at         DateTime?           @db.Timestamptz(6)
  created_at          DateTime            @default(now()) @db.Timestamptz(6)
  approver_id         String
  status              String?             @default("pending")
  comments            String?
  decision_date       DateTime?           @db.Timestamptz(6)
  updated_at          DateTime?           @default(now()) @db.Timestamptz(6)
  redemption_requests redemption_requests @relation(fields: [redemption_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_redemption_approvers_redemption_id")

  @@index([approver_id], map: "idx_redemption_approvers_approver_id")
  @@index([redemption_id, status], map: "idx_redemption_approvers_redemption_id_status")
  @@index([status], map: "idx_redemption_approvers_status")
  @@schema("public")
}

model redemption_requests {
  id                         String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token_amount               Decimal                    @db.Decimal
  token_type                 String
  redemption_type            String
  status                     String
  source_wallet_address      String
  destination_wallet_address String
  conversion_rate            Decimal                    @db.Decimal
  investor_name              String?
  investor_id                String?
  required_approvals         Int                        @default(1)
  is_bulk_redemption         Boolean?                   @default(false)
  investor_count             Int?                       @default(1)
  rejection_reason           String?
  rejected_by                String?
  rejection_timestamp        DateTime?                  @db.Timestamptz(6)
  created_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  distribution_redemptions   distribution_redemptions[]
  redemption_approvers       redemption_approvers[]
  redemption_settlements     redemption_settlements[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model redemption_rules {
  id                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rule_id                      String?   @db.Uuid
  redemption_type              String
  require_multi_sig_approval   Boolean?  @default(true)
  required_approvers           Int?      @default(2)
  total_approvers              Int?      @default(3)
  notify_investors             Boolean?  @default(true)
  settlement_method            String?   @default("stablecoin")
  immediate_execution          Boolean?
  use_latest_nav               Boolean?
  allow_any_time_redemption    Boolean?
  repurchase_frequency         String?
  lock_up_period               Int?
  submission_window_days       Int?
  lock_tokens_on_request       Boolean?
  use_window_nav               Boolean?
  enable_pro_rata_distribution Boolean?
  queue_unprocessed_requests   Boolean?
  enable_admin_override        Boolean?
  created_at                   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime? @default(now()) @db.Timestamptz(6)
  project_id                   String?   @db.Uuid
  organization_id              String?   @db.Uuid
  product_type                 String?
  product_id                   String?   @db.Uuid
  is_redemption_open          Boolean?
  open_after_date             DateTime? @db.Timestamptz(6)
  allow_continuous_redemption Boolean?
  max_redemption_percentage   Decimal?  @db.Decimal
  redemption_eligibility_rules Json?
  target_raise_amount         Decimal?  @db.Decimal
  redemption_window_id        String?   @db.Uuid
  approval_config_id          String?   @db.Uuid
  rules                        rules?    @relation(fields: [rule_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([rule_id], map: "idx_redemption_rules_rule_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_settlements {
  id                        String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  redemption_request_id     String              @db.Uuid
  settlement_type           String
  status                    String              @default("initiated")
  token_contract_address    String
  token_amount              Decimal             @db.Decimal(78, 18)
  burn_transaction_hash     String?
  burn_gas_used             BigInt?
  burn_gas_price            Decimal?            @db.Decimal(78, 18)
  burn_status               String?             @default("pending")
  burn_confirmed_at         DateTime?           @db.Timestamptz(6)
  transfer_amount           Decimal             @db.Decimal(78, 18)
  transfer_currency         String              @default("USDC")
  transfer_to_address       String
  transfer_transaction_hash String?
  transfer_gas_used         BigInt?
  transfer_gas_price        Decimal?            @db.Decimal(78, 18)
  transfer_status           String?             @default("pending")
  transfer_confirmed_at     DateTime?           @db.Timestamptz(6)
  nav_used                  Decimal?            @db.Decimal(18, 6)
  exchange_rate             Decimal?            @db.Decimal(18, 6)
  settlement_fee            Decimal?            @default(0) @db.Decimal(78, 18)
  gas_estimate              Decimal?            @db.Decimal(78, 18)
  estimated_completion      DateTime?           @db.Timestamptz(6)
  actual_completion         DateTime?           @db.Timestamptz(6)
  error_message             String?
  retry_count               Int?                @default(0)
  last_retry_at             DateTime?           @db.Timestamptz(6)
  created_at                DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?           @default(now()) @db.Timestamptz(6)
  created_by                String?             @db.Uuid
  users                     auth_users?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  redemption_requests       redemption_requests @relation(fields: [redemption_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([burn_status], map: "idx_redemption_settlements_burn_status")
  @@index([created_at], map: "idx_redemption_settlements_created_at")
  @@index([redemption_request_id], map: "idx_redemption_settlements_request_id")
  @@index([status], map: "idx_redemption_settlements_status")
  @@index([transfer_status], map: "idx_redemption_settlements_transfer_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_window_configs {
  id                           String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                         String
  fund_id                      String               @db.Uuid
  frequency                    String
  submission_window_days       Int                  @default(14)
  lock_up_period               Int                  @default(90)
  max_redemption_percentage    Decimal?             @db.Decimal(5, 2)
  enable_pro_rata_distribution Boolean?             @default(true)
  queue_unprocessed_requests   Boolean?             @default(true)
  use_window_nav               Boolean?             @default(true)
  lock_tokens_on_request       Boolean?             @default(true)
  enable_admin_override        Boolean?             @default(false)
  notification_days            Int?                 @default(7)
  auto_process                 Boolean?             @default(false)
  active                       Boolean?             @default(true)
  created_at                   DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?            @default(now()) @db.Timestamptz(6)
  created_by                   String?              @db.Uuid
  users                        auth_users?          @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([active], map: "idx_redemption_window_configs_active")
  @@index([fund_id], map: "idx_redemption_window_configs_fund_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_windows {
  id                                           String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  start_date                                   DateTime    @db.Timestamptz(6)
  end_date                                     DateTime    @db.Timestamptz(6)
  submission_start_date                        DateTime    @db.Timestamptz(6)
  submission_end_date                          DateTime    @db.Timestamptz(6)
  nav                                          Decimal?    @db.Decimal(18, 6)
  nav_date                                     DateTime?   @db.Date
  nav_source                                   String?
  status                                       String      @default("upcoming")
  max_redemption_amount                        Decimal?    @db.Decimal(78, 18)
  current_requests                             Int?        @default(0)
  total_request_value                          Decimal?    @default(0) @db.Decimal(78, 18)
  approved_requests                            Int?        @default(0)
  approved_value                               Decimal?    @default(0) @db.Decimal(78, 18)
  rejected_requests                            Int?        @default(0)
  rejected_value                               Decimal?    @default(0) @db.Decimal(78, 18)
  queued_requests                              Int?        @default(0)
  queued_value                                 Decimal?    @default(0) @db.Decimal(78, 18)
  processed_by                                 String?     @db.Uuid
  processed_at                                 DateTime?   @db.Timestamptz(6)
  notes                                        String?
  created_at                                   DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime?   @default(now()) @db.Timestamptz(6)
  created_by                                   String?     @db.Uuid
  project_id                                   String?     @db.Uuid
  organization_id                              String?     @db.Uuid
  submission_date_mode                         String      // enum in database
  processing_date_mode                         String      // enum in database  
  lockup_days                                  Int?
  processing_offset_days                       Int         @default(0)
  name                                         String?
  users_redemption_windows_created_byTousers   auth_users? @relation("redemption_windows_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_redemption_windows_processed_byTousers auth_users? @relation("redemption_windows_processed_byTousers", fields: [processed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([start_date, end_date], map: "idx_redemption_windows_dates")
  @@index([status], map: "idx_redemption_windows_status")
  @@schema("public")
}

model regulatory_equivalence_mapping {
  id                                                                                                        String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  home_jurisdiction                                                                                         String                   @db.Char(2)
  equivalent_jurisdiction                                                                                   String                   @db.Char(2)
  equivalence_type                                                                                          String
  regulatory_framework                                                                                      String
  recognition_date                                                                                          DateTime                 @db.Date
  expiry_date                                                                                               DateTime?                @db.Date
  mutual_recognition                                                                                        Boolean?                 @default(false)
  passport_rights                                                                                           Boolean?                 @default(false)
  simplified_procedures                                                                                     Boolean?                 @default(false)
  notes                                                                                                     String?
  created_at                                                                                                DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                                                                                                DateTime?                @default(now()) @db.Timestamptz(6)
  geographic_jurisdictions_regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions geographic_jurisdictions @relation("regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions", fields: [equivalent_jurisdiction], references: [country_code], onDelete: NoAction, onUpdate: NoAction)
  geographic_jurisdictions_regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions       geographic_jurisdictions @relation("regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions", fields: [home_jurisdiction], references: [country_code], onDelete: NoAction, onUpdate: NoAction)

  @@unique([home_jurisdiction, equivalent_jurisdiction, regulatory_framework], map: "regulatory_equivalence_mappin_home_jurisdiction_equivalent__key")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ripple_payments {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hash            String    @unique
  from_account    String
  to_account      String
  amount          Decimal   @db.Decimal
  currency        String    @default("XRP")
  fee             Decimal?  @default(0.000012) @db.Decimal
  status          String    @default("pending")
  ledger_index    Int?
  sequence_number Int?
  destination_tag Int?
  source_tag      Int?
  memo            String?
  payment_type    String?   @default("standard")
  from_country    String?
  to_country      String?
  exchange_rate   Decimal?  @db.Decimal
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([from_account, status, created_at], map: "idx_ripple_payments_composite")
  @@index([created_at], map: "idx_ripple_payments_created_at")
  @@index([from_account], map: "idx_ripple_payments_from_account")
  @@index([hash], map: "idx_ripple_payments_hash")
  @@index([status], map: "idx_ripple_payments_status")
  @@index([to_account], map: "idx_ripple_payments_to_account")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model risk_assessments {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String?
  wallet_address  String?
  assessment_type String
  risk_level      String
  risk_score      Decimal?  @db.Decimal
  factors         Json?     @default("{}")
  recommendations Json?     @default("{}")
  metadata        Json?     @default("{}")
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([user_id], map: "idx_risk_assessments_user_id")
  @@index([wallet_address], map: "idx_risk_assessments_wallet_address")
  @@schema("public")
}

model role_permissions {
  role_id         String      @db.Uuid
  permission_name String
  created_at      DateTime    @default(now()) @db.Timestamptz(6)
  permissions     permissions @relation(fields: [permission_name], references: [name], onDelete: Cascade, onUpdate: NoAction)
  roles           roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([role_id, permission_name])
  @@schema("public")
}

model roles {
  id                        String                      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                      String                      @unique
  description               String
  priority                  Int
  created_at                DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                    @default(now()) @db.Timestamptz(6)
  approval_config_approvers approval_config_approvers[]
  role_permissions          role_permissions[]
  user_roles                user_roles[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model rules {
  rule_id               String                  @unique(map: "rules_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rule_name             String
  rule_type             String
  rule_details          Json?
  created_by            String                  @db.Uuid
  status                String?                 @default("active")
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @default(now()) @db.Timestamptz(6)
  is_template           Boolean?                @default(false)
  policy_rule_approvers policy_rule_approvers[]
  redemption_rules      redemption_rules[]
  whitelist_settings    whitelist_settings[]

  @@index([is_template], map: "idx_rules_is_template")
  @@index([rule_id], map: "idx_rules_rule_id")
  @@schema("public")
}

model secure_keys {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  key_id        String    @unique
  encrypted_key String
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  last_used_at  DateTime? @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model security_audit_logs {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  event_type     String
  severity       String
  user_id        String?
  wallet_address String?
  details        Json?     @default("{}")
  metadata       Json?     @default("{}")
  ip_address     String?
  user_agent     String?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([user_id], map: "idx_security_audit_logs_user_id")
  @@index([wallet_address], map: "idx_security_audit_logs_wallet_address")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model security_events {
  id               String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  timestamp        DateTime    @default(now()) @db.Timestamptz(6)
  event_type       String
  severity         String
  user_id          String?     @db.Uuid
  wallet_id        String?     @db.Uuid
  wallet_address   String?
  ip_address       String?
  device_info      String?
  transaction_hash String?
  contract_address String?
  details          String?
  metadata         Json?
  status           String?
  related_events   String[]
  created_at       DateTime    @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?   @db.Timestamptz(6)
  users            auth_users? @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([event_type], map: "idx_security_events_event_type")
  @@index([severity], map: "idx_security_events_severity")
  @@index([timestamp(sort: Desc)], map: "idx_security_events_timestamp")
  @@index([user_id], map: "idx_security_events_user_id")
  @@index([wallet_address], map: "idx_security_events_wallet_address")
  @@index([wallet_id], map: "idx_security_events_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model settlement_metrics {
  id                      String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date                    DateTime                 @unique @db.Date
  total_settlements       Int?                     @default(0)
  successful_settlements  Int?                     @default(0)
  failed_settlements      Int?                     @default(0)
  average_processing_time Unsupported("interval")?
  total_tokens_burned     Decimal?                 @default(0) @db.Decimal(78, 18)
  total_funds_transferred Decimal?                 @default(0) @db.Decimal(78, 18)
  total_gas_used          Decimal?                 @default(0) @db.Decimal(78, 18)
  total_fees_collected    Decimal?                 @default(0) @db.Decimal(78, 18)
  created_at              DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                @default(now()) @db.Timestamptz(6)

  @@index([date(sort: Desc)], map: "idx_settlement_metrics_date")
  @@schema("public")
}

model signatures {
  id                    String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proposal_id           String?                @db.Uuid
  signer                String
  signature             String
  created_at            DateTime?              @default(now()) @db.Timestamptz(6)
  transaction_proposals transaction_proposals? @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model stage_requirements {
  id              String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  stage_id        String
  name            String
  description     String?
  status          String          @default("pending")
  completed_at    DateTime?       @db.Timestamptz(6)
  failure_reason  String?
  order           Int
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  updated_at      DateTime        @default(now()) @db.Timestamptz(6)
  workflow_stages workflow_stages @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stripe_conversion_transactions {
  id                       String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String?       @db.Uuid
  stripe_payment_intent_id String?       @db.VarChar(255)
  stripe_session_id        String?       @db.VarChar(255)
  conversion_type          String        @db.VarChar(20)
  source_currency          String        @db.VarChar(10)
  source_amount            Decimal       @db.Decimal(20, 8)
  source_network           String?       @db.VarChar(50)
  destination_currency     String        @db.VarChar(10)
  destination_amount       Decimal?      @db.Decimal(20, 8)
  destination_network      String?       @db.VarChar(50)
  destination_wallet       String?       @db.VarChar(255)
  exchange_rate            Decimal?      @db.Decimal(20, 8)
  fees                     Decimal?      @db.Decimal(20, 8)
  stripe_fee               Decimal?      @db.Decimal(20, 8)
  network_fee              Decimal?      @db.Decimal(20, 8)
  status                   String?       @default("pending") @db.VarChar(50)
  stripe_status            String?       @db.VarChar(50)
  transaction_hash         String?       @db.VarChar(255)
  block_number             BigInt?
  confirmations            Int?          @default(0)
  metadata                 Json?
  error_message            String?
  created_at               DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?     @default(now()) @db.Timestamptz(6)
  users                    public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([stripe_payment_intent_id], map: "idx_stripe_conversion_transactions_payment_intent")
  @@index([status], map: "idx_stripe_conversion_transactions_status")
  @@index([conversion_type], map: "idx_stripe_conversion_transactions_type")
  @@index([user_id], map: "idx_stripe_conversion_transactions_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stripe_stablecoin_accounts {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?       @db.Uuid
  account_id     String        @unique @db.VarChar(255)
  balance_usdc   Decimal?      @default(0) @db.Decimal(20, 8)
  balance_usdb   Decimal?      @default(0) @db.Decimal(20, 8)
  account_status String?       @default("active") @db.VarChar(50)
  created_at     DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?     @default(now()) @db.Timestamptz(6)
  users          public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_stripe_stablecoin_accounts_account_id")
  @@index([user_id], map: "idx_stripe_stablecoin_accounts_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stripe_webhook_events {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stripe_event_id String    @unique @db.VarChar(255)
  event_type      String    @db.VarChar(100)
  processed       Boolean?  @default(false)
  data            Json
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([processed], map: "idx_stripe_webhook_events_processed")
  @@index([stripe_event_id], map: "idx_stripe_webhook_events_stripe_id")
  @@index([event_type], map: "idx_stripe_webhook_events_type")
  @@schema("public")
}

model subscriptions {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id       String              @db.Uuid
  subscription_id   String
  fiat_amount       Decimal             @db.Decimal
  currency          String
  confirmed         Boolean             @default(false)
  allocated         Boolean             @default(false)
  distributed       Boolean             @default(false)
  notes             String?
  subscription_date DateTime?           @default(now()) @db.Timestamptz(6)
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  project_id        String?             @db.Uuid
  distributions     distributions[]
  investors         investors           @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  projects          projects?           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  token_allocations token_allocations[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model system_processes {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  process_name      String
  start_time        DateTime? @default(now()) @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  status            String?   @default("running")
  error_details     Json?
  metadata          Json?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  progress          Float?    @default(0)
  priority          String?   @default("normal") @db.VarChar(10)
  notification_sent Boolean?  @default(false)
  cancellable       Boolean?  @default(false)

  @@index([process_name], map: "idx_system_processes_process_name")
  @@index([start_time(sort: Desc)], map: "idx_system_processes_start_time")
  @@index([status], map: "idx_system_processes_status")
  @@schema("public")
}

model system_settings {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  key        String    @unique(map: "system_settings_key_unique")
  value      String
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_allocations {
  id                   String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id          String               @db.Uuid
  subscription_id      String               @db.Uuid
  project_id           String?              @db.Uuid
  token_type           String
  token_amount         Decimal              @db.Decimal
  distributed          Boolean              @default(false)
  distribution_date    DateTime?            @db.Timestamptz(6)
  distribution_tx_hash String?
  notes                String?
  allocation_date      DateTime?            @default(now()) @db.Timestamptz(6)
  created_at           DateTime             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?            @default(now()) @db.Timestamptz(6)
  minted               Boolean              @default(false)
  minting_date         DateTime?            @db.Timestamptz(6)
  minting_tx_hash      String?
  standard             token_standard_enum?
  symbol               String?
  token_id             String?              @db.Uuid
  investors            investors            @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "token_allocations_investor_fkey")
  projects             projects?            @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "token_allocations_project_fkey")
  subscriptions        subscriptions        @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "token_allocations_subscription_fkey")
  tokens               tokens?              @relation(fields: [token_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "token_allocations_token_fkey")

  @@index([token_id], map: "idx_token_allocations_token_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_deployment_history {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String   @db.Uuid
  project_id       String   @db.Uuid
  status           String
  transaction_hash String?
  block_number     Int?
  timestamp        DateTime @default(now()) @db.Timestamptz(6)
  error            String?
  blockchain       String
  environment      String
  projects         projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_project_id")
  tokens           tokens   @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token_id")

  @@index([project_id], map: "idx_token_deployment_history_project_id")
  @@index([status], map: "idx_token_deployment_history_status")
  @@index([timestamp], map: "idx_token_deployment_history_timestamp")
  @@index([token_id], map: "idx_token_deployment_history_token_id")
  @@schema("public")
}

model token_deployments {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  network             String
  contract_address    String
  transaction_hash    String
  deployed_at         DateTime? @default(now()) @db.Timestamptz(6)
  deployed_by         String
  status              String    @default("PENDING")
  deployment_data     Json?
  deployment_strategy String?
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_deployments_token_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_designs {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  name             String
  type             String
  status           String    @default("draft")
  total_supply     Decimal   @db.Decimal
  contract_address String?
  deployment_date  DateTime? @db.Timestamptz(6)

  @@schema("public")
}

model token_erc1155_balances {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String    @db.Uuid
  token_type_id String
  address       String
  amount        String
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1155_crafting_recipes {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id             String    @db.Uuid
  recipe_name          String
  input_tokens         Json
  output_token_type_id String
  output_quantity      Int?      @default(1)
  success_rate         Int?      @default(100)
  cooldown_period      Int?      @default(0)
  required_level       Int?      @default(0)
  is_active            Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  tokens               tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1155_discount_tiers {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  min_quantity        Int
  max_quantity        Int?
  discount_percentage String
  tier_name           String?
  is_active           Boolean?  @default(true)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1155_properties {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                    String    @unique(map: "one_erc1155_property_per_token") @db.Uuid
  base_uri                    String?
  metadata_storage            String?   @default("ipfs")
  has_royalty                 Boolean?  @default(false)
  royalty_percentage          String?
  royalty_receiver            String?
  is_burnable                 Boolean?  @default(false)
  is_pausable                 Boolean?  @default(false)
  access_control              String?   @default("ownable")
  updatable_uris              Boolean?  @default(false)
  supply_tracking             Boolean?  @default(true)
  enable_approval_for_all     Boolean?  @default(true)
  sales_config                Json?
  whitelist_config            Json?
  batch_transfer_limits       Json?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)
  dynamic_uri_config          Json?
  batch_minting_config        Json?
  transfer_restrictions       Json?
  container_config            Json?
  dynamic_uris                Boolean?
  batch_minting_enabled       Boolean?  @default(false)
  container_enabled           Boolean?  @default(false)
  use_geographic_restrictions Boolean?  @default(false)
  default_restriction_policy  String?   @default("allowed")
  mint_roles                  String[]
  burning_enabled             Boolean?  @default(false)
  burn_roles                  String[]
  updatable_metadata          Boolean?  @default(false)
  metadata_update_roles       String[]
  supply_tracking_advanced    Boolean?  @default(false)
  max_supply_per_type         String?
  pricing_model               String?   @default("fixed")
  base_price                  String?
  price_multipliers           Json?
  bulk_discount_enabled       Boolean?  @default(false)
  bulk_discount_tiers         Json?
  referral_rewards_enabled    Boolean?  @default(false)
  referral_percentage         String?
  lazy_minting_enabled        Boolean?  @default(false)
  airdrop_enabled             Boolean?  @default(false)
  airdrop_snapshot_block      Int?
  claim_period_enabled        Boolean?  @default(false)
  claim_start_time            DateTime? @db.Timestamptz(6)
  claim_end_time              DateTime? @db.Timestamptz(6)
  crafting_enabled            Boolean?  @default(false)
  fusion_enabled              Boolean?  @default(false)
  token_recipes               Json?
  experience_points_enabled   Boolean?  @default(false)
  leveling_enabled            Boolean?  @default(false)
  consumable_tokens           Boolean?  @default(false)
  marketplace_fees_enabled    Boolean?  @default(false)
  marketplace_fee_percentage  String?
  marketplace_fee_recipient   String?
  bundle_trading_enabled      Boolean?  @default(false)
  atomic_swaps_enabled        Boolean?  @default(false)
  cross_collection_trading    Boolean?  @default(false)
  voting_power_enabled        Boolean?  @default(false)
  voting_weight_per_token     Json?
  community_treasury_enabled  Boolean?  @default(false)
  treasury_percentage         String?
  proposal_creation_threshold String?
  bridge_enabled              Boolean?  @default(false)
  bridgeable_token_types      String[]
  wrapped_versions            Json?
  layer2_support_enabled      Boolean?  @default(false)
  supported_layer2_networks   String[]
  tokens                      tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bridge_enabled], map: "idx_erc1155_bridge")
  @@index([crafting_enabled], map: "idx_erc1155_crafting")
  @@index([lazy_minting_enabled], map: "idx_erc1155_lazy_minting")
  @@index([pricing_model], map: "idx_erc1155_pricing_model")
  @@index([voting_power_enabled], map: "idx_erc1155_voting_power")
  @@schema("public")
}

model token_erc1155_type_configs {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id           String    @db.Uuid
  token_type_id      String
  supply_cap         String?
  mint_price         String?
  is_tradeable       Boolean?  @default(true)
  is_transferable    Boolean?  @default(true)
  utility_type       String?
  rarity_tier        String?
  experience_value   Int?      @default(0)
  crafting_materials Json?
  burn_rewards       Json?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  tokens             tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, token_type_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1155_types {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String    @db.Uuid
  token_type_id    String
  name             String?
  description      String?
  max_supply       String?
  metadata         Json?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  fungibility_type String?   @default("non-fungible")
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  tokens           tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([fungibility_type], map: "idx_token_erc1155_types_fungibility_type")
  @@schema("public")
}

model token_erc1155_uri_mappings {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String    @db.Uuid
  token_type_id String
  uri           String
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1400_controllers {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id    String    @db.Uuid
  address     String
  permissions String[]
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  tokens      tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_erc1400_controllers_token_id")
  @@schema("public")
}

model token_erc1400_corporate_actions {
  id                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                      String    @db.Uuid
  action_type                   String
  announcement_date             DateTime  @db.Date
  record_date                   DateTime? @db.Date
  effective_date                DateTime? @db.Date
  payment_date                  DateTime? @db.Date
  action_details                Json
  impact_on_supply              String?
  impact_on_price               String?
  shareholder_approval_required Boolean?  @default(false)
  voting_deadline               DateTime? @db.Date
  regulatory_approval_required  Boolean?  @default(false)
  status                        String?   @default("announced")
  execution_transaction_hash    String?
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  tokens                        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1400_custody_providers {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id               String    @db.Uuid
  provider_name          String
  provider_type          String
  provider_address       String?
  provider_lei           String?
  custody_agreement_hash String?
  is_active              Boolean?  @default(true)
  certification_level    String?
  jurisdiction           String?
  regulatory_approvals   String[]
  integration_status     String?   @default("pending")
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)
  tokens                 tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1400_documents {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String?   @db.Uuid
  name          String
  document_uri  String
  document_type String?
  document_hash String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens?   @relation(fields: [token_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_erc1400_documents_token_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partition_balances {
  id                       String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  partition_id             String                   @db.Uuid
  holder_address           String
  balance                  String                   @default("0")
  last_updated             DateTime?                @default(now()) @db.Timestamptz(6)
  metadata                 Json?                    @default("{}")
  updated_at               DateTime?                @default(now()) @db.Timestamptz(6)
  token_erc1400_partitions token_erc1400_partitions @relation(fields: [partition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([partition_id, holder_address], map: "token_erc1400_partition_balance_partition_id_holder_address_key")
  @@index([holder_address], map: "idx_partition_balances_holder_address")
  @@index([partition_id], map: "idx_partition_balances_partition_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partition_operators {
  id                       String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  partition_id             String                   @db.Uuid
  holder_address           String
  operator_address         String
  authorized               Boolean?                 @default(true)
  last_updated             DateTime?                @default(now()) @db.Timestamptz(6)
  metadata                 Json?                    @default("{}")
  updated_at               DateTime?                @default(now()) @db.Timestamptz(6)
  token_erc1400_partitions token_erc1400_partitions @relation(fields: [partition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([partition_id, holder_address, operator_address], map: "token_erc1400_partition_opera_partition_id_holder_address_o_key")
  @@index([partition_id], map: "idx_partition_operators_partition_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partition_transfers {
  id                       String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  partition_id             String                   @db.Uuid
  from_address             String
  to_address               String
  amount                   String
  operator_address         String?
  timestamp                DateTime?                @default(now()) @db.Timestamptz(6)
  transaction_hash         String?
  metadata                 Json?                    @default("{}")
  updated_at               DateTime?                @default(now()) @db.Timestamptz(6)
  token_erc1400_partitions token_erc1400_partitions @relation(fields: [partition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([from_address], map: "idx_partition_transfers_from_address")
  @@index([partition_id], map: "idx_partition_transfers_partition_id")
  @@index([to_address], map: "idx_partition_transfers_to_address")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partitions {
  id                                String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                          String                              @db.Uuid
  name                              String
  partition_id                      String
  metadata                          Json?
  created_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  total_supply                      String?                             @default("0")
  partition_type                    String?
  amount                            String?
  updated_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  corporate_actions                 Boolean?                            @default(false)
  custom_features                   Json?
  transferable                      Boolean?                            @default(true)
  token_erc1400_partition_balances  token_erc1400_partition_balances[]
  token_erc1400_partition_operators token_erc1400_partition_operators[]
  token_erc1400_partition_transfers token_erc1400_partition_transfers[]
  tokens                            tokens                              @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_erc1400_partitions_token_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_properties {
  id                                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                                  String    @unique(map: "one_erc1400_property_per_token") @db.Uuid
  initial_supply                            String?
  cap                                       String?
  is_mintable                               Boolean?  @default(false)
  is_burnable                               Boolean?  @default(false)
  is_pausable                               Boolean?  @default(false)
  document_uri                              String?
  document_hash                             String?
  controller_address                        String?
  require_kyc                               Boolean?  @default(true)
  security_type                             String?   @default("equity")
  issuing_jurisdiction                      String?
  issuing_entity_name                       String?
  issuing_entity_lei                        String?
  transfer_restrictions                     Json?
  kyc_settings                              Json?
  compliance_settings                       Json?
  forced_transfers                          Boolean?  @default(false)
  issuance_modules                          Boolean?  @default(false)
  document_management                       Boolean?  @default(false)
  recovery_mechanism                        Boolean?  @default(false)
  created_at                                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                                DateTime? @default(now()) @db.Timestamptz(6)
  regulation_type                           String?
  is_multi_class                            Boolean?  @default(false)
  tranche_transferability                   Boolean?  @default(false)
  decimals                                  Int?      @default(18)
  token_details                             String?
  legal_terms                               String?
  prospectus                                String?
  enforce_kyc                               Boolean?  @default(false)
  forced_redemption_enabled                 Boolean?  @default(false)
  whitelist_enabled                         Boolean?  @default(false)
  holding_period                            Int?
  max_investor_count                        Int?
  investor_accreditation                    Boolean?  @default(false)
  auto_compliance                           Boolean?  @default(false)
  manual_approvals                          Boolean?  @default(false)
  compliance_module                         String?
  is_issuable                               Boolean?  @default(false)
  granular_control                          Boolean?  @default(false)
  dividend_distribution                     Boolean?  @default(false)
  corporate_actions                         Boolean?  @default(false)
  custom_features                           Json?
  geographic_restrictions                   Json?     @default("[]")
  compliance_automation_level               String?   @default("manual")
  whitelist_config                          Json?
  investor_whitelist_enabled                Boolean?  @default(false)
  accredited_investor_only                  Boolean?  @default(false)
  jurisdiction_restrictions                 Json?     @default("[]")
  investor_limits                           Json?     @default("{}")
  use_geographic_restrictions               Boolean?  @default(false)
  default_restriction_policy                String?   @default("blocked")
  institutional_grade                       Boolean?  @default(false)
  custody_integration_enabled               Boolean?  @default(false)
  prime_brokerage_support                   Boolean?  @default(false)
  settlement_integration                    String?
  clearing_house_integration                Boolean?  @default(false)
  central_securities_depository_integration Boolean?  @default(false)
  third_party_custody_addresses             String[]
  institutional_wallet_support              Boolean?  @default(false)
  real_time_compliance_monitoring           Boolean?  @default(false)
  automated_sanctions_screening             Boolean?  @default(false)
  pep_screening_enabled                     Boolean?  @default(false)
  aml_monitoring_enabled                    Boolean?  @default(false)
  transaction_monitoring_rules              Json?
  suspicious_activity_reporting             Boolean?  @default(false)
  compliance_officer_notifications          Boolean?  @default(false)
  regulatory_reporting_automation           Boolean?  @default(false)
  advanced_corporate_actions                Boolean?  @default(false)
  stock_splits_enabled                      Boolean?  @default(false)
  stock_dividends_enabled                   Boolean?  @default(false)
  rights_offerings_enabled                  Boolean?  @default(false)
  spin_offs_enabled                         Boolean?  @default(false)
  mergers_acquisitions_support              Boolean?  @default(false)
  treasury_management_enabled               Boolean?  @default(false)
  buyback_programs_enabled                  Boolean?  @default(false)
  share_repurchase_automation               Boolean?  @default(false)
  advanced_governance_enabled               Boolean?  @default(false)
  proxy_voting_enabled                      Boolean?  @default(false)
  cumulative_voting_enabled                 Boolean?  @default(false)
  weighted_voting_by_class                  Boolean?  @default(false)
  quorum_requirements                       Json?
  voting_delegation_enabled                 Boolean?  @default(false)
  institutional_voting_services             Boolean?  @default(false)
  board_election_support                    Boolean?  @default(false)
  cross_border_trading_enabled              Boolean?  @default(false)
  multi_jurisdiction_compliance             Boolean?  @default(false)
  passport_regime_support                   Boolean?  @default(false)
  treaty_benefits_enabled                   Boolean?  @default(false)
  withholding_tax_automation                Boolean?  @default(false)
  currency_hedging_enabled                  Boolean?  @default(false)
  foreign_ownership_restrictions            Json?
  regulatory_equivalence_mapping            Json?
  enhanced_reporting_enabled                Boolean?  @default(false)
  real_time_shareholder_registry            Boolean?  @default(false)
  beneficial_ownership_tracking             Boolean?  @default(false)
  position_reconciliation_enabled           Boolean?  @default(false)
  regulatory_filing_automation              Boolean?  @default(false)
  audit_trail_comprehensive                 Boolean?  @default(false)
  performance_analytics_enabled             Boolean?  @default(false)
  esg_reporting_enabled                     Boolean?  @default(false)
  traditional_finance_integration           Boolean?  @default(false)
  swift_integration_enabled                 Boolean?  @default(false)
  iso20022_messaging_support                Boolean?  @default(false)
  financial_data_vendor_integration         Boolean?  @default(false)
  market_data_feeds_enabled                 Boolean?  @default(false)
  price_discovery_mechanisms                Json?
  cross_chain_bridge_support                Boolean?  @default(false)
  layer2_scaling_support                    Boolean?  @default(false)
  advanced_risk_management                  Boolean?  @default(false)
  position_limits_enabled                   Boolean?  @default(false)
  concentration_limits                      Json?
  stress_testing_enabled                    Boolean?  @default(false)
  margin_requirements_dynamic               Boolean?  @default(false)
  collateral_management_enabled             Boolean?  @default(false)
  insurance_coverage_enabled                Boolean?  @default(false)
  disaster_recovery_enabled                 Boolean?  @default(false)
  tokens                                    tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([advanced_governance_enabled], map: "idx_erc1400_advanced_governance")
  @@index([real_time_compliance_monitoring], map: "idx_erc1400_compliance_monitoring")
  @@index([cross_border_trading_enabled], map: "idx_erc1400_cross_border")
  @@index([custody_integration_enabled], map: "idx_erc1400_custody_integration")
  @@index([institutional_grade], map: "idx_erc1400_institutional_grade")
  @@index([traditional_finance_integration], map: "idx_erc1400_traditional_finance")
  @@schema("public")
}

model token_erc1400_regulatory_filings {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  filing_type         String
  filing_date         DateTime  @db.Date
  filing_jurisdiction String
  filing_reference    String?
  document_hash       String?
  document_uri        String?
  regulatory_body     String?
  compliance_status   String?   @default("pending")
  due_date            DateTime? @db.Date
  auto_generated      Boolean?  @default(false)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc20_properties {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                    String    @unique(map: "one_property_per_token") @db.Uuid
  initial_supply              String?
  cap                         String?
  is_mintable                 Boolean?  @default(false)
  is_burnable                 Boolean?  @default(false)
  is_pausable                 Boolean?  @default(false)
  token_type                  String?   @default("utility")
  access_control              String?   @default("ownable")
  allow_management            Boolean?  @default(false)
  permit                      Boolean?  @default(false)
  snapshot                    Boolean?  @default(false)
  fee_on_transfer             Json?
  rebasing                    Json?
  governance_features         Json?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)
  transfer_config             Json?
  gas_config                  Json?
  compliance_config           Json?
  whitelist_config            Json?
  governance_enabled          Boolean?  @default(false)
  quorum_percentage           String?
  proposal_threshold          String?
  voting_delay                Int?
  voting_period               Int?
  timelock_delay              Int?
  governance_token_address    String?
  pausable_by                 String?
  mintable_by                 String?
  burnable_by                 String?
  max_total_supply            String?
  anti_whale_enabled          Boolean?  @default(false)
  max_wallet_amount           String?
  cooldown_period             Int?
  blacklist_enabled           Boolean?  @default(false)
  deflation_enabled           Boolean?  @default(false)
  deflation_rate              String?
  staking_enabled             Boolean?  @default(false)
  staking_rewards_rate        String?
  buy_fee_enabled             Boolean?  @default(false)
  sell_fee_enabled            Boolean?  @default(false)
  liquidity_fee_percentage    String?
  marketing_fee_percentage    String?
  charity_fee_percentage      String?
  auto_liquidity_enabled      Boolean?  @default(false)
  reflection_enabled          Boolean?  @default(false)
  reflection_percentage       String?
  burn_on_transfer            Boolean?  @default(false)
  burn_percentage             String?
  lottery_enabled             Boolean?  @default(false)
  lottery_percentage          String?
  trading_start_time          DateTime? @db.Timestamptz(6)
  presale_enabled             Boolean?  @default(false)
  presale_rate                String?
  presale_start_time          DateTime? @db.Timestamptz(6)
  presale_end_time            DateTime? @db.Timestamptz(6)
  vesting_enabled             Boolean?  @default(false)
  vesting_cliff_period        Int?
  vesting_total_period        Int?
  vesting_release_frequency   String?   @default("monthly")
  use_geographic_restrictions Boolean?  @default(false)
  default_restriction_policy  String?   @default("allowed")
  tokens                      tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([governance_enabled], map: "idx_erc20_governance_enabled")
  @@index([presale_enabled], map: "idx_erc20_presale_enabled")
  @@index([token_type], map: "idx_erc20_token_type")
  @@index([trading_start_time], map: "idx_erc20_trading_start")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc3525_allocations {
  id                                                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                                                 String    @db.Uuid
  slot_id                                                  String
  token_id_within_slot                                     String
  value                                                    String
  created_at                                               DateTime? @default(now()) @db.Timestamptz(6)
  recipient                                                String?
  linked_token_id                                          String?   @db.Uuid
  updated_at                                               DateTime? @default(now()) @db.Timestamptz(6)
  tokens_token_erc3525_allocations_linked_token_idTotokens tokens?   @relation("token_erc3525_allocations_linked_token_idTotokens", fields: [linked_token_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tokens_token_erc3525_allocations_token_idTotokens        tokens    @relation("token_erc3525_allocations_token_idTotokens", fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_erc3525_allocations_token_id")
  @@schema("public")
}

model token_erc3525_payment_schedules {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String    @db.Uuid
  slot_id          String
  payment_date     DateTime  @db.Timestamptz(6)
  payment_amount   String
  payment_type     String
  currency         String?   @default("USD")
  is_completed     Boolean?  @default(false)
  transaction_hash String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  tokens           tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc3525_properties {
  id                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                      String    @unique(map: "one_erc3525_property_per_token") @db.Uuid
  value_decimals                Int?      @default(0)
  base_uri                      String?
  metadata_storage              String?   @default("ipfs")
  slot_type                     String?   @default("generic")
  is_burnable                   Boolean?  @default(false)
  is_pausable                   Boolean?  @default(false)
  has_royalty                   Boolean?  @default(false)
  royalty_percentage            String?
  royalty_receiver              String?
  slot_approvals                Boolean?  @default(true)
  value_approvals               Boolean?  @default(true)
  access_control                String?   @default("ownable")
  updatable_uris                Boolean?  @default(false)
  updatable_slots               Boolean?  @default(false)
  value_transfers_enabled       Boolean?  @default(true)
  sales_config                  Json?
  mergable                      Boolean?  @default(false)
  splittable                    Boolean?  @default(false)
  slot_transfer_validation      Json?
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  dynamic_metadata              Boolean?  @default(false)
  allows_slot_enumeration       Boolean?  @default(true)
  value_aggregation             Boolean?  @default(false)
  permissioning_enabled         Boolean?  @default(false)
  supply_tracking               Boolean?  @default(false)
  updatable_values              Boolean?  @default(false)
  custom_extensions             String?
  fractionalizable              Boolean?  @default(false)
  metadata                      Json?
  fractional_ownership_enabled  Boolean?  @default(false)
  auto_unit_calculation         Boolean?  @default(false)
  custom_slot_properties        Json?
  slot_enumeration_enabled      Boolean?  @default(true)
  value_aggregation_enabled     Boolean?  @default(false)
  permissioning_advanced        Boolean?  @default(false)
  slot_transfer_restrictions    Json?
  value_transfer_restrictions   Json?
  financial_instrument_type     String?
  principal_amount              String?
  interest_rate                 String?
  maturity_date                 DateTime? @db.Timestamptz(6)
  coupon_frequency              String?
  payment_schedule              Json?
  early_redemption_enabled      Boolean?  @default(false)
  redemption_penalty_rate       String?
  derivative_type               String?
  underlying_asset              String?
  underlying_asset_address      String?
  strike_price                  String?
  expiration_date               DateTime? @db.Timestamptz(6)
  settlement_type               String?
  margin_requirements           Json?
  leverage_ratio                String?
  slot_creation_enabled         Boolean?  @default(false)
  dynamic_slot_creation         Boolean?  @default(false)
  slot_admin_roles              String[]
  slot_freeze_enabled           Boolean?  @default(false)
  slot_merge_enabled            Boolean?  @default(false)
  slot_split_enabled            Boolean?  @default(false)
  cross_slot_transfers          Boolean?  @default(false)
  value_computation_method      String?
  value_oracle_address          String?
  value_calculation_formula     String?
  accrual_enabled               Boolean?  @default(false)
  accrual_rate                  String?
  accrual_frequency             String?
  value_adjustment_enabled      Boolean?  @default(false)
  slot_marketplace_enabled      Boolean?  @default(false)
  value_marketplace_enabled     Boolean?  @default(false)
  partial_value_trading         Boolean?  @default(false)
  minimum_trade_value           String?
  trading_fees_enabled          Boolean?  @default(false)
  trading_fee_percentage        String?
  market_maker_enabled          Boolean?  @default(false)
  slot_voting_enabled           Boolean?  @default(false)
  value_weighted_voting         Boolean?  @default(false)
  voting_power_calculation      String?
  quorum_calculation_method     String?
  proposal_value_threshold      String?
  delegate_enabled              Boolean?  @default(false)
  yield_farming_enabled         Boolean?  @default(false)
  liquidity_provision_enabled   Boolean?  @default(false)
  staking_yield_rate            String?
  compound_interest_enabled     Boolean?  @default(false)
  flash_loan_enabled            Boolean?  @default(false)
  collateral_factor             String?
  liquidation_threshold         String?
  regulatory_compliance_enabled Boolean?  @default(false)
  kyc_required                  Boolean?  @default(false)
  accredited_investor_only      Boolean?  @default(false)
  holding_period_restrictions   Int?
  transfer_limits               Json?
  reporting_requirements        Json?
  multi_signature_required      Boolean?  @default(false)
  approval_workflow_enabled     Boolean?  @default(false)
  institutional_custody_support Boolean?  @default(false)
  audit_trail_enhanced          Boolean?  @default(false)
  batch_operations_enabled      Boolean?  @default(false)
  emergency_pause_enabled       Boolean?  @default(false)
  recovery_mechanisms           Json?
  whitelist_config              Json?
  use_geographic_restrictions   Boolean?  @default(false)
  default_restriction_policy    String?   @default("blocked")
  geographic_restrictions       String[]
  tokens                        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([regulatory_compliance_enabled], map: "idx_erc3525_compliance")
  @@index([derivative_type], map: "idx_erc3525_derivative_type")
  @@index([expiration_date], map: "idx_erc3525_expiration_date")
  @@index([financial_instrument_type], map: "idx_erc3525_financial_instrument")
  @@index([maturity_date], map: "idx_erc3525_maturity_date")
  @@index([slot_marketplace_enabled], map: "idx_erc3525_slot_marketplace")
  @@index([yield_farming_enabled], map: "idx_erc3525_yield_farming")
  @@index([token_id], map: "idx_token_erc3525_properties_token_id")
  @@schema("public")
}

model token_erc3525_slot_configs {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String    @db.Uuid
  slot_id          String
  slot_name        String?
  slot_description String?
  value_units      String?
  slot_type        String?
  transferable     Boolean?  @default(true)
  tradeable        Boolean?  @default(true)
  divisible        Boolean?  @default(true)
  min_value        String?
  max_value        String?
  value_precision  Int?      @default(18)
  slot_properties  Json?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  tokens           tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, slot_id])
  @@schema("public")
}

model token_erc3525_slots {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id          String    @db.Uuid
  slot_id           String
  name              String?
  description       String?
  metadata          Json?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  value_units       String?
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  slot_transferable Boolean?  @default(true)
  tokens            tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_erc3525_slots_token_id")
  @@schema("public")
}

model token_erc3525_value_adjustments {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id          String    @db.Uuid
  slot_id           String
  adjustment_date   DateTime? @default(now()) @db.Timestamptz(6)
  adjustment_type   String
  adjustment_amount String
  adjustment_reason String?
  oracle_price      String?
  oracle_source     String?
  approved_by       String?
  transaction_hash  String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  tokens            tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_asset_allocations {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id     String    @db.Uuid
  asset        String
  percentage   String
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  description  String?
  protocol     String?
  expected_apy String?
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
  tokens       tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_fee_tiers {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id             String    @db.Uuid
  tier_name            String
  min_balance          String
  max_balance          String?
  management_fee_rate  String
  performance_fee_rate String
  deposit_fee_rate     String?   @default("0")
  withdrawal_fee_rate  String?   @default("0")
  tier_benefits        Json?
  is_active            Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  tokens               tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_performance_metrics {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id              String    @db.Uuid
  metric_date           DateTime  @db.Date
  total_assets          String
  share_price           String
  apy                   String?
  daily_yield           String?
  benchmark_performance String?
  total_fees_collected  String?
  new_deposits          String?
  withdrawals           String?
  net_flow              String?
  sharpe_ratio          String?
  volatility            String?
  max_drawdown          String?
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  tokens                tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, metric_date])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc4626_properties {
  id                              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                        String    @unique(map: "one_erc4626_property_per_token") @db.Uuid
  asset_address                   String?
  asset_name                      String?
  asset_symbol                    String?
  asset_decimals                  Int?      @default(18)
  vault_type                      String?   @default("yield")
  is_mintable                     Boolean?  @default(false)
  is_burnable                     Boolean?  @default(false)
  is_pausable                     Boolean?  @default(false)
  vault_strategy                  String?   @default("simple")
  custom_strategy                 Boolean?  @default(false)
  strategy_controller             String?
  access_control                  String?   @default("ownable")
  permit                          Boolean?  @default(false)
  flash_loans                     Boolean?  @default(false)
  emergency_shutdown              Boolean?  @default(false)
  fee_structure                   Json?
  rebalancing_rules               Json?
  performance_metrics             Boolean?  @default(false)
  created_at                      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime? @default(now()) @db.Timestamptz(6)
  yield_source                    String?   @default("external")
  strategy_documentation          String?
  rebalance_threshold             String?
  liquidity_reserve               String?   @default("10")
  max_slippage                    String?
  deposit_limit                   String?
  withdrawal_limit                String?
  min_deposit                     String?
  max_deposit                     String?
  min_withdrawal                  String?
  max_withdrawal                  String?
  performance_tracking            Boolean?  @default(false)
  deposit_fee                     String?
  withdrawal_fee                  String?
  management_fee                  String?
  performance_fee                 String?
  fee_recipient                   String?
  withdrawal_rules                Json?
  yield_optimization_enabled      Boolean?  @default(false)
  automated_rebalancing           Boolean?  @default(false)
  whitelist_config                Json?
  use_geographic_restrictions     Boolean?  @default(false)
  default_restriction_policy      String?   @default("allowed")
  strategy_complexity             String?   @default("simple")
  multi_asset_enabled             Boolean?  @default(false)
  rebalancing_enabled             Boolean?  @default(false)
  auto_compounding_enabled        Boolean?  @default(false)
  yield_optimization_strategy     String?
  risk_management_enabled         Boolean?  @default(false)
  risk_tolerance                  String?
  diversification_enabled         Boolean?  @default(false)
  apy_tracking_enabled            Boolean?  @default(false)
  benchmark_tracking_enabled      Boolean?  @default(false)
  benchmark_index                 String?
  performance_history_retention   Int?      @default(365)
  yield_sources                   Json?
  yield_distribution_schedule     String?
  compound_frequency              String?   @default("continuous")
  insurance_enabled               Boolean?  @default(false)
  insurance_provider              String?
  insurance_coverage_amount       String?
  emergency_exit_enabled          Boolean?  @default(false)
  circuit_breaker_enabled         Boolean?  @default(false)
  max_drawdown_threshold          String?
  stop_loss_enabled               Boolean?  @default(false)
  stop_loss_threshold             String?
  governance_token_enabled        Boolean?  @default(false)
  governance_token_address        String?
  voting_power_per_share          String?   @default("1")
  strategy_voting_enabled         Boolean?  @default(false)
  fee_voting_enabled              Boolean?  @default(false)
  manager_performance_threshold   String?
  manager_replacement_enabled     Boolean?  @default(false)
  dynamic_fees_enabled            Boolean?  @default(false)
  performance_fee_high_water_mark Boolean?  @default(false)
  fee_tier_system_enabled         Boolean?  @default(false)
  early_withdrawal_penalty        String?
  late_withdrawal_penalty         String?
  gas_fee_optimization            Boolean?  @default(false)
  fee_rebate_enabled              Boolean?  @default(false)
  liquidity_mining_enabled        Boolean?  @default(false)
  liquidity_incentives_rate       String?
  market_making_enabled           Boolean?  @default(false)
  arbitrage_enabled               Boolean?  @default(false)
  cross_dex_optimization          Boolean?  @default(false)
  liquidity_provider_rewards      Json?
  impermanent_loss_protection     Boolean?  @default(false)
  defi_protocol_integrations      String[]
  lending_protocol_enabled        Boolean?  @default(false)
  borrowing_enabled               Boolean?  @default(false)
  leverage_enabled                Boolean?  @default(false)
  max_leverage_ratio              String?
  cross_chain_yield_enabled       Boolean?  @default(false)
  bridge_protocols                String[]
  portfolio_analytics_enabled     Boolean?  @default(false)
  real_time_pnl_tracking          Boolean?  @default(false)
  tax_reporting_enabled           Boolean?  @default(false)
  automated_reporting             Boolean?  @default(false)
  notification_system_enabled     Boolean?  @default(false)
  mobile_app_integration          Boolean?  @default(false)
  social_trading_enabled          Boolean?  @default(false)
  institutional_grade             Boolean?  @default(false)
  custody_integration             Boolean?  @default(false)
  audit_trail_comprehensive       Boolean?  @default(false)
  compliance_reporting_enabled    Boolean?  @default(false)
  regulatory_framework            String?
  fund_administration_enabled     Boolean?  @default(false)
  third_party_audits_enabled      Boolean?  @default(false)
  tokens                          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([compound_frequency], map: "idx_erc4626_compound_frequency")
  @@index([governance_token_enabled], map: "idx_erc4626_governance")
  @@index([institutional_grade], map: "idx_erc4626_institutional")
  @@index([multi_asset_enabled], map: "idx_erc4626_multi_asset")
  @@index([rebalancing_enabled], map: "idx_erc4626_rebalancing")
  @@index([strategy_complexity], map: "idx_erc4626_strategy_complexity")
  @@index([yield_optimization_enabled], map: "idx_erc4626_yield_optimization")
  @@schema("public")
}

model token_erc4626_strategy_params {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String    @db.Uuid
  name          String
  value         String
  description   String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  param_type    String?   @default("string")
  is_required   Boolean?  @default(false)
  default_value String?
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_vault_strategies {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                  String    @db.Uuid
  strategy_name             String
  strategy_type             String
  protocol_address          String?
  protocol_name             String?
  allocation_percentage     String
  min_allocation_percentage String?
  max_allocation_percentage String?
  risk_score                Int?
  expected_apy              String?
  actual_apy                String?
  is_active                 Boolean?  @default(true)
  last_rebalance            DateTime? @db.Timestamptz(6)
  created_at                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)
  tokens                    tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc721_attributes {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id   String    @db.Uuid
  trait_type String
  values     String[]
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  tokens     tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc721_mint_phases {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id           String    @db.Uuid
  phase_name         String
  phase_order        Int
  start_time         DateTime? @db.Timestamptz(6)
  end_time           DateTime? @db.Timestamptz(6)
  max_supply         Int?
  price              String?
  max_per_wallet     Int?
  whitelist_required Boolean?  @default(false)
  merkle_root        String?
  is_active          Boolean?  @default(false)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  tokens             tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, phase_order])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc721_properties {
  id                             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                       String    @unique(map: "one_erc721_property_per_token") @db.Uuid
  base_uri                       String?
  metadata_storage               String?   @default("ipfs")
  max_supply                     String?
  has_royalty                    Boolean?  @default(false)
  royalty_percentage             String?
  royalty_receiver               String?
  is_burnable                    Boolean?  @default(false)
  is_pausable                    Boolean?  @default(false)
  asset_type                     String?   @default("unique_asset")
  minting_method                 String?   @default("open")
  auto_increment_ids             Boolean?  @default(true)
  enumerable                     Boolean?  @default(true)
  uri_storage                    String?   @default("tokenId")
  access_control                 String?   @default("ownable")
  updatable_uris                 Boolean?  @default(false)
  sales_config                   Json?
  whitelist_config               Json?
  permission_config              Json?
  created_at                     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime? @default(now()) @db.Timestamptz(6)
  is_mintable                    Boolean?
  dynamic_uri_config             Json?
  batch_minting_config           Json?
  transfer_restrictions          Json?
  supply_validation_enabled      Boolean?  @default(true)
  contract_uri                   String?
  custom_base_uri                String?
  revealable                     Boolean?  @default(false)
  pre_reveal_uri                 String?
  reserved_tokens                Int?      @default(0)
  minting_price                  String?
  max_mints_per_tx               Int?
  max_mints_per_wallet           Int?
  enable_fractional_ownership    Boolean?  @default(false)
  enable_dynamic_metadata        Boolean?  @default(false)
  use_safe_transfer              Boolean?  @default(true)
  public_sale_enabled            Boolean?  @default(false)
  public_sale_price              String?
  public_sale_start_time         DateTime? @db.Timestamptz(6)
  public_sale_end_time           DateTime? @db.Timestamptz(6)
  whitelist_sale_enabled         Boolean?  @default(false)
  whitelist_sale_price           String?
  whitelist_sale_start_time      DateTime? @db.Timestamptz(6)
  whitelist_sale_end_time        DateTime? @db.Timestamptz(6)
  reveal_batch_size              Int?
  auto_reveal                    Boolean?  @default(false)
  reveal_delay                   Int?
  placeholder_image_uri          String?
  metadata_frozen                Boolean?  @default(false)
  metadata_provenance_hash       String?
  mint_roles                     String[]
  admin_mint_enabled             Boolean?  @default(true)
  public_mint_enabled            Boolean?  @default(false)
  burn_roles                     String[]
  transfer_locked                Boolean?  @default(false)
  soulbound                      Boolean?  @default(false)
  creator_earnings_enabled       Boolean?  @default(false)
  creator_earnings_percentage    String?
  creator_earnings_address       String?
  marketplace_approved           String[]
  operator_filter_enabled        Boolean?  @default(false)
  custom_operator_filter_address String?
  utility_enabled                Boolean?  @default(false)
  utility_type                   String?
  staking_enabled                Boolean?  @default(false)
  staking_rewards_token_address  String?
  staking_rewards_rate           String?
  breeding_enabled               Boolean?  @default(false)
  evolution_enabled              Boolean?  @default(false)
  supply_cap_enabled             Boolean?  @default(false)
  total_supply_cap               String?
  mint_phases_enabled            Boolean?  @default(false)
  dutch_auction_enabled          Boolean?  @default(false)
  dutch_auction_start_price      String?
  dutch_auction_end_price        String?
  dutch_auction_duration         Int?
  cross_chain_enabled            Boolean?  @default(false)
  bridge_contracts               Json?
  layer2_enabled                 Boolean?  @default(false)
  layer2_networks                String[]
  use_geographic_restrictions    Boolean?  @default(false)
  default_restriction_policy     String?   @default("allowed")
  tokens                         tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([public_sale_enabled, public_sale_start_time], map: "idx_erc721_public_sale")
  @@index([revealable], map: "idx_erc721_revealable")
  @@index([staking_enabled], map: "idx_erc721_staking")
  @@index([utility_enabled, utility_type], map: "idx_erc721_utility")
  @@index([whitelist_sale_enabled, whitelist_sale_start_time], map: "idx_erc721_whitelist_sale")
  @@schema("public")
}

model token_erc721_trait_definitions {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id        String    @db.Uuid
  trait_name      String
  trait_type      String
  possible_values Json?
  rarity_weights  Json?
  is_required     Boolean?  @default(false)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  tokens          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, trait_name])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_events {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token_id   String   @db.Uuid
  event_type String
  severity   String
  message    String
  data       Json?
  timestamp  DateTime @default(now()) @db.Timestamptz(6)
  is_read    Boolean  @default(false)
  tokens     tokens   @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token")

  @@index([event_type], map: "idx_token_events_event_type")
  @@index([is_read], map: "idx_token_events_is_read")
  @@index([timestamp], map: "idx_token_events_timestamp")
  @@index([token_id], map: "idx_token_events_token_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_geographic_restrictions {
  id                           String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                     String                   @db.Uuid
  restriction_type             String
  country_code                 String                   @db.Char(2)
  max_ownership_percentage     Decimal?                 @db.Decimal(5, 2)
  min_investment_amount        String?
  max_investment_amount        String?
  requires_local_custodian     Boolean?                 @default(false)
  requires_tax_clearance       Boolean?                 @default(false)
  requires_regulatory_approval Boolean?                 @default(false)
  holding_period_restriction   Int?
  transfer_restrictions        Json?
  reporting_requirements       Json?
  effective_date               DateTime                 @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiry_date                  DateTime?                @db.Date
  notes                        String?
  created_by                   String?
  created_at                   DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?                @default(now()) @db.Timestamptz(6)
  geographic_jurisdictions     geographic_jurisdictions @relation(fields: [country_code], references: [country_code], onDelete: NoAction, onUpdate: NoAction)
  tokens                       tokens                   @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, country_code])
  @@index([effective_date, expiry_date], map: "idx_geographic_restrictions_effective")
  @@index([token_id, country_code], map: "idx_geographic_restrictions_token_country")
  @@index([restriction_type], map: "idx_geographic_restrictions_type")
  @@schema("public")
}

model token_operations {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  operation_type      String
  operator            String
  amount              Decimal?  @db.Decimal
  recipient           String?
  sender              String?
  target_address      String?
  nft_token_id        String?
  token_type_id       String?
  slot_id             String?
  value               Decimal?  @db.Decimal
  partition           String?
  asset_token_address String?
  lock_duration       Int?
  lock_reason         String?
  unlock_time         DateTime? @db.Timestamptz(6)
  lock_id             String?
  transaction_hash    String?
  timestamp           DateTime? @default(now()) @db.Timestamptz(6)
  status              String?   @default("SUCCESSFUL")
  error_message       String?
  blocks              Json?
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_operations_token_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_sanctions_rules {
  id                              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                        String    @db.Uuid
  sanctions_regime                String
  screening_enabled               Boolean?  @default(true)
  auto_block_sanctioned_entities  Boolean?  @default(true)
  enhanced_due_diligence_required Boolean?  @default(false)
  manual_review_threshold         String?
  screening_frequency             String?   @default("real_time")
  whitelist_override_allowed      Boolean?  @default(false)
  last_screening_update           DateTime? @default(now()) @db.Timestamptz(6)
  created_at                      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime? @default(now()) @db.Timestamptz(6)
  tokens                          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_templates {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id  String    @db.Uuid
  name        String
  description String?
  standard    String
  blocks      Json
  metadata    Json?
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  projects    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_versions {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id   String    @db.Uuid
  version    Int
  data       Json
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  created_by String?
  blocks     Json?
  decimals   Int?
  metadata   Json?
  name       String?
  standard   String?
  symbol     String?
  notes      String?
  tokens     tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_versions_token_id")
  @@index([token_id, version], map: "idx_token_versions_token_id_version")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_whitelists {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id        String    @db.Uuid
  wallet_address  String
  blockchain      String
  approved_by     String?   @db.Uuid
  approval_date   DateTime? @default(now()) @db.Timestamptz(6)
  is_active       Boolean?  @default(true)
  metadata        Json?     @default("{}")
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_by      String?   @db.Uuid
  approval_reason String?
  removal_date    DateTime? @db.Timestamptz(6)
  removal_reason  String?
  removal_by      String?   @db.Uuid
  tokens          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token_whitelists_token_id")

  @@unique([token_id, wallet_address], map: "unique_whitelist_token_wallet")
  @@index([blockchain], map: "idx_token_whitelists_blockchain")
  @@index([token_id], map: "idx_token_whitelists_token_id")
  @@index([wallet_address], map: "idx_token_whitelists_wallet_address")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tokens {
  id                                                                          String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                                                                  String                              @db.Uuid
  name                                                                        String
  symbol                                                                      String
  decimals                                                                    Int                                 @default(18)
  standard                                                                    token_standard_enum
  blocks                                                                      Json
  metadata                                                                    Json?
  status                                                                      token_status_enum                   @default(DRAFT)
  reviewers                                                                   String[]                            @default([])
  approvals                                                                   String[]                            @default([])
  contract_preview                                                            String?
  created_at                                                                  DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_at                                                                  DateTime?                           @default(now()) @db.Timestamptz(6)
  total_supply                                                                String?
  config_mode                                                                 token_config_mode_enum?             @default(min)
  address                                                                     String?                             @db.VarChar(255)
  blockchain                                                                  String?                             @db.VarChar(100)
  deployment_status                                                           String?                             @default("pending") @db.VarChar(50)
  deployment_timestamp                                                        DateTime?                           @db.Timestamp(6)
  deployment_transaction                                                      String?                             @db.VarChar(255)
  deployment_error                                                            String?
  deployed_by                                                                 String?                             @db.Uuid
  deployment_environment                                                      String?                             @db.VarChar(50)
  description                                                                 String?
  deployment_rate_limits                                                      deployment_rate_limits[]
  token_allocations                                                           token_allocations[]
  token_deployment_history                                                    token_deployment_history[]
  token_deployments                                                           token_deployments[]
  token_erc1155_balances                                                      token_erc1155_balances[]
  token_erc1155_crafting_recipes                                              token_erc1155_crafting_recipes[]
  token_erc1155_discount_tiers                                                token_erc1155_discount_tiers[]
  token_erc1155_properties                                                    token_erc1155_properties?
  token_erc1155_type_configs                                                  token_erc1155_type_configs[]
  token_erc1155_types                                                         token_erc1155_types[]
  token_erc1155_uri_mappings                                                  token_erc1155_uri_mappings[]
  token_erc1400_controllers                                                   token_erc1400_controllers[]
  token_erc1400_corporate_actions                                             token_erc1400_corporate_actions[]
  token_erc1400_custody_providers                                             token_erc1400_custody_providers[]
  token_erc1400_documents                                                     token_erc1400_documents[]
  token_erc1400_partitions                                                    token_erc1400_partitions[]
  token_erc1400_properties                                                    token_erc1400_properties?
  token_erc1400_regulatory_filings                                            token_erc1400_regulatory_filings[]
  token_erc20_properties                                                      token_erc20_properties?
  token_erc3525_allocations_token_erc3525_allocations_linked_token_idTotokens token_erc3525_allocations[]         @relation("token_erc3525_allocations_linked_token_idTotokens")
  token_erc3525_allocations_token_erc3525_allocations_token_idTotokens        token_erc3525_allocations[]         @relation("token_erc3525_allocations_token_idTotokens")
  token_erc3525_payment_schedules                                             token_erc3525_payment_schedules[]
  token_erc3525_properties                                                    token_erc3525_properties?
  token_erc3525_slot_configs                                                  token_erc3525_slot_configs[]
  token_erc3525_slots                                                         token_erc3525_slots[]
  token_erc3525_value_adjustments                                             token_erc3525_value_adjustments[]
  token_erc4626_asset_allocations                                             token_erc4626_asset_allocations[]
  token_erc4626_fee_tiers                                                     token_erc4626_fee_tiers[]
  token_erc4626_performance_metrics                                           token_erc4626_performance_metrics[]
  token_erc4626_properties                                                    token_erc4626_properties?
  token_erc4626_strategy_params                                               token_erc4626_strategy_params[]
  token_erc4626_vault_strategies                                              token_erc4626_vault_strategies[]
  token_erc721_attributes                                                     token_erc721_attributes[]
  token_erc721_mint_phases                                                    token_erc721_mint_phases[]
  token_erc721_properties                                                     token_erc721_properties?
  token_erc721_trait_definitions                                              token_erc721_trait_definitions[]
  token_events                                                                token_events[]
  token_geographic_restrictions                                               token_geographic_restrictions[]
  token_operations                                                            token_operations[]
  token_sanctions_rules                                                       token_sanctions_rules[]
  token_versions                                                              token_versions[]
  token_whitelists                                                            token_whitelists[]
  users                                                                       auth_users?                         @relation(fields: [deployed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects                                                                    projects                            @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([blockchain], map: "idx_tokens_blockchain")
  @@index([deployment_status], map: "idx_tokens_deployment_status")
  @@index([project_id], map: "idx_tokens_project_id")
  @@index([standard], map: "idx_tokens_standard")
  @@index([status], map: "idx_tokens_status")
  @@schema("public")
}

model transaction_events {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  request_id String
  event_type String
  timestamp  DateTime @default(now()) @db.Timestamptz(6)
  data       Json
  actor      String?
  actor_role String?
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@index([actor], map: "idx_transaction_events_actor")
  @@index([event_type], map: "idx_transaction_events_event_type")
  @@index([request_id], map: "idx_transaction_events_request_id")
  @@index([timestamp], map: "idx_transaction_events_timestamp")
  @@schema("public")
}

model transaction_notifications {
  id             String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  transaction_id String?
  wallet_address String
  type           String
  message        String
  read           Boolean? @default(false)
  action_url     String?
  data           Json?
  created_at     DateTime @default(now()) @db.Timestamptz(6)

  @@index([read], map: "idx_transaction_notifications_read")
  @@index([transaction_id], map: "idx_transaction_notifications_transaction")
  @@index([wallet_address], map: "idx_transaction_notifications_wallet")
  @@schema("public")
}

model transaction_proposals {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id              String?                  @db.Uuid
  title                  String
  description            String?
  to_address             String
  value                  String
  data                   String?                  @default("0x")
  nonce                  Int?
  status                 String                   @default("pending")
  blockchain             String
  token_address          String?
  token_symbol           String?
  created_by             String?                  @db.Uuid
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  signatures             signatures[]
  users                  auth_users?              @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  multi_sig_wallets      multi_sig_wallets?       @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transaction_signatures transaction_signatures[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transaction_signatures {
  id                    String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proposal_id           String                @db.Uuid
  transaction_hash      String?
  signer                String                @db.Uuid
  signature             String
  created_at            DateTime              @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?             @default(now()) @db.Timestamptz(6)
  transaction_proposals transaction_proposals @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "transaction_signatures_proposal_fkey")
  users                 auth_users            @relation(fields: [signer], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transactions {
  id                          String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_hash            String                   @unique
  from_address                String
  to_address                  String
  value                       Decimal                  @default(0) @db.Decimal
  token_symbol                String?
  token_address               String?
  blockchain                  String                   @default("ethereum")
  status                      String                   @default("pending")
  type                        String                   @default("transfer")
  gas_used                    Decimal?                 @db.Decimal
  created_at                  DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                @default(now()) @db.Timestamptz(6)
  gas_limit                   Decimal?                 @db.Decimal
  gas_price                   Decimal?                 @db.Decimal
  max_fee_per_gas             Decimal?                 @db.Decimal
  max_priority_fee_per_gas    Decimal?                 @db.Decimal
  block_number                Int?
  block_hash                  String?
  transaction_index           Int?
  confirmations               Int?                     @default(0)
  memo                        String?
  destination_tag             Int?
  transfer_type               String?                  @default("standard")
  network_fee                 Decimal?                 @db.Decimal
  estimated_confirmation_time Unsupported("interval")?

  @@index([blockchain], map: "idx_transactions_blockchain")
  @@index([from_address, status, created_at], map: "idx_transactions_composite")
  @@index([created_at], map: "idx_transactions_created_at")
  @@index([from_address], map: "idx_transactions_from_address")
  @@index([transaction_hash], map: "idx_transactions_hash")
  @@index([status], map: "idx_transactions_status")
  @@index([to_address], map: "idx_transactions_to_address")
  @@schema("public")
}

model user_mfa_settings {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id      String     @db.Uuid
  enabled      Boolean    @default(false)
  verified     Boolean    @default(false)
  secret       String?
  backup_codes Json?
  created_at   DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?  @default(now()) @db.Timestamptz(6)
  users        auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_mfa_settings_user_id")
  @@schema("public")
}

model user_roles {
  user_id    String       @id @db.Uuid
  role_id    String       @db.Uuid
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  roles      roles        @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model user_sessions {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String?   @db.Uuid
  session_id     String
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  last_active_at DateTime? @default(now()) @db.Timestamptz(6)
  ip_address     String?
  user_agent     String?
  device_info    Json?

  @@schema("public")
}

model public_users {
  id                                                                          String                            @id @db.Uuid
  name                                                                        String
  email                                                                       String                            @unique
  status                                                                      String                            @default("active")
  public_key                                                                  String?
  encrypted_private_key                                                       String?
  created_at                                                                  DateTime                          @default(now()) @db.Timestamptz(6)
  updated_at                                                                  DateTime                          @default(now()) @db.Timestamptz(6)
  approval_config_approvers_approval_config_approvers_approver_user_idTousers approval_config_approvers[]       @relation("approval_config_approvers_approver_user_idTousers")
  approval_config_approvers_approval_config_approvers_created_byTousers       approval_config_approvers[]       @relation("approval_config_approvers_created_byTousers")
  approval_config_history                                                     approval_config_history[]
  approval_configs_approval_configs_created_byTousers                         approval_configs[]                @relation("approval_configs_created_byTousers")
  approval_configs_approval_configs_last_modified_byTousers                   approval_configs[]                @relation("approval_configs_last_modified_byTousers")
  document_approvals                                                          document_approvals[]
  document_versions                                                           document_versions[]
  policy_template_approvers                                                   policy_template_approvers[]
  redemption_approver_assignments                                             redemption_approver_assignments[]
  stripe_conversion_transactions                                              stripe_conversion_transactions[]
  stripe_stablecoin_accounts                                                  stripe_stablecoin_accounts[]
  user_roles                                                                  user_roles?
  users                                                                       auth_users                        @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("users")
  @@schema("public")
}

model wallet_details {
  id                       String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id                String?            @db.Uuid
  blockchain_specific_data Json
  created_at               DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?          @default(now()) @db.Timestamptz(6)
  multi_sig_wallets        multi_sig_wallets? @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model wallet_signatories {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_address String
  name           String
  email          String
  role           String
  status         String?   @default("pending")
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([wallet_address, email])
  @@index([status], map: "idx_wallet_signatories_status")
  @@index([wallet_address], map: "idx_wallet_signatories_wallet_address")
  @@schema("public")
}

model wallet_transactions {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chain_id           String?
  data               Json?
  from_address       String?
  gas_limit          Decimal?  @db.Decimal
  gas_price          Decimal?  @db.Decimal
  nonce              Int?
  to_address         String?
  value              Decimal?  @db.Decimal
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  tx_hash            String?
  status             String?   @default("pending")
  token_symbol       String?
  token_address      String?
  confirmation_count Int?      @default(0)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([from_address], map: "idx_wallet_transactions_from_address")
  @@index([status], map: "idx_wallet_transactions_status")
  @@index([tx_hash], map: "idx_wallet_transactions_tx_hash")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wallets {
  id                          String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  investor_id                 String                        @db.Uuid
  wallet_address              String?
  wallet_type                 String
  blockchain                  String                        @default("ethereum")
  is_multi_sig_enabled        Boolean                       @default(false)
  guardian_policy             Json                          @default("{}")
  signatories                 Json                          @default("[]")
  status                      String                        @default("pending")
  created_at                  DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime                      @default(now()) @db.Timestamptz(6)
  restriction_validation_logs restriction_validation_logs[]
  signature_migrations        signature_migrations[]
  smart_contract_wallets      smart_contract_wallets[]
  user_operations             user_operations[]
  wallet_facets               wallet_facets[]
  wallet_guardians            wallet_guardians[]
  wallet_locks                wallet_locks[]
  wallet_restriction_rules    wallet_restriction_rules[]
  wallet_transaction_drafts   wallet_transaction_drafts[]
  investors                   investors                     @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  webauthn_challenges         webauthn_challenges[]
  webauthn_credentials        webauthn_credentials[]

  @@index([investor_id], map: "idx_wallets_investor_id")
  @@index([status], map: "idx_wallets_status")
  @@index([wallet_address], map: "idx_wallets_wallet_address")
  @@index([wallet_type], map: "idx_wallets_wallet_type")
  @@schema("public")
}

model whitelist_entries {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String
  address         String
  label           String?
  added_by        String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([organization_id, address])
  @@index([address], map: "idx_whitelist_entries_address")
  @@index([organization_id], map: "idx_whitelist_entries_organization_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model whitelist_settings {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id       String?                 @db.Uuid
  name                  String
  description           String?
  rule_id               String?                 @db.Uuid
  required_approvals    Int
  total_approvers       Int
  created_by            String?                 @db.Uuid
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @default(now()) @db.Timestamptz(6)
  organizations         organizations?          @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  rules                 rules?                  @relation(fields: [rule_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)
  whitelist_signatories whitelist_signatories[]

  @@schema("public")
}

model whitelist_signatories {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  whitelist_id       String?             @db.Uuid
  user_id            String?             @db.Uuid
  approved           Boolean?            @default(false)
  approved_at        DateTime?           @db.Timestamptz(6)
  whitelist_settings whitelist_settings? @relation(fields: [whitelist_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([whitelist_id, user_id])
  @@schema("public")
}

model workflow_stages {
  id                    String               @id
  organization_id       String
  name                  String
  description           String?
  status                String
  completion_percentage Int                  @default(0)
  order                 Int
  created_at            DateTime             @default(now()) @db.Timestamptz(6)
  updated_at            DateTime             @default(now()) @db.Timestamptz(6)
  documents             documents[]
  stage_requirements    stage_requirements[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model facet_registry {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  address            String    @unique
  version            String
  description        String?
  function_selectors String[]  @default([])
  source_code_hash   String
  audit_report_url   String?
  audit_status       String?   @default("pending")
  is_active          Boolean?  @default(false)
  deployed_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([is_active, audit_status], map: "idx_facet_registry_active")
  @@index([address], map: "idx_facet_registry_address")
  @@index([function_selectors], map: "idx_facet_registry_selectors", type: Gin)
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model smart_contract_wallets {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id              String    @db.Uuid
  diamond_proxy_address  String
  implementation_version String
  facet_registry_address String
  is_deployed            Boolean?  @default(false)
  deployment_tx_hash     String?
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)
  wallets                wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([diamond_proxy_address], map: "idx_smart_contract_wallets_proxy")
  @@index([wallet_id], map: "idx_smart_contract_wallets_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_operations {
  id                       String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id                String                 @db.Uuid
  user_op_hash             String                 @unique
  sender_address           String
  nonce                    BigInt
  init_code                String?
  call_data                String
  call_gas_limit           BigInt
  verification_gas_limit   BigInt
  pre_verification_gas     BigInt
  max_fee_per_gas          BigInt
  max_priority_fee_per_gas BigInt
  paymaster_and_data       String?
  signature_data           String
  status                   String?                @default("pending")
  transaction_hash         String?
  block_number             BigInt?
  gas_used                 BigInt?
  created_at               DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?              @default(now()) @db.Timestamptz(6)
  actual_gas_cost          BigInt?
  failure_reason           String?
  batch_operations         batch_operations[]
  paymaster_operations     paymaster_operations[]
  wallets                  wallets                @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_op_hash], map: "idx_user_operations_hash")
  @@index([sender_address], map: "idx_user_operations_sender")
  @@index([status], map: "idx_user_operations_status")
  @@index([wallet_id], map: "idx_user_operations_wallet_id")
  @@index([created_at], map: "idx_user_operations_created_at")
  @@index([status, created_at], map: "idx_user_operations_status_created")
  @@index([transaction_hash], map: "idx_user_operations_transaction_hash")
  @@index([wallet_id, status], map: "idx_user_operations_wallet_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_facets {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id          String    @db.Uuid
  facet_name         String
  facet_address      String
  function_selectors String[]  @default([])
  is_active          Boolean?  @default(true)
  added_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  wallets            wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([facet_address], map: "idx_wallet_facets_address")
  @@index([function_selectors], map: "idx_wallet_facets_selectors", type: Gin)
  @@index([wallet_id], map: "idx_wallet_facets_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_guardians {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id            String    @db.Uuid
  guardian_address     String
  guardian_name        String?
  status               String?   @default("pending_add")
  requested_at         DateTime? @default(now()) @db.Timestamptz(6)
  confirmed_at         DateTime? @db.Timestamptz(6)
  security_period_ends DateTime? @db.Timestamptz(6)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  wallets              wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([guardian_address], map: "idx_wallet_guardians_address")
  @@index([status], map: "idx_wallet_guardians_status")
  @@index([wallet_id], map: "idx_wallet_guardians_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webauthn_challenges {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id      String    @db.Uuid
  challenge      String
  challenge_type String
  expires_at     DateTime  @db.Timestamptz(6)
  is_used        Boolean?  @default(false)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  wallets        wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([challenge], map: "idx_webauthn_challenges_challenge")
  @@index([expires_at], map: "idx_webauthn_challenges_expires")
  @@index([wallet_id], map: "idx_webauthn_challenges_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webauthn_credentials {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id          String    @db.Uuid
  credential_id      String
  public_key_x       String
  public_key_y       String
  authenticator_data String?
  is_primary         Boolean?  @default(false)
  device_name        String?
  platform           String?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  wallets            wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, credential_id], map: "idx_webauthn_credentials_unique")
  @@index([credential_id], map: "idx_webauthn_credentials_credential_id")
  @@index([wallet_id], map: "idx_webauthn_credentials_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model batch_operations {
  id                String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_operation_id String          @db.Uuid
  operation_index   Int
  target_address    String
  value             String
  call_data         String
  success           Boolean?        @default(false)
  return_data       String?
  gas_used          BigInt?
  created_at        DateTime?       @default(now()) @db.Timestamptz(6)
  user_operations   user_operations @relation(fields: [user_operation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_operation_id, operation_index], map: "idx_batch_operations_unique")
  @@index([operation_index], map: "idx_batch_operations_index")
  @@index([success], map: "idx_batch_operations_success")
  @@index([target_address], map: "idx_batch_operations_target")
  @@index([user_operation_id], map: "idx_batch_operations_user_op")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model paymaster_operations {
  id                     String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_operation_id      String          @db.Uuid
  paymaster_address      String
  paymaster_data         String
  verification_gas_limit BigInt
  post_op_gas_limit      BigInt
  gas_sponsored          BigInt
  sponsor_address        String?
  policy_applied         Json
  created_at             DateTime?       @default(now()) @db.Timestamptz(6)
  user_operations        user_operations @relation(fields: [user_operation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_paymaster_operations_created_at")
  @@index([paymaster_address], map: "idx_paymaster_operations_paymaster")
  @@index([paymaster_address, created_at], map: "idx_paymaster_operations_paymaster_created")
  @@index([sponsor_address], map: "idx_paymaster_operations_sponsor")
  @@index([user_operation_id], map: "idx_paymaster_operations_user_op")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wallet_transaction_drafts {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id  String    @unique
  wallet_id       String    @db.Uuid
  blockchain      String
  from_address    String
  to_address      String
  amount          Decimal   @db.Decimal
  raw_transaction String
  nonce           Int?
  data            Json?     @default("{}")
  expires_at      DateTime  @db.Timestamptz(6)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  wallets         wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_wallet_transaction_drafts_wallet_id")

  @@index([expires_at], map: "idx_wallet_transaction_drafts_expires_at")
  @@index([transaction_id], map: "idx_wallet_transaction_drafts_transaction_id")
  @@index([wallet_id], map: "idx_wallet_transaction_drafts_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model restriction_validation_logs {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id         String    @db.Uuid
  transaction_hash  String?
  validation_result Boolean
  failed_rules      Json?     @default("[]")
  warnings          Json?     @default("[]")
  validated_at      DateTime? @default(now()) @db.Timestamptz(6)
  wallets           wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([validated_at(sort: Desc)], map: "idx_restriction_validation_logs_validated_at")
  @@index([wallet_id], map: "idx_restriction_validation_logs_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model signature_migration_approvals {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  migration_id         String               @db.Uuid
  approver_address     String
  signature            String
  approved_at          DateTime?            @default(now()) @db.Timestamptz(6)
  signature_migrations signature_migrations @relation(fields: [migration_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([migration_id, approver_address])
  @@index([migration_id], map: "idx_signature_migration_approvals_migration_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model signature_migrations {
  id                            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id                     String                          @db.Uuid
  from_scheme                   String
  to_scheme                     String
  new_public_key                String
  new_credential_id             String?
  status                        String                          @default("pending")
  migration_hash                String
  required_approvals            Int                             @default(1)
  current_approvals             Int                             @default(0)
  finalize_after                DateTime?                       @db.Timestamptz(6)
  transaction_hash              String?
  migration_data                Json?                           @default("{}")
  finalized_at                  DateTime?                       @db.Timestamptz(6)
  cancelled_at                  DateTime?                       @db.Timestamptz(6)
  created_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  signature_migration_approvals signature_migration_approvals[]
  wallets                       wallets                         @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_signature_migrations_created_at")
  @@index([status], map: "idx_signature_migrations_status")
  @@index([wallet_id], map: "idx_signature_migrations_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_locks {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id        String    @db.Uuid
  lock_type        String
  is_locked        Boolean   @default(true)
  locked_by        String
  locked_at        DateTime  @default(now()) @db.Timestamptz(6)
  unlock_time      DateTime? @db.Timestamptz(6)
  lock_reason      String?
  lock_nonce       Int       @default(1)
  unlock_hash      String?
  can_unlock_early Boolean   @default(true)
  unlocked_by      String?
  unlocked_at      DateTime? @db.Timestamptz(6)
  unlock_reason    String?
  lock_data        Json?     @default("{}")
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  wallets          wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_wallet_locks_created_at")
  @@index([wallet_id], map: "idx_wallet_locks_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_restriction_rules {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id   String    @db.Uuid
  rule_type   String
  name        String
  description String?
  is_active   Boolean   @default(true)
  priority    Int       @default(100)
  rule_data   Json      @default("{}")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  wallets     wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([wallet_id, priority], map: "idx_wallet_restriction_rules_priority")
  @@index([wallet_id], map: "idx_wallet_restriction_rules_wallet_id")
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view activity_analytics {
  id                 String?   @db.Uuid
  action             String?
  source             String?
  category           String?   @db.VarChar
  severity           String?
  timestamp          DateTime? @db.Timestamptz(6)
  user_id            String?   @db.Uuid
  user_email         String?
  entity_type        String?
  entity_id          String?
  status             String?
  duration           Int?
  system_process_id  String?   @db.Uuid
  batch_operation_id String?   @db.Uuid
  project_id         String?   @db.Uuid
  correlation_id     String?   @db.VarChar
  ip_address         String?   @db.VarChar
  session_id         String?   @db.VarChar

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view active_redemption_windows {
  id                           String?   @db.Uuid
  config_id                    String?   @db.Uuid
  start_date                   DateTime? @db.Timestamptz(6)
  end_date                     DateTime? @db.Timestamptz(6)
  submission_start_date        DateTime? @db.Timestamptz(6)
  submission_end_date          DateTime? @db.Timestamptz(6)
  nav                          Decimal?  @db.Decimal(18, 6)
  nav_date                     DateTime? @db.Date
  nav_source                   String?
  status                       String?
  max_redemption_amount        Decimal?  @db.Decimal(78, 18)
  current_requests             Int?
  total_request_value          Decimal?  @db.Decimal(78, 18)
  approved_requests            Int?
  approved_value               Decimal?  @db.Decimal(78, 18)
  rejected_requests            Int?
  rejected_value               Decimal?  @db.Decimal(78, 18)
  queued_requests              Int?
  queued_value                 Decimal?  @db.Decimal(78, 18)
  processed_by                 String?   @db.Uuid
  processed_at                 DateTime? @db.Timestamptz(6)
  notes                        String?
  created_at                   DateTime? @db.Timestamptz(6)
  updated_at                   DateTime? @db.Timestamptz(6)
  created_by                   String?   @db.Uuid
  config_name                  String?
  frequency                    String?
  enable_pro_rata_distribution Boolean?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view approval_configs_with_approvers {
  id                       String?   @db.Uuid
  permission_id            String?   @db.Uuid
  config_name              String?
  config_description       String?
  approval_mode            String?
  required_approvals       Int?
  requires_all_approvers   Boolean?
  consensus_type           String?
  eligible_roles           String[]
  auto_approval_conditions Json?
  auto_approve_threshold   Int?
  escalation_config        Json?
  notification_config      Json?
  active                   Boolean?
  created_at               DateTime? @db.Timestamptz(6)
  updated_at               DateTime? @db.Timestamptz(6)
  created_by               String?   @db.Uuid
  last_modified_by         String?   @db.Uuid
  configured_approvers     Json?     @db.Json
  approver_count           BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view latest_nav_by_fund {
  fund_id        String?   @db.Uuid
  date           DateTime? @db.Date
  nav            Decimal?  @db.Decimal(18, 6)
  change_amount  Decimal?  @db.Decimal(18, 6)
  change_percent Decimal?  @db.Decimal(8, 4)
  source         String?
  validated      Boolean?
  created_at     DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view redemption_approval_status {
  redemption_request_id    String? @db.Uuid
  approval_config_id       String? @db.Uuid
  config_name              String?
  required_approvals       Int?
  consensus_type           String?
  total_assigned_approvers BigInt?
  approved_count           BigInt?
  rejected_count           BigInt?
  pending_count            BigInt?
  overall_status           String?
  approver_details         Json?   @db.Json

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view project_type_stats {
  category           String?
  project_type       String?
  project_count      BigInt?
  active_count       BigInt?
  avg_target_raise   Decimal? @db.Decimal
  total_target_raise Decimal? @db.Decimal

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view settlement_summary {
  id                      String?   @db.Uuid
  redemption_request_id   String?   @db.Uuid
  settlement_type         String?
  status                  String?
  token_amount            Decimal?  @db.Decimal(78, 18)
  transfer_amount         Decimal?  @db.Decimal(78, 18)
  nav_used                Decimal?  @db.Decimal(18, 6)
  created_at              DateTime? @db.Timestamptz(6)
  actual_completion       DateTime? @db.Timestamptz(6)
  completion_time         DateTime? @db.Timestamptz(6)
  processing_time_seconds Decimal?  @db.Decimal

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view restriction_statistics {
  total_rules            BigInt?
  active_rules           BigInt?
  blocked_countries      BigInt?
  blocked_investor_types BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view system_process_activity {
  process_id        String?   @db.Uuid
  process_name      String?
  process_status    String?
  start_time        DateTime? @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  duration_seconds  Decimal?  @db.Decimal
  activity_count    BigInt?
  failed_activities BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view system_process_activities {
  process_id        String?   @db.Uuid
  process_name      String?
  start_time        DateTime? @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  status            String?
  progress          Float?
  priority          String?   @db.VarChar(10)
  activity_id       String?   @db.Uuid
  action            String?
  entity_type       String?
  entity_id         String?
  activity_status   String?
  activity_time     DateTime? @db.Timestamptz(6)
  activity_metadata Json?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view system_process_performance {
  process_name          String?
  total_executions      BigInt?
  avg_duration_seconds  Decimal? @db.Decimal
  min_duration_seconds  Decimal? @db.Decimal
  max_duration_seconds  Decimal? @db.Decimal
  successful_executions BigInt?
  failed_executions     BigInt?
  success_rate          Decimal? @db.Decimal

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc1155_view {
  token_id                  String?              @db.Uuid
  name                      String?
  symbol                    String?
  decimals                  Int?
  standard                  token_standard_enum?
  total_supply              String?
  metadata                  Json?
  status                    token_status_enum?
  description               String?
  token_created_at          DateTime?            @db.Timestamptz(6)
  token_updated_at          DateTime?            @db.Timestamptz(6)
  erc1155_property_id       String?              @db.Uuid
  base_uri                  String?
  metadata_storage          String?
  has_royalty               Boolean?
  royalty_percentage        String?
  royalty_receiver          String?
  is_burnable               Boolean?
  is_pausable               Boolean?
  access_control            String?
  updatable_uris            Boolean?
  supply_tracking           Boolean?
  enable_approval_for_all   Boolean?
  sales_config              Json?
  whitelist_config          Json?
  batch_transfer_limits     Json?
  dynamic_uri_config        Json?
  batch_minting_config      Json?
  transfer_restrictions     Json?
  container_config          Json?
  lazy_minting_enabled      Boolean?
  burning_enabled           Boolean?
  updatable_metadata        Boolean?
  crafting_enabled          Boolean?
  fusion_enabled            Boolean?
  experience_points_enabled Boolean?
  voting_power_enabled      Boolean?
  marketplace_fees_enabled  Boolean?
  bridge_enabled            Boolean?
  pricing_model             String?
  base_price                String?
  bulk_discount_enabled     Boolean?
  airdrop_enabled           Boolean?
  claim_period_enabled      Boolean?
  claim_start_time          DateTime?            @db.Timestamptz(6)
  claim_end_time            DateTime?            @db.Timestamptz(6)
  property_created_at       DateTime?            @db.Timestamptz(6)
  property_updated_at       DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc3525_view {
  token_id                      String?              @db.Uuid
  name                          String?
  symbol                        String?
  decimals                      Int?
  standard                      token_standard_enum?
  total_supply                  String?
  metadata                      Json?
  status                        token_status_enum?
  description                   String?
  token_created_at              DateTime?            @db.Timestamptz(6)
  token_updated_at              DateTime?            @db.Timestamptz(6)
  erc3525_property_id           String?              @db.Uuid
  value_decimals                Int?
  base_uri                      String?
  metadata_storage              String?
  slot_type                     String?
  is_burnable                   Boolean?
  is_pausable                   Boolean?
  has_royalty                   Boolean?
  royalty_percentage            String?
  royalty_receiver              String?
  slot_approvals                Boolean?
  value_approvals               Boolean?
  access_control                String?
  updatable_uris                Boolean?
  updatable_slots               Boolean?
  value_transfers_enabled       Boolean?
  sales_config                  Json?
  mergable                      Boolean?
  splittable                    Boolean?
  slot_transfer_validation      Json?
  dynamic_metadata              Boolean?
  allows_slot_enumeration       Boolean?
  value_aggregation             Boolean?
  permissioning_enabled         Boolean?
  supply_tracking               Boolean?
  updatable_values              Boolean?
  fractional_ownership_enabled  Boolean?
  financial_instrument_type     String?
  principal_amount              String?
  interest_rate                 String?
  maturity_date                 DateTime?            @db.Timestamptz(6)
  coupon_frequency              String?
  early_redemption_enabled      Boolean?
  derivative_type               String?
  underlying_asset              String?
  strike_price                  String?
  expiration_date               DateTime?            @db.Timestamptz(6)
  settlement_type               String?
  slot_creation_enabled         Boolean?
  dynamic_slot_creation         Boolean?
  cross_slot_transfers          Boolean?
  value_computation_method      String?
  accrual_enabled               Boolean?
  accrual_rate                  String?
  partial_value_trading         Boolean?
  minimum_trade_value           String?
  yield_farming_enabled         Boolean?
  liquidity_provision_enabled   Boolean?
  compound_interest_enabled     Boolean?
  flash_loan_enabled            Boolean?
  regulatory_compliance_enabled Boolean?
  kyc_required                  Boolean?
  accredited_investor_only      Boolean?
  property_created_at           DateTime?            @db.Timestamptz(6)
  property_updated_at           DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc20_view {
  token_id              String?              @db.Uuid
  name                  String?
  symbol                String?
  decimals              Int?
  standard              token_standard_enum?
  total_supply          String?
  metadata              Json?
  status                token_status_enum?
  description           String?
  token_created_at      DateTime?            @db.Timestamptz(6)
  token_updated_at      DateTime?            @db.Timestamptz(6)
  erc20_property_id     String?              @db.Uuid
  token_type            String?
  cap                   String?
  initial_supply        String?
  access_control        String?
  allow_management      Boolean?
  is_mintable           Boolean?
  is_burnable           Boolean?
  is_pausable           Boolean?
  snapshot              Boolean?
  permit                Boolean?
  rebasing              Json?
  fee_on_transfer       Json?
  governance_features   Json?
  compliance_config     Json?
  transfer_config       Json?
  gas_config            Json?
  whitelist_config      Json?
  governance_enabled    Boolean?
  quorum_percentage     String?
  proposal_threshold    String?
  voting_delay          Int?
  voting_period         Int?
  anti_whale_enabled    Boolean?
  max_wallet_amount     String?
  reflection_enabled    Boolean?
  reflection_percentage String?
  vesting_enabled       Boolean?
  vesting_cliff_period  Int?
  presale_enabled       Boolean?
  presale_rate          String?
  trading_start_time    DateTime?            @db.Timestamptz(6)
  property_created_at   DateTime?            @db.Timestamptz(6)
  property_updated_at   DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc721_view {
  token_id                    String?              @db.Uuid
  name                        String?
  symbol                      String?
  decimals                    Int?
  standard                    token_standard_enum?
  total_supply                String?
  metadata                    Json?
  status                      token_status_enum?
  description                 String?
  token_created_at            DateTime?            @db.Timestamptz(6)
  token_updated_at            DateTime?            @db.Timestamptz(6)
  erc721_property_id          String?              @db.Uuid
  base_uri                    String?
  metadata_storage            String?
  max_supply                  String?
  has_royalty                 Boolean?
  royalty_percentage          String?
  royalty_receiver            String?
  is_burnable                 Boolean?
  is_pausable                 Boolean?
  asset_type                  String?
  minting_method              String?
  auto_increment_ids          Boolean?
  enumerable                  Boolean?
  uri_storage                 String?
  access_control              String?
  updatable_uris              Boolean?
  sales_config                Json?
  whitelist_config            Json?
  permission_config           Json?
  contract_uri                String?
  revealable                  Boolean?
  pre_reveal_uri              String?
  reserved_tokens             Int?
  minting_price               String?
  max_mints_per_tx            Int?
  max_mints_per_wallet        Int?
  enable_fractional_ownership Boolean?
  enable_dynamic_metadata     Boolean?
  public_sale_enabled         Boolean?
  public_sale_price           String?
  public_sale_start_time      DateTime?            @db.Timestamptz(6)
  whitelist_sale_enabled      Boolean?
  whitelist_sale_price        String?
  whitelist_sale_start_time   DateTime?            @db.Timestamptz(6)
  utility_enabled             Boolean?
  utility_type                String?
  staking_enabled             Boolean?
  soulbound                   Boolean?
  cross_chain_enabled         Boolean?
  property_created_at         DateTime?            @db.Timestamptz(6)
  property_updated_at         DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_geographic_restrictions_view {
  token_id                     String?              @db.Uuid
  token_name                   String?
  token_symbol                 String?
  standard                     token_standard_enum?
  restriction_type             String?
  country_code                 String?              @db.Char(2)
  country_name                 String?
  region                       String?
  regulatory_regime            String?
  max_ownership_percentage     Decimal?             @db.Decimal(5, 2)
  requires_local_custodian     Boolean?
  requires_regulatory_approval Boolean?
  sanctions_risk_level         String?
  is_ofac_sanctioned           Boolean?
  is_eu_sanctioned             Boolean?
  is_un_sanctioned             Boolean?
  effective_date               DateTime?            @db.Date
  expiry_date                  DateTime?            @db.Date
  notes                        String?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view token_whitelist_summary {
  token_id                  String?              @db.Uuid
  token_name                String?
  token_symbol              String?
  token_standard            token_standard_enum?
  erc20_whitelist_enabled   Boolean?
  erc721_whitelist_enabled  Boolean?
  erc1155_whitelist_enabled Boolean?
  erc1400_whitelist_enabled Boolean?
  erc3525_whitelist_enabled Boolean?
  erc4626_whitelist_enabled Boolean?
  whitelisted_address_count BigInt?
  created_at                DateTime?            @db.Timestamptz(6)
  updated_at                DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view user_permissions_view {
  user_id                String? @db.Uuid
  user_name              String?
  email                  String?
  role_name              String?
  permission_name        String?
  permission_description String?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view transfer_history {
  id            String?   @db.Uuid
  hash          String?
  from_address  String?
  to_address    String?
  amount        Decimal?  @db.Decimal
  asset         String?
  blockchain    String?
  status        String?
  transfer_type String?
  network_fee   Decimal?  @db.Decimal
  gas_used      Decimal?  @db.Decimal
  block_number  Int?
  confirmations Int?
  memo          String?
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view audit_coverage {
  trigger_name  Unsupported("name")?
  schema_name   Unsupported("name")?
  table_name    Unsupported("name")?
  function_name Unsupported("name")?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc1400_view {
  token_id                        String?              @db.Uuid
  name                            String?
  symbol                          String?
  decimals                        Int?
  standard                        token_standard_enum?
  total_supply                    String?
  metadata                        Json?
  status                          token_status_enum?
  description                     String?
  token_created_at                DateTime?            @db.Timestamptz(6)
  token_updated_at                DateTime?            @db.Timestamptz(6)
  erc1400_property_id             String?              @db.Uuid
  initial_supply                  String?
  cap                             String?
  is_mintable                     Boolean?
  is_burnable                     Boolean?
  is_pausable                     Boolean?
  document_uri                    String?
  document_hash                   String?
  controller_address              String?
  require_kyc                     Boolean?
  security_type                   String?
  issuing_jurisdiction            String?
  issuing_entity_name             String?
  issuing_entity_lei              String?
  transfer_restrictions           Json?
  kyc_settings                    Json?
  compliance_settings             Json?
  forced_transfers                Boolean?
  issuance_modules                Boolean?
  document_management             Boolean?
  recovery_mechanism              Boolean?
  regulation_type                 String?
  is_multi_class                  Boolean?
  tranche_transferability         Boolean?
  token_details                   String?
  legal_terms                     String?
  prospectus                      String?
  enforce_kyc                     Boolean?
  forced_redemption_enabled       Boolean?
  whitelist_enabled               Boolean?
  holding_period                  Int?
  max_investor_count              Int?
  investor_accreditation          Boolean?
  auto_compliance                 Boolean?
  manual_approvals                Boolean?
  compliance_module               String?
  is_issuable                     Boolean?
  granular_control                Boolean?
  dividend_distribution           Boolean?
  corporate_actions               Boolean?
  custom_features                 Json?
  geographic_restrictions         Json?
  compliance_automation_level     String?
  institutional_grade             Boolean?
  custody_integration_enabled     Boolean?
  prime_brokerage_support         Boolean?
  settlement_integration          String?
  real_time_compliance_monitoring Boolean?
  automated_sanctions_screening   Boolean?
  aml_monitoring_enabled          Boolean?
  advanced_corporate_actions      Boolean?
  stock_splits_enabled            Boolean?
  treasury_management_enabled     Boolean?
  advanced_governance_enabled     Boolean?
  proxy_voting_enabled            Boolean?
  cross_border_trading_enabled    Boolean?
  multi_jurisdiction_compliance   Boolean?
  enhanced_reporting_enabled      Boolean?
  beneficial_ownership_tracking   Boolean?
  traditional_finance_integration Boolean?
  swift_integration_enabled       Boolean?
  iso20022_messaging_support      Boolean?
  advanced_risk_management        Boolean?
  insurance_coverage_enabled      Boolean?
  property_created_at             DateTime?            @db.Timestamptz(6)
  property_updated_at             DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc4626_view {
  token_id                     String?              @db.Uuid
  name                         String?
  symbol                       String?
  decimals                     Int?
  standard                     token_standard_enum?
  total_supply                 String?
  metadata                     Json?
  status                       token_status_enum?
  description                  String?
  token_created_at             DateTime?            @db.Timestamptz(6)
  token_updated_at             DateTime?            @db.Timestamptz(6)
  erc4626_property_id          String?              @db.Uuid
  asset_address                String?
  asset_name                   String?
  asset_symbol                 String?
  asset_decimals               Int?
  vault_type                   String?
  is_mintable                  Boolean?
  is_burnable                  Boolean?
  is_pausable                  Boolean?
  vault_strategy               String?
  custom_strategy              Boolean?
  strategy_controller          String?
  access_control               String?
  permit                       Boolean?
  flash_loans                  Boolean?
  emergency_shutdown           Boolean?
  fee_structure                Json?
  rebalancing_rules            Json?
  performance_metrics          Boolean?
  yield_source                 String?
  automated_rebalancing        Boolean?
  strategy_complexity          String?
  multi_asset_enabled          Boolean?
  rebalancing_enabled          Boolean?
  auto_compounding_enabled     Boolean?
  yield_optimization_enabled   Boolean?
  risk_management_enabled      Boolean?
  risk_tolerance               String?
  apy_tracking_enabled         Boolean?
  benchmark_tracking_enabled   Boolean?
  benchmark_index              String?
  compound_frequency           String?
  governance_token_enabled     Boolean?
  strategy_voting_enabled      Boolean?
  fee_voting_enabled           Boolean?
  insurance_enabled            Boolean?
  emergency_exit_enabled       Boolean?
  circuit_breaker_enabled      Boolean?
  liquidity_mining_enabled     Boolean?
  market_making_enabled        Boolean?
  cross_chain_yield_enabled    Boolean?
  institutional_grade          Boolean?
  compliance_reporting_enabled Boolean?
  third_party_audits_enabled   Boolean?
  property_created_at          DateTime?            @db.Timestamptz(6)
  property_updated_at          DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view valid_policy_approvers {
  id             String?   @db.Uuid
  policy_rule_id String?   @db.Uuid
  user_id        String?   @db.Uuid
  created_by     String?   @db.Uuid
  created_at     DateTime? @db.Timestamptz(6)
  status         String?
  comment        String?
  timestamp      DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum LimitType {
  POSITION_SIZE
  DAILY_LOSS
  VAR_LIMIT
  CONCENTRATION
  LEVERAGE

  @@schema("public")
}

enum OrderType {
  MARKET
  LIMIT
  STOP
  STOP_LIMIT

  @@schema("public")
}

enum TradeSide {
  BUY
  SELL

  @@schema("public")
}

enum TradeStatus {
  PENDING
  PARTIALLY_FILLED
  FILLED
  CANCELLED
  REJECTED
  SETTLED

  @@schema("public")
}

enum UserRole {
  ADMIN
  TRADER
  RISK_MANAGER
  COMPLIANCE
  SETTLEMENT

  @@schema("public")
}

enum compliance_status {
  compliant
  non_compliant
  pending_review

  @@schema("public")
}

enum document_status {
  pending
  approved
  rejected
  expired

  @@schema("public")
}

enum document_type {
  commercial_register
  certificate_incorporation
  memorandum_articles
  director_list
  shareholder_register
  financial_statements
  regulatory_status
  qualification_summary
  business_description
  organizational_chart
  key_people_cv
  aml_kyc_description

  @@schema("public")
}

enum issuer_document_type {
  issuer_creditworthiness
  project_security_type
  offering_details
  term_sheet
  special_rights
  underwriters
  use_of_proceeds
  financial_highlights
  timing
  risk_factors

  @@schema("public")
}

enum issuer_role {
  admin
  editor
  viewer
  compliance_officer

  @@schema("public")
}

enum kyc_status {
  approved
  pending
  failed
  not_started
  expired

  @@schema("public")
}

enum pool_type_enum {
  Total_Pool @map("Total Pool")
  Tranche

  @@schema("public")
}

enum project_duration {
  one_month      @map("1_month")
  three_months   @map("3_months")
  six_months     @map("6_months")
  nine_months    @map("9_months")
  twelve_months  @map("12_months")
  over_12_months

  @@schema("public")
}

enum token_config_mode_enum {
  min
  max
  basic
  advanced

  @@schema("public")
}

enum token_standard_enum {
  ERC_20   @map("ERC-20")
  ERC_721  @map("ERC-721")
  ERC_1155 @map("ERC-1155")
  ERC_1400 @map("ERC-1400")
  ERC_3525 @map("ERC-3525")
  ERC_4626 @map("ERC-4626")

  @@schema("public")
}

enum token_status_enum {
  DRAFT
  UNDER_REVIEW  @map("UNDER REVIEW")
  APPROVED
  READY_TO_MINT @map("READY TO MINT")
  MINTED
  DEPLOYED
  PAUSED
  DISTRIBUTED
  REJECTED

  @@schema("public")
}

enum workflow_status {
  pending
  completed
  rejected

  @@schema("public")
}

/// EIP-4337 Bundler configurations for different chains and networks
model bundler_configurations {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bundler_name          String
  bundler_address       String
  entry_point_address   String
  chain_id              Int
  rpc_url               String
  max_bundle_size       Int       @default(5)
  max_bundle_wait_time  Int       @default(5000)
  min_priority_fee      BigInt    @default(1000000000)
  is_active             Boolean   @default(true)
  supported_entry_points String[]  @default([])
  gas_price_multiplier  Decimal   @default(1.10) @db.Decimal(4,2)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([bundler_name, chain_id], map: "idx_bundler_configurations_name_chain")
  @@index([chain_id], map: "idx_bundler_configurations_chain_id")
  @@index([is_active], map: "idx_bundler_configurations_is_active")
  @@schema("public")
}

/// EIP-4337 Bundler operations tracking for UserOperation bundling
model bundler_operations {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bundle_hash        String    @unique
  bundler_address    String
  entry_point_address String
  chain_id           Int
  user_operations    String[]  // Array of user operation hashes
  transaction_hash   String?
  block_number       BigInt?
  gas_used           BigInt?
  gas_price          BigInt?
  status             String    // 'pending' | 'submitted' | 'included' | 'failed'
  bundle_size        Int
  total_gas_limit    BigInt
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  submitted_at       DateTime? @db.Timestamptz(6)
  included_at        DateTime? @db.Timestamptz(6)
  failure_reason     String?

  @@index([bundle_hash], map: "idx_bundler_operations_bundle_hash")
  @@index([status], map: "idx_bundler_operations_status")
  @@index([chain_id], map: "idx_bundler_operations_chain_id")
  @@index([created_at], map: "idx_bundler_operations_created_at")
  @@schema("public")
}

/// Session keys for account abstraction - temporary spending permissions
model session_keys {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id           String    @db.Uuid
  session_key_address String
  public_key          String
  permissions         Json      // SessionKeyPermissions as JSON
  validity_start      DateTime  @db.Timestamptz(6)
  validity_end        DateTime  @db.Timestamptz(6)
  status              String    @default("active") // 'active' | 'revoked' | 'expired'
  created_by_user_id  String    @db.Uuid
  spending_limit      BigInt?
  daily_limit         BigInt?
  allowed_targets     String[]  @default([])
  allowed_functions   String[]  @default([])
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  last_used_at        DateTime? @db.Timestamptz(6)
  revoked_at          DateTime? @db.Timestamptz(6)
  usage_count         Int       @default(0)

  session_key_usage   session_key_usage[]

  @@unique([session_key_address], map: "idx_session_keys_address_unique")
  @@index([wallet_id], map: "idx_session_keys_wallet_id")
  @@index([status], map: "idx_session_keys_status")
  @@index([validity_end], map: "idx_session_keys_validity_end")
  @@index([created_by_user_id], map: "idx_session_keys_created_by")
  @@schema("public")
}

/// Session key usage tracking for monitoring and limits
model session_key_usage {
  id                String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_key_id    String      @db.Uuid
  user_operation_id String      @db.Uuid
  amount_spent      BigInt
  target_address    String
  function_signature String?
  created_at        DateTime    @default(now()) @db.Timestamptz(6)

  session_keys      session_keys @relation(fields: [session_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([session_key_id], map: "idx_session_key_usage_session_key_id")
  @@index([user_operation_id], map: "idx_session_key_usage_user_operation_id")
  @@index([created_at], map: "idx_session_key_usage_created_at")
  @@schema("public")
}
