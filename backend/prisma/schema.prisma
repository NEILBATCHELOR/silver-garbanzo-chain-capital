generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
  output          = "../src/infrastructure/database/generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String     @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @db.Timestamptz(6)
  updated_at      DateTime?  @db.Timestamptz(6)
  email           String?    @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      auth_users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model auth_users {
  instance_id                                                     String?                            @db.Uuid
  id                                                              String                             @id @db.Uuid
  aud                                                             String?                            @db.VarChar(255)
  role                                                            String?                            @db.VarChar(255)
  email                                                           String?                            @db.VarChar(255)
  encrypted_password                                              String?                            @db.VarChar(255)
  email_confirmed_at                                              DateTime?                          @db.Timestamptz(6)
  invited_at                                                      DateTime?                          @db.Timestamptz(6)
  confirmation_token                                              String?                            @db.VarChar(255)
  confirmation_sent_at                                            DateTime?                          @db.Timestamptz(6)
  recovery_token                                                  String?                            @db.VarChar(255)
  recovery_sent_at                                                DateTime?                          @db.Timestamptz(6)
  email_change_token_new                                          String?                            @db.VarChar(255)
  email_change                                                    String?                            @db.VarChar(255)
  email_change_sent_at                                            DateTime?                          @db.Timestamptz(6)
  last_sign_in_at                                                 DateTime?                          @db.Timestamptz(6)
  raw_app_meta_data                                               Json?
  raw_user_meta_data                                              Json?
  is_super_admin                                                  Boolean?
  created_at                                                      DateTime?                          @db.Timestamptz(6)
  updated_at                                                      DateTime?                          @db.Timestamptz(6)
  phone                                                           String?                            @unique
  phone_confirmed_at                                              DateTime?                          @db.Timestamptz(6)
  phone_change                                                    String?                            @default("")
  phone_change_token                                              String?                            @default("") @db.VarChar(255)
  phone_change_sent_at                                            DateTime?                          @db.Timestamptz(6)
  confirmed_at                                                    DateTime?                          @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                                      String?                            @default("") @db.VarChar(255)
  email_change_confirm_status                                     Int?                               @default(0) @db.SmallInt
  banned_until                                                    DateTime?                          @db.Timestamptz(6)
  reauthentication_token                                          String?                            @default("") @db.VarChar(255)
  reauthentication_sent_at                                        DateTime?                          @db.Timestamptz(6)
  is_sso_user                                                     Boolean                            @default(false)
  deleted_at                                                      DateTime?                          @db.Timestamptz(6)
  is_anonymous                                                    Boolean                            @default(false)
  identities                                                      identities[]
  mfa_factors                                                     mfa_factors[]
  one_time_tokens                                                 one_time_tokens[]
  sessions                                                        sessions[]
  approval_requests                                               approval_requests[]
  asset_nav_data_asset_nav_data_created_byTousers                 asset_nav_data[]                   @relation("asset_nav_data_created_byTousers")
  asset_nav_data_asset_nav_data_validated_byTousers               asset_nav_data[]                   @relation("asset_nav_data_validated_byTousers")
  audit_logs                                                      audit_logs[]
  climate_reports                                                 climate_reports[]
  climate_user_data_sources                                       climate_user_data_sources[]
  compliance_reports_compliance_reports_created_byTousers         compliance_reports[]               @relation("compliance_reports_created_byTousers")
  compliance_reports_compliance_reports_updated_byTousers         compliance_reports[]               @relation("compliance_reports_updated_byTousers")
  credential_usage_logs                                           credential_usage_logs[]
  document_workflows_document_workflows_created_byTousers         document_workflows[]               @relation("document_workflows_created_byTousers")
  document_workflows_document_workflows_updated_byTousers         document_workflows[]               @relation("document_workflows_updated_byTousers")
  fund_nav_data_fund_nav_data_created_byTousers                   fund_nav_data[]                    @relation("fund_nav_data_created_byTousers")
  fund_nav_data_fund_nav_data_validated_byTousers                 fund_nav_data[]                    @relation("fund_nav_data_validated_byTousers")
  individual_documents_individual_documents_reviewed_byTousers    individual_documents[]             @relation("individual_documents_reviewed_byTousers")
  individual_documents_individual_documents_uploaded_byTousers    individual_documents[]             @relation("individual_documents_uploaded_byTousers")
  investor_approvals                                              investor_approvals[]
  investor_documents_investor_documents_created_byTousers         investor_documents[]               @relation("investor_documents_created_byTousers")
  investor_documents_investor_documents_reviewed_byTousers        investor_documents[]               @relation("investor_documents_reviewed_byTousers")
  investor_documents_investor_documents_updated_byTousers         investor_documents[]               @relation("investor_documents_updated_byTousers")
  investors                                                       investors[]
  issuer_access_roles_issuer_access_roles_created_byTousers       issuer_access_roles[]              @relation("issuer_access_roles_created_byTousers")
  issuer_access_roles_issuer_access_roles_updated_byTousers       issuer_access_roles[]              @relation("issuer_access_roles_updated_byTousers")
  issuer_access_roles_issuer_access_roles_user_idTousers          issuer_access_roles[]              @relation("issuer_access_roles_user_idTousers")
  issuer_documents_issuer_documents_created_byTousers             issuer_documents[]                 @relation("issuer_documents_created_byTousers")
  issuer_documents_issuer_documents_reviewed_byTousers            issuer_documents[]                 @relation("issuer_documents_reviewed_byTousers")
  issuer_documents_issuer_documents_updated_byTousers             issuer_documents[]                 @relation("issuer_documents_updated_byTousers")
  multi_sig_audit_log                                             multi_sig_audit_log[]
  multi_sig_proposals                                             multi_sig_proposals[]
  multi_sig_wallets                                               multi_sig_wallets[]
  nav_oracle_configs                                              nav_oracle_configs[]
  notification_settings                                           notification_settings[]
  onchain_identities                                              onchain_identities[]
  profiles                                                        profiles?
  project_organization_assignments                                project_organization_assignments[]
  redemption_notifications                                        redemption_notifications[]
  redemption_requests_redemption_requests_approved_byTousers      redemption_requests[]              @relation("redemption_requests_approved_byTousers")
  redemption_requests_redemption_requests_processed_byTousers     redemption_requests[]              @relation("redemption_requests_processed_byTousers")
  redemption_requests_redemption_requests_requested_byTousers     redemption_requests[]              @relation("redemption_requests_requested_byTousers")
  redemption_settlements                                          redemption_settlements[]
  redemption_window_templates                                     redemption_window_templates[]
  redemption_windows_redemption_windows_approved_byTousers        redemption_windows[]               @relation("redemption_windows_approved_byTousers")
  redemption_windows_redemption_windows_last_modified_byTousers   redemption_windows[]               @relation("redemption_windows_last_modified_byTousers")
  redemption_windows_redemption_windows_created_byTousers         redemption_windows[]               @relation("redemption_windows_created_byTousers")
  redemption_windows_redemption_windows_processed_byTousers       redemption_windows[]               @relation("redemption_windows_processed_byTousers")
  ripple_dex_orders                                               ripple_dex_orders[]
  ripple_escrows                                                  ripple_escrows[]
  ripple_multisig_accounts                                        ripple_multisig_accounts[]
  ripple_multisig_proposals                                       ripple_multisig_proposals[]
  ripple_trust_lines                                              ripple_trust_lines[]
  security_events                                                 security_events[]
  sidebar_configurations_sidebar_configurations_created_byTousers sidebar_configurations[]           @relation("sidebar_configurations_created_byTousers")
  sidebar_configurations_sidebar_configurations_updated_byTousers sidebar_configurations[]           @relation("sidebar_configurations_updated_byTousers")
  sidebar_items_sidebar_items_created_byTousers                   sidebar_items[]                    @relation("sidebar_items_created_byTousers")
  sidebar_items_sidebar_items_updated_byTousers                   sidebar_items[]                    @relation("sidebar_items_updated_byTousers")
  sidebar_sections_sidebar_sections_created_byTousers             sidebar_sections[]                 @relation("sidebar_sections_created_byTousers")
  sidebar_sections_sidebar_sections_updated_byTousers             sidebar_sections[]                 @relation("sidebar_sections_updated_byTousers")
  signer_keys                                                     signer_keys[]
  tokens                                                          tokens[]
  transaction_proposals                                           transaction_proposals[]
  transaction_signatures                                          transaction_signatures[]
  user_mfa_settings                                               user_mfa_settings[]
  user_sidebar_preferences                                        user_sidebar_preferences[]
  users_users_auth_idTousers                                      public_users?                      @relation("users_auth_idTousers")
  users                                                           public_users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model alerts {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  severity    String
  service     String
  title       String
  description String?
  status      String    @default("OPEN")
  assignee    String?
  metadata    Json?     @default("{}")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([service], map: "idx_alerts_service")
  @@index([severity], map: "idx_alerts_severity")
  @@index([status], map: "idx_alerts_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model approval_config_approvers {
  id                                                      String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  approval_config_id                                      String           @db.Uuid
  approver_type                                           String
  approver_user_id                                        String?          @db.Uuid
  approver_role_id                                        String?          @db.Uuid
  is_required                                             Boolean?         @default(true)
  order_priority                                          Int?             @default(0)
  created_at                                              DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at                                              DateTime?        @default(now()) @db.Timestamptz(6)
  created_by                                              String?          @db.Uuid
  approval_configs                                        approval_configs @relation(fields: [approval_config_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles                                                   roles?           @relation(fields: [approver_role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_approval_config_approvers_approver_user_idTousers public_users?    @relation("approval_config_approvers_approver_user_idTousers", fields: [approver_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_approval_config_approvers_created_byTousers       public_users?    @relation("approval_config_approvers_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([approval_config_id, approver_role_id], map: "unique_config_role_approver")
  @@unique([approval_config_id, approver_user_id], map: "unique_config_user_approver")
  @@index([approval_config_id], map: "idx_approval_config_approvers_config_id")
  @@index([approver_role_id], map: "idx_approval_config_approvers_role_id")
  @@index([approver_type], map: "idx_approval_config_approvers_type")
  @@index([approver_user_id], map: "idx_approval_config_approvers_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model approval_config_history {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  approval_config_id String           @db.Uuid
  change_type        String
  old_data           Json?
  new_data           Json?
  changed_by         String?          @db.Uuid
  change_reason      String?
  created_at         DateTime?        @default(now()) @db.Timestamptz(6)
  approval_configs   approval_configs @relation(fields: [approval_config_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users              public_users?    @relation(fields: [changed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([changed_by], map: "idx_approval_config_history_changed_by")
  @@index([approval_config_id], map: "idx_approval_config_history_config_id")
  @@index([created_at], map: "idx_approval_config_history_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model approval_configs {
  id                                             String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  permission_id                                  String                      @unique @db.Uuid
  required_approvals                             Int                         @default(2)
  eligible_roles                                 String[]
  auto_approval_conditions                       Json?
  created_at                                     DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime?                   @default(now()) @db.Timestamptz(6)
  consensus_type                                 String                      @default("2of3")
  config_name                                    String?
  config_description                             String?
  approval_mode                                  String?                     @default("mixed")
  requires_all_approvers                         Boolean?                    @default(false)
  auto_approve_threshold                         Int?                        @default(0)
  escalation_config                              Json?
  notification_config                            Json?
  active                                         Boolean?                    @default(true)
  created_by                                     String?                     @db.Uuid
  last_modified_by                               String?                     @db.Uuid
  approval_config_approvers                      approval_config_approvers[]
  approval_config_history                        approval_config_history[]
  users_approval_configs_created_byTousers       public_users?               @relation("approval_configs_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_approval_configs_last_modified_byTousers public_users?               @relation("approval_configs_last_modified_byTousers", fields: [last_modified_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([active], map: "idx_approval_configs_active")
  @@index([approval_mode], map: "idx_approval_configs_approval_mode")
  @@index([created_by], map: "idx_approval_configs_created_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model approval_requests {
  id                 String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  action             String     @db.VarChar(100)
  resource           String     @db.VarChar(100)
  resource_id        String     @db.VarChar(100)
  requested_by       String     @db.Uuid
  status             String     @default("pending") @db.VarChar(20)
  approvers          String[]   @db.Uuid
  approved_by        String[]   @default([]) @db.Uuid
  rejected_by        String[]   @default([]) @db.Uuid
  required_approvals Int        @default(2)
  metadata           Json?
  created_at         DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?  @default(now()) @db.Timestamptz(6)
  users              auth_users @relation(fields: [requested_by], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model audit_logs {
  id                 String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  timestamp          DateTime    @default(now()) @db.Timestamptz(6)
  action             String
  username           String?     @default("system")
  details            String?     @default("system action")
  status             String?     @default("Success")
  signature          String?
  verified           Boolean?    @default(false)
  user_email         String?
  user_id            String?     @db.Uuid
  entity_type        String?
  entity_id          String?
  old_data           Json?
  new_data           Json?
  metadata           Json?
  project_id         String?     @db.Uuid
  action_type        String?
  changes            Json?
  occurred_at        DateTime?   @default(now()) @db.Timestamptz(6)
  system_process_id  String?     @db.Uuid
  batch_operation_id String?     @db.Uuid
  severity           String?     @default("info")
  duration           Int?
  source             String?
  is_automated       Boolean?    @default(false)
  category           String?     @db.VarChar
  parent_id          String?     @db.Uuid
  correlation_id     String?     @db.VarChar
  session_id         String?     @db.VarChar
  ip_address         String?     @db.VarChar
  user_agent         String?     @db.VarChar
  api_version        String?     @db.VarChar
  request_id         String?     @db.VarChar
  importance         Int?        @default(1)
  users              auth_users? @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([action], map: "idx_audit_logs_action")
  @@index([action_type], map: "idx_audit_logs_action_type")
  @@index([batch_operation_id], map: "idx_audit_logs_batch_operation")
  @@index([category], map: "idx_audit_logs_category")
  @@index([correlation_id], map: "idx_audit_logs_correlation_id")
  @@index([entity_type, entity_id], map: "idx_audit_logs_entity")
  @@index([entity_type], map: "idx_audit_logs_entity_type")
  @@index([is_automated], map: "idx_audit_logs_is_automated")
  @@index([parent_id], map: "idx_audit_logs_parent_id")
  @@index([timestamp(sort: Desc), source, status], map: "idx_audit_logs_performance")
  @@index([session_id], map: "idx_audit_logs_session_id")
  @@index([severity], map: "idx_audit_logs_severity")
  @@index([source], map: "idx_audit_logs_source")
  @@index([status], map: "idx_audit_logs_status")
  @@index([system_process_id], map: "idx_audit_logs_system_process")
  @@index([timestamp(sort: Desc)], map: "idx_audit_logs_timestamp")
  @@index([username], map: "idx_audit_logs_user")
  @@index([user_id], map: "idx_audit_logs_user_id")
  @@schema("public")
}

model auth_events {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?   @db.Uuid
  event_type String
  ip_address String?
  user_agent String?
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bulk_operations {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  completed_at    DateTime? @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  metadata        Json?
  operation_type  String?
  status          String?
  tags            String[]
  target_ids      String[]  @db.Uuid
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  progress        Float?    @default(0)
  processed_count Int?      @default(0)
  failed_count    Int?      @default(0)
  error_details   Json?

  @@index([created_at(sort: Desc)], map: "idx_bulk_operations_created_at")
  @@index([operation_type], map: "idx_bulk_operations_operation_type")
  @@index([status], map: "idx_bulk_operations_status")
  @@schema("public")
}

model cap_tables {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  description String?
  project_id  String?   @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  projects    projects? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model compliance_checks {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id String    @db.Uuid
  project_id  String    @db.Uuid
  risk_level  String
  risk_reason String
  status      String
  reviewed_by String?   @db.Uuid
  reviewed_at DateTime? @db.Timestamptz(6)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  investors   investors @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  projects    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([investor_id, project_id])
  @@index([project_id, risk_level], map: "idx_compliance_checks_project_risk")
  @@schema("public")
}

model compliance_reports {
  id                                         String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_id                                  String            @db.Uuid
  generated_at                               DateTime          @default(now()) @db.Timestamptz(6)
  status                                     compliance_status @default(pending_review)
  findings                                   Json              @default("[]")
  metadata                                   Json              @default("{}")
  created_at                                 DateTime          @default(now()) @db.Timestamptz(6)
  updated_at                                 DateTime          @default(now()) @db.Timestamptz(6)
  created_by                                 String            @db.Uuid
  updated_by                                 String            @db.Uuid
  users_compliance_reports_created_byTousers auth_users        @relation("compliance_reports_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_compliance_reports_updated_byTousers auth_users        @relation("compliance_reports_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([generated_at], map: "idx_compliance_reports_generated_at")
  @@index([issuer_id], map: "idx_compliance_reports_issuer_id")
  @@index([status], map: "idx_compliance_reports_status")
  @@schema("public")
}

model compliance_settings {
  id                    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  organization_id       String   @unique
  kyc_status            String   @default("not_started")
  require_accreditation Boolean  @default(false)
  minimum_investment    Int      @default(0)
  jurisdictions         String[] @default([])
  investor_count        Int      @default(0)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model consensus_settings {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  consensus_type     String   @unique
  required_approvals Int
  eligible_roles     String[]
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  updated_at         DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model credential_usage_logs {
  id             String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  credential_id  String      @db.Uuid
  action_type    String
  action_details Json?
  performed_by   String?     @db.Uuid
  performed_at   DateTime?   @default(now()) @db.Timestamptz(6)
  ip_address     String?
  user_agent     String?
  users          auth_users? @relation(fields: [performed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([credential_id], map: "idx_credential_usage_logs_credential_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model deployment_rate_limits {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id      String    @db.Uuid
  project_id   String    @db.Uuid
  token_id     String    @db.Uuid
  started_at   DateTime  @default(now()) @db.Timestamptz(6)
  completed_at DateTime? @db.Timestamptz(6)
  status       String
  network      String?
  environment  String?
  tokens       tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token")

  @@unique([token_id, started_at], map: "unique_token_deployment")
  @@index([started_at], map: "idx_deployment_rate_limits_started_at")
  @@index([status], map: "idx_deployment_rate_limits_status")
  @@index([user_id, project_id], map: "idx_deployment_rate_limits_user_project")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_activity_logs {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  activity_type   String
  entity_id       String
  entity_type     String
  description     String
  user_id         String?
  status          String
  metadata        Json?
  ip_address      String?   @db.Inet
  user_agent      String?
  organization_id String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([activity_type], map: "idx_dfns_activity_logs_activity_type")
  @@index([created_at], map: "idx_dfns_activity_logs_created_at")
  @@index([entity_id], map: "idx_dfns_activity_logs_entity_id")
  @@index([entity_type], map: "idx_dfns_activity_logs_entity_type")
  @@schema("public")
}

model dfns_api_requests {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  endpoint         String
  method           String
  request_id       String?
  request_body     Json?
  response_body    Json?
  status_code      Int
  response_time_ms Int?
  error_message    String?
  user_id          String?
  organization_id  String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_dfns_api_requests_created_at")
  @@index([endpoint], map: "idx_dfns_api_requests_endpoint")
  @@index([status_code], map: "idx_dfns_api_requests_status_code")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_applications {
  id                   String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  app_id               String    @unique
  name                 String
  description          String?
  kind                 String
  origin               String?
  relying_party        String?
  status               String    @default("Active")
  external_id          String?
  logo_url             String?
  terms_of_service_url String?
  privacy_policy_url   String?
  organization_id      String?
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([app_id], map: "idx_dfns_applications_app_id")
  @@index([organization_id], map: "idx_dfns_applications_organization_id")
  @@index([status], map: "idx_dfns_applications_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_authentication_challenges {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  challenge_id   String    @unique
  user_id        String
  challenge_data Json
  status         String    @default("pending")
  expires_at     DateTime  @db.Timestamptz(6)
  completed_at   DateTime? @db.Timestamptz(6)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_dfns_authentication_challenges_expires_at")
  @@index([status], map: "idx_dfns_authentication_challenges_status")
  @@index([user_id], map: "idx_dfns_authentication_challenges_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_broadcast_transactions {
  id                String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  broadcast_id      String        @unique
  wallet_id         String?
  kind              String
  transaction       String
  external_id       String?
  status            String        @default("Pending")
  tx_hash           String?
  date_created      DateTime      @default(now()) @db.Timestamptz(6)
  date_broadcast    DateTime?     @db.Timestamptz(6)
  date_confirmed    DateTime?     @db.Timestamptz(6)
  error_message     String?
  dfns_broadcast_id String        @unique
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets      dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_credential_challenges {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  challenge_id    String    @unique
  user_id         String
  credential_type String
  challenge_data  Json
  status          String    @default("pending")
  expires_at      DateTime  @db.Timestamptz(6)
  completed_at    DateTime? @db.Timestamptz(6)
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_dfns_credential_challenges_expires_at")
  @@index([status], map: "idx_dfns_credential_challenges_status")
  @@index([user_id], map: "idx_dfns_credential_challenges_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_credentials {
  id                 String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  credential_id      String      @unique
  user_id            String?     @db.Uuid
  name               String?
  kind               String
  status             String      @default("Active")
  public_key         String
  algorithm          String
  attestation_type   String?
  authenticator_info Json?
  enrolled_at        DateTime    @default(now()) @db.Timestamptz(6)
  last_used_at       DateTime?   @db.Timestamptz(6)
  dfns_credential_id String?     @unique
  created_at         DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?   @default(now()) @db.Timestamptz(6)
  dfns_users         dfns_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([credential_id], map: "idx_dfns_credentials_credential_id")
  @@index([status], map: "idx_dfns_credentials_status")
  @@index([user_id], map: "idx_dfns_credentials_user_id")
  @@schema("public")
}

model dfns_exchange_accounts {
  id                         String                      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  account_id                 String                      @unique
  exchange_integration_id    String?
  account_type               String
  trading_enabled            Boolean?                    @default(false)
  withdrawal_enabled         Boolean?                    @default(false)
  last_updated               DateTime?                   @default(now()) @db.Timestamptz(6)
  dfns_account_id            String?                     @unique
  created_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  dfns_exchange_integrations dfns_exchange_integrations? @relation(fields: [exchange_integration_id], references: [integration_id], onDelete: Cascade, onUpdate: NoAction)
  dfns_exchange_balances     dfns_exchange_balances[]

  @@schema("public")
}

model dfns_exchange_balances {
  id                     String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  account_id             String?
  asset                  String
  total                  String                  @default("0")
  available              String                  @default("0")
  locked                 String                  @default("0")
  last_updated           DateTime?               @default(now()) @db.Timestamptz(6)
  created_at             DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?               @default(now()) @db.Timestamptz(6)
  dfns_exchange_accounts dfns_exchange_accounts? @relation(fields: [account_id], references: [account_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([account_id, asset])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_exchange_integrations {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  integration_id         String                   @unique
  name                   String
  exchange_kind          String
  credentials            Json
  status                 String                   @default("Active")
  config                 Json?
  last_sync_at           DateTime?                @db.Timestamptz(6)
  organization_id        String?
  dfns_exchange_id       String?                  @unique
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  dfns_exchange_accounts dfns_exchange_accounts[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_fee_sponsors {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sponsor_id          String                @unique
  name                String
  sponsor_address     String
  network             String
  status              String                @default("Active")
  balance             String                @default("0")
  spent_amount        String                @default("0")
  transaction_count   Int?                  @default(0)
  external_id         String?
  organization_id     String?
  dfns_sponsor_id     String?               @unique
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  dfns_sponsored_fees dfns_sponsored_fees[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_activity_logs {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id         String                 @db.Uuid
  activity_type          String
  status                 String
  description            String?
  provider_data          Json?
  error_details          Json?
  created_at             DateTime?              @default(now()) @db.Timestamptz(6)
  dfns_fiat_transactions dfns_fiat_transactions @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([activity_type], map: "idx_dfns_fiat_activity_logs_activity_type")
  @@index([created_at], map: "idx_dfns_fiat_activity_logs_created_at")
  @@index([transaction_id], map: "idx_dfns_fiat_activity_logs_transaction_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_provider_configs {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String    @unique
  configuration             Json
  is_enabled                Boolean?  @default(true)
  supported_currencies      String[]  @default([])
  supported_payment_methods String[]  @default([])
  created_at                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_quotes {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String
  type                      String
  from_amount               Decimal   @db.Decimal(20, 8)
  from_currency             String
  to_amount                 Decimal   @db.Decimal(20, 8)
  to_currency               String
  exchange_rate             Decimal   @db.Decimal(20, 8)
  fees                      Json
  payment_method            String
  estimated_processing_time String?
  expires_at                DateTime  @db.Timestamptz(6)
  created_at                DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_dfns_fiat_quotes_created_at")
  @@index([expires_at], map: "idx_dfns_fiat_quotes_expires_at")
  @@index([provider], map: "idx_dfns_fiat_quotes_provider")
  @@index([type], map: "idx_dfns_fiat_quotes_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_fiat_transactions {
  id                        String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String
  provider_transaction_id   String
  type                      String
  status                    String
  amount                    Decimal                   @db.Decimal(20, 8)
  currency                  String
  crypto_asset              String
  wallet_address            String
  wallet_id                 String?                   @db.Uuid
  payment_method            String?
  bank_account              Json?
  payment_url               String?
  withdrawal_address        String?
  tx_hash                   String?
  exchange_rate             Json?
  fees                      Json?
  estimated_completion_time String?
  expires_at                DateTime?                 @db.Timestamptz(6)
  metadata                  Json?                     @default("{}")
  user_id                   String?                   @db.Uuid
  project_id                String?                   @db.Uuid
  organization_id           String?                   @db.Uuid
  created_at                DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                 @default(now()) @db.Timestamptz(6)
  dfns_fiat_activity_logs   dfns_fiat_activity_logs[]
  dfns_wallets              dfns_wallets?             @relation(fields: [wallet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([provider, provider_transaction_id])
  @@index([created_at], map: "idx_dfns_fiat_transactions_created_at")
  @@index([crypto_asset], map: "idx_dfns_fiat_transactions_crypto_asset")
  @@index([currency], map: "idx_dfns_fiat_transactions_currency")
  @@index([organization_id], map: "idx_dfns_fiat_transactions_organization_id")
  @@index([project_id], map: "idx_dfns_fiat_transactions_project_id")
  @@index([provider], map: "idx_dfns_fiat_transactions_provider")
  @@index([provider, status], map: "idx_dfns_fiat_transactions_provider_status")
  @@index([status], map: "idx_dfns_fiat_transactions_status")
  @@index([type], map: "idx_dfns_fiat_transactions_type")
  @@index([user_id], map: "idx_dfns_fiat_transactions_user_id")
  @@index([user_id, status], map: "idx_dfns_fiat_transactions_user_status")
  @@index([wallet_id], map: "idx_dfns_fiat_transactions_wallet_id")
  @@index([wallet_id, type], map: "idx_dfns_fiat_transactions_wallet_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_permission_assignments {
  id               String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  permission_id    String?
  identity_id      String
  identity_kind    String
  assigned_by      String
  assigned_at      DateTime          @default(now()) @db.Timestamptz(6)
  organization_id  String?
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?         @default(now()) @db.Timestamptz(6)
  dfns_permissions dfns_permissions? @relation(fields: [permission_id], references: [permission_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([permission_id, identity_id, identity_kind])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_permissions {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  permission_id               String                        @unique
  name                        String
  resources                   String[]
  operations                  String[]
  effect                      String
  condition                   Json?
  status                      String                        @default("Active")
  description                 String?
  category                    String?
  organization_id             String?
  dfns_permission_id          String?                       @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  dfns_permission_assignments dfns_permission_assignments[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_personal_access_tokens {
  id                     String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                   String
  status                 String      @default("Active")
  expires_at             DateTime?   @db.Timestamptz(6)
  last_used_at           DateTime?   @db.Timestamptz(6)
  permission_assignments Json?
  user_id                String?     @db.Uuid
  dfns_token_id          String?     @unique
  created_at             DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?   @default(now()) @db.Timestamptz(6)
  dfns_users             dfns_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_policies {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  policy_id                   String                        @unique
  name                        String
  description                 String?
  rule_legacy                 Json
  activity_kind               String
  status                      String                        @default("Active")
  external_id                 String?
  organization_id             String?
  dfns_policy_id              String?                       @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  rule_kind                   String?
  rule_configuration          Json?
  action_kind                 String?
  action_configuration        Json?
  filters                     Json?
  metadata                    Json?
  dfns_policy_approval_groups dfns_policy_approval_groups[]
  dfns_policy_approvals       dfns_policy_approvals[]

  @@index([activity_kind], map: "idx_dfns_policies_activity_kind")
  @@index([policy_id], map: "idx_dfns_policies_policy_id")
  @@index([status], map: "idx_dfns_policies_status")
  @@index([action_kind], map: "idx_dfns_policies_action_kind")
  @@index([dfns_policy_id], map: "idx_dfns_policies_dfns_id")
  @@index([organization_id], map: "idx_dfns_policies_org")
  @@index([rule_kind], map: "idx_dfns_policies_rule_kind")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_policy_approvals {
  id                             String                           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  approval_id                    String                           @unique
  activity_id                    String
  policy_id                      String?
  status                         String                           @default("Pending")
  reason                         String?
  approved_by                    String?
  approved_at                    DateTime?                        @db.Timestamptz(6)
  rejected_by                    String?
  rejected_at                    DateTime?                        @db.Timestamptz(6)
  metadata                       Json?
  organization_id                String?
  dfns_approval_id               String?                          @unique
  created_at                     DateTime?                        @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime?                        @default(now()) @db.Timestamptz(6)
  dfns_policy_id                 String?
  initiator_id                   String?
  expiration_date                DateTime?                        @db.Timestamptz(6)
  activity_details               Json?
  evaluated_policies             Json?
  dfns_policy_approval_decisions dfns_policy_approval_decisions[]
  dfns_policies                  dfns_policies?                   @relation(fields: [policy_id], references: [policy_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([activity_id], map: "idx_dfns_policy_approvals_activity")
  @@index([dfns_approval_id], map: "idx_dfns_policy_approvals_dfns_id")
  @@index([organization_id], map: "idx_dfns_policy_approvals_org")
  @@index([policy_id], map: "idx_dfns_policy_approvals_policy_id")
  @@index([status], map: "idx_dfns_policy_approvals_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_service_accounts {
  id                      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                    String
  status                  String    @default("Active")
  external_id             String?
  public_key              String?
  permission_assignments  Json?
  organization_id         String?
  dfns_service_account_id String?   @unique
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_signatures {
  id                String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  signature_id      String             @unique
  key_id            String?
  kind              String
  message           String
  external_id       String?
  status            String             @default("Pending")
  signature         String?
  public_key        String
  date_created      DateTime           @default(now()) @db.Timestamptz(6)
  date_completed    DateTime?          @db.Timestamptz(6)
  error_message     String?
  dfns_signature_id String             @unique
  created_at        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?          @default(now()) @db.Timestamptz(6)
  dfns_signing_keys dfns_signing_keys? @relation(fields: [key_id], references: [key_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_signing_keys {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  key_id          String            @unique
  public_key      String
  network         String
  curve           String
  scheme          String
  status          String            @default("Active")
  delegated       Boolean?          @default(false)
  delegated_to    String?
  external_id     String?
  tags            String[]
  imported        Boolean?          @default(false)
  exported        Boolean?          @default(false)
  date_exported   DateTime?         @db.Timestamptz(6)
  organization_id String?
  dfns_key_id     String            @unique
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  dfns_signatures dfns_signatures[]
  dfns_wallets    dfns_wallets[]

  @@index([key_id], map: "idx_dfns_signing_keys_key_id")
  @@index([network], map: "idx_dfns_signing_keys_network")
  @@index([status], map: "idx_dfns_signing_keys_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_sponsored_fees {
  id                String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sponsored_fee_id  String             @unique
  fee_sponsor_id    String?
  wallet_id         String?
  tx_hash           String
  amount            String
  asset             String
  status            String             @default("Pending")
  sponsored_at      DateTime           @default(now()) @db.Timestamptz(6)
  error_message     String?
  created_at        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?          @default(now()) @db.Timestamptz(6)
  dfns_fee_sponsors dfns_fee_sponsors? @relation(fields: [fee_sponsor_id], references: [sponsor_id], onDelete: Cascade, onUpdate: NoAction)
  dfns_wallets      dfns_wallets?      @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_staking_integrations {
  id                String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  staking_id        String        @unique
  wallet_id         String?
  network           String
  validator_address String?
  delegation_amount String        @default("0")
  status            String
  total_rewards     String        @default("0")
  pending_rewards   String        @default("0")
  claimed_rewards   String        @default("0")
  last_reward_at    DateTime?     @db.Timestamptz(6)
  last_claim_at     DateTime?     @db.Timestamptz(6)
  apr               String?
  unstaking_period  String?
  dfns_staking_id   String?       @unique
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets      dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_sync_status {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  entity_type     String
  entity_id       String?
  last_sync_at    DateTime  @default(now()) @db.Timestamptz(6)
  sync_status     String
  error_message   String?
  next_sync_at    DateTime? @db.Timestamptz(6)
  organization_id String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([entity_type, entity_id])
  @@index([entity_type], map: "idx_dfns_sync_status_entity_type")
  @@index([last_sync_at], map: "idx_dfns_sync_status_last_sync_at")
  @@index([sync_status], map: "idx_dfns_sync_status_sync_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_transaction_history {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id        String?
  tx_hash          String
  direction        String
  status           String
  asset_symbol     String
  asset_name       String?
  contract_address String?
  amount           String
  fee              String?
  to_address       String?
  from_address     String?
  block_number     BigInt?
  block_hash       String?
  timestamp        DateTime      @db.Timestamptz(6)
  metadata         Json?
  last_updated     DateTime?     @default(now()) @db.Timestamptz(6)
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets     dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, tx_hash])
  @@index([timestamp], map: "idx_dfns_transaction_history_timestamp")
  @@index([tx_hash], map: "idx_dfns_transaction_history_tx_hash")
  @@index([wallet_id], map: "idx_dfns_transaction_history_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_transfers {
  id                          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  transfer_id                 String        @unique
  wallet_id                   String?
  to_address                  String
  amount                      String
  asset                       String?
  memo                        String?
  external_id                 String?
  nonce                       Int?
  gas_limit                   String?
  gas_price                   String?
  max_fee_per_gas             String?
  max_priority_fee_per_gas    String?
  status                      String        @default("Pending")
  tx_hash                     String?
  fee                         String?
  date_created                DateTime      @default(now()) @db.Timestamptz(6)
  date_broadcast              DateTime?     @db.Timestamptz(6)
  date_confirmed              DateTime?     @db.Timestamptz(6)
  estimated_confirmation_time String?
  error_message               String?
  dfns_transfer_id            String        @unique
  created_at                  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets                dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([status], map: "idx_dfns_transfers_status")
  @@index([transfer_id], map: "idx_dfns_transfers_transfer_id")
  @@index([tx_hash], map: "idx_dfns_transfers_tx_hash")
  @@index([wallet_id], map: "idx_dfns_transfers_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_user_action_challenges {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  challenge_id   String    @unique
  user_id        String
  action_type    String
  action_data    Json
  challenge      String
  signature      String?
  signing_method String?
  credential_id  String?
  status         String    @default("pending")
  expires_at     DateTime  @db.Timestamptz(6)
  verified_at    DateTime? @db.Timestamptz(6)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_dfns_user_action_challenges_expires_at")
  @@index([status], map: "idx_dfns_user_action_challenges_status")
  @@index([user_id], map: "idx_dfns_user_action_challenges_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dfns_user_sessions {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id    String    @unique
  user_id       String
  access_token  String
  refresh_token String
  expires_at    DateTime  @db.Timestamptz(6)
  remember_me   Boolean   @default(false)
  status        String    @default("active")
  logged_out_at DateTime? @db.Timestamptz(6)
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([access_token], map: "idx_dfns_user_sessions_access_token")
  @@index([expires_at], map: "idx_dfns_user_sessions_expires_at")
  @@index([status], map: "idx_dfns_user_sessions_status")
  @@index([user_id], map: "idx_dfns_user_sessions_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_users {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username                    String                        @unique
  email                       String?
  status                      String                        @default("Active")
  kind                        String
  external_id                 String?
  public_key                  String?
  recovery_setup              Boolean?                      @default(false)
  mfa_enabled                 Boolean?                      @default(false)
  last_login_at               DateTime?                     @db.Timestamptz(6)
  registered_at               DateTime                      @default(now()) @db.Timestamptz(6)
  organization_id             String?
  dfns_user_id                String?                       @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  dfns_credentials            dfns_credentials[]
  dfns_personal_access_tokens dfns_personal_access_tokens[]

  @@index([dfns_user_id], map: "idx_dfns_users_dfns_user_id")
  @@index([email], map: "idx_dfns_users_email")
  @@index([status], map: "idx_dfns_users_status")
  @@index([username], map: "idx_dfns_users_username")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_validators {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  validator_address String
  network           String
  name              String?
  commission        String    @default("0")
  delegated_amount  String    @default("0")
  status            String
  apr               String?
  uptime            String?
  rank              Int?
  last_updated      DateTime? @default(now()) @db.Timestamptz(6)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([validator_address, network])
  @@schema("public")
}

model dfns_wallet_balances {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id        String?
  asset_symbol     String
  asset_name       String?
  contract_address String?
  balance          String        @default("0")
  value_in_usd     String?
  decimals         Int           @default(18)
  verified         Boolean?      @default(false)
  native_asset     Boolean?      @default(false)
  last_updated     DateTime?     @default(now()) @db.Timestamptz(6)
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets     dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, asset_symbol, contract_address])
  @@index([asset_symbol], map: "idx_dfns_wallet_balances_asset_symbol")
  @@index([wallet_id], map: "idx_dfns_wallet_balances_wallet_id")
  @@schema("public")
}

model dfns_wallet_nfts {
  id           String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id    String?
  contract     String
  token_id     String
  collection   String?
  name         String?
  description  String?
  image_url    String?
  external_url String?
  attributes   Json?
  last_updated DateTime?     @default(now()) @db.Timestamptz(6)
  created_at   DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?     @default(now()) @db.Timestamptz(6)
  dfns_wallets dfns_wallets? @relation(fields: [wallet_id], references: [wallet_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, contract, token_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_wallets {
  id                          String                        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id                   String                        @unique
  network                     String
  name                        String?
  address                     String
  signing_key_id              String?
  custodial                   Boolean?                      @default(true)
  imported                    Boolean?                      @default(false)
  exported                    Boolean?                      @default(false)
  date_exported               DateTime?                     @db.Timestamptz(6)
  external_id                 String?
  tags                        String[]
  status                      String                        @default("Active")
  delegated                   Boolean?                      @default(false)
  delegated_to                String?
  organization_id             String?
  project_id                  String?                       @db.Uuid
  investor_id                 String?                       @db.Uuid
  dfns_wallet_id              String                        @unique
  created_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamptz(6)
  dfns_broadcast_transactions dfns_broadcast_transactions[]
  dfns_fiat_transactions      dfns_fiat_transactions[]
  dfns_sponsored_fees         dfns_sponsored_fees[]
  dfns_staking_integrations   dfns_staking_integrations[]
  dfns_transaction_history    dfns_transaction_history[]
  dfns_transfers              dfns_transfers[]
  dfns_wallet_balances        dfns_wallet_balances[]
  dfns_wallet_nfts            dfns_wallet_nfts[]
  dfns_signing_keys           dfns_signing_keys?            @relation(fields: [signing_key_id], references: [key_id], onDelete: Restrict, onUpdate: NoAction)

  @@index([address], map: "idx_dfns_wallets_address")
  @@index([investor_id], map: "idx_dfns_wallets_investor_id")
  @@index([network], map: "idx_dfns_wallets_network")
  @@index([project_id], map: "idx_dfns_wallets_project_id")
  @@index([status], map: "idx_dfns_wallets_status")
  @@index([wallet_id], map: "idx_dfns_wallets_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_webhook_deliveries {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  delivery_id   String         @unique
  webhook_id    String?
  event         String
  payload       Json
  status        String         @default("Pending")
  response_code Int?
  response_body String?
  attempts      Int?           @default(0)
  next_retry_at DateTime?      @db.Timestamptz(6)
  delivered_at  DateTime?      @db.Timestamptz(6)
  error_message String?
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?      @default(now()) @db.Timestamptz(6)
  dfns_webhooks dfns_webhooks? @relation(fields: [webhook_id], references: [webhook_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model dfns_webhooks {
  id                      String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  webhook_id              String                    @unique
  name                    String
  url                     String
  description             String?
  events                  String[]
  status                  String                    @default("Active")
  secret                  String?
  headers                 Json?
  external_id             String?
  organization_id         String?
  dfns_webhook_id         String?                   @unique
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  dfns_webhook_deliveries dfns_webhook_deliveries[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model distribution_redemptions {
  id                    String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  distribution_id       String              @db.Uuid
  redemption_request_id String              @db.Uuid
  amount_redeemed       Decimal             @db.Decimal
  created_at            DateTime            @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?           @default(now()) @db.Timestamptz(6)
  organization_id       String?             @db.Uuid
  project_id            String?             @db.Uuid
  distributions         distributions       @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distribution_redemptions_distribution_fkey")
  redemption_requests   redemption_requests @relation(fields: [redemption_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distribution_redemptions_redemption_fkey")

  @@unique([distribution_id, redemption_request_id], map: "distribution_redemptions_unique")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model distributions {
  id                         String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token_allocation_id        String                     @db.Uuid
  investor_id                String                     @db.Uuid
  subscription_id            String                     @db.Uuid
  project_id                 String?                    @db.Uuid
  token_type                 String
  token_amount               Decimal                    @db.Decimal
  distribution_date          DateTime                   @db.Timestamptz(6)
  distribution_tx_hash       String
  wallet_id                  String?                    @db.Uuid
  blockchain                 String
  token_address              String?
  token_symbol               String?
  to_address                 String
  status                     String                     @default("confirmed")
  notes                      String?
  created_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                  @default(now()) @db.Timestamptz(6)
  remaining_amount           Decimal                    @db.Decimal
  fully_redeemed             Boolean                    @default(false)
  standard                   token_standard_enum?
  redemption_status          String?
  redemption_percentage_used Decimal?                   @default(0) @db.Decimal
  redemption_locked_amount   Decimal?                   @default(0) @db.Decimal
  distribution_redemptions   distribution_redemptions[]
  investors                  investors                  @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "distributions_investor_fkey")
  projects                   projects?                  @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "distributions_project_fkey")
  subscriptions              subscriptions              @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distributions_subscription_fkey")
  multi_sig_wallets          multi_sig_wallets?         @relation(fields: [wallet_id], references: [id], onUpdate: NoAction, map: "distributions_wallet_fkey")

  @@index([distribution_date], map: "idx_distributions_distribution_date")
  @@index([investor_id], map: "idx_distributions_investor_id")
  @@index([token_allocation_id], map: "idx_distributions_token_allocation_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model document_approvals {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  document_id String?       @db.Uuid
  approver_id String?       @db.Uuid
  status      String
  comments    String?
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  users       public_users? @relation(fields: [approver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  documents   documents?    @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([document_id], map: "idx_document_approvals_document_id")
  @@schema("public")
}

model document_versions {
  id             String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  document_id    String?       @db.Uuid
  version_number Int
  file_path      String?
  file_url       String?
  uploaded_by    String?       @db.Uuid
  metadata       Json?
  created_at     DateTime?     @default(now()) @db.Timestamptz(6)
  documents      documents?    @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          public_users? @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([document_id, version_number])
  @@index([document_id], map: "idx_document_versions_document_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model document_workflows {
  id                                         String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id                                String           @db.Uuid
  required_signers                           String[]         @db.Uuid
  completed_signers                          String[]         @default([]) @db.Uuid
  status                                     workflow_status  @default(pending)
  deadline                                   DateTime?        @db.Timestamptz(6)
  metadata                                   Json             @default("{}")
  created_at                                 DateTime         @default(now()) @db.Timestamptz(6)
  updated_at                                 DateTime         @default(now()) @db.Timestamptz(6)
  created_by                                 String           @db.Uuid
  updated_by                                 String           @db.Uuid
  users_document_workflows_created_byTousers auth_users       @relation("document_workflows_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  issuer_documents                           issuer_documents @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_document_workflows_updated_byTousers auth_users       @relation("document_workflows_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([document_id], map: "idx_document_workflows_document_id")
  @@index([status], map: "idx_document_workflows_status")
  @@schema("public")
}

model documents {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String
  type               String
  status             String               @default("pending")
  file_path          String?
  file_url           String?
  entity_id          String               @db.Uuid
  entity_type        String
  metadata           Json?                @default("{}")
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  category           String?
  project_id         String?              @db.Uuid
  uploaded_by        String?              @db.Uuid
  expiry_date        DateTime?            @db.Timestamptz(6)
  workflow_stage_id  String?
  version            Int?                 @default(1)
  document_approvals document_approvals[]
  document_versions  document_versions[]
  workflow_stages    workflow_stages?     @relation(fields: [workflow_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([entity_id], map: "idx_documents_entity_id")
  @@index([entity_type], map: "idx_documents_entity_type")
  @@index([expiry_date], map: "idx_documents_expiry_date")
  @@index([status], map: "idx_documents_status")
  @@index([workflow_stage_id], map: "idx_documents_workflow_stage")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model faucet_requests {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_address   String
  token_address    String?
  amount           String
  network          String
  status           String    @default("PENDING")
  transaction_hash String?
  user_id          String?   @db.Uuid
  ip_address       String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @db.Timestamptz(6)

  @@index([created_at], map: "idx_faucet_requests_created_at")
  @@index([network], map: "idx_faucet_requests_network")
  @@index([status], map: "idx_faucet_requests_status")
  @@index([wallet_address], map: "idx_faucet_requests_wallet_address")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fiat_quotes {
  id                          String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                    String
  type                        String
  from_amount                 Decimal            @db.Decimal(20, 8)
  from_currency               String
  to_amount                   Decimal            @db.Decimal(20, 8)
  to_currency                 String
  exchange_rate               Decimal            @db.Decimal(20, 8)
  fees                        Json
  payment_method              String
  estimated_processing_time   String?
  expires_at                  DateTime           @db.Timestamptz(6)
  user_id                     String?            @db.Uuid
  session_id                  String?
  converted_to_transaction_id String?            @db.Uuid
  created_at                  DateTime           @default(now()) @db.Timestamptz(6)
  fiat_transactions           fiat_transactions? @relation(fields: [converted_to_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_fiat_quotes_created_at")
  @@index([expires_at], map: "idx_fiat_quotes_expires_at")
  @@index([provider], map: "idx_fiat_quotes_provider")
  @@index([session_id], map: "idx_fiat_quotes_session_id")
  @@index([type], map: "idx_fiat_quotes_type")
  @@index([user_id], map: "idx_fiat_quotes_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fiat_transactions {
  id                        String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider                  String
  provider_transaction_id   String
  type                      String
  status                    String
  amount                    Decimal                   @db.Decimal(20, 8)
  currency                  String
  crypto_asset              String
  wallet_address            String
  wallet_id                 String?                   @db.Uuid
  payment_method            String?
  bank_account              Json?
  payment_url               String?
  withdrawal_address        String?
  tx_hash                   String?
  exchange_rate             Json?
  fees                      Json?
  estimated_completion_time String?
  expires_at                DateTime?                 @db.Timestamptz(6)
  metadata                  Json?                     @default("{}")
  user_id                   String?                   @db.Uuid
  project_id                String?                   @db.Uuid
  organization_id           String?                   @db.Uuid
  created_at                DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                  @default(now()) @db.Timestamptz(6)
  fiat_quotes               fiat_quotes[]
  ramp_transaction_events   ramp_transaction_events[]

  @@unique([provider, provider_transaction_id], map: "fiat_transactions_provider_transaction_unique")
  @@index([created_at(sort: Desc)], map: "idx_fiat_transactions_created_at")
  @@index([provider], map: "idx_fiat_transactions_provider")
  @@index([provider_transaction_id], map: "idx_fiat_transactions_provider_transaction_id")
  @@index([status], map: "idx_fiat_transactions_status")
  @@index([type], map: "idx_fiat_transactions_type")
  @@index([user_id], map: "idx_fiat_transactions_user_id")
  @@index([wallet_address], map: "idx_fiat_transactions_wallet_address")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model fund_nav_data {
  id                                      String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  fund_id                                 String      @db.Uuid
  date                                    DateTime    @db.Date
  nav                                     Decimal     @db.Decimal(18, 6)
  total_assets                            Decimal     @db.Decimal(78, 18)
  total_liabilities                       Decimal     @default(0) @db.Decimal(78, 18)
  outstanding_shares                      Decimal     @db.Decimal(78, 18)
  previous_nav                            Decimal?    @db.Decimal(18, 6)
  change_amount                           Decimal?    @db.Decimal(18, 6)
  change_percent                          Decimal?    @db.Decimal(8, 4)
  source                                  String      @default("manual")
  validated                               Boolean?    @default(false)
  validated_by                            String?     @db.Uuid
  validated_at                            DateTime?   @db.Timestamptz(6)
  notes                                   String?
  calculation_method                      String?
  market_conditions                       String?
  created_at                              DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime?   @default(now()) @db.Timestamptz(6)
  created_by                              String?     @db.Uuid
  users_fund_nav_data_created_byTousers   auth_users? @relation("fund_nav_data_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_fund_nav_data_validated_byTousers auth_users? @relation("fund_nav_data_validated_byTousers", fields: [validated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([fund_id, date], map: "unique_fund_date")
  @@index([fund_id, date(sort: Desc)], map: "idx_fund_nav_data_fund_date")
  @@index([validated, date(sort: Desc)], map: "idx_fund_nav_data_validated")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model geographic_jurisdictions {
  id                                                                                                              String                           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  country_code                                                                                                    String                           @unique @db.Char(2)
  country_code_3                                                                                                  String                           @unique @db.Char(3)
  country_name                                                                                                    String
  region                                                                                                          String
  regulatory_regime                                                                                               String?
  sanctions_risk_level                                                                                            String?                          @default("low")
  fatf_compliance_status                                                                                          String?                          @default("compliant")
  tax_treaty_status                                                                                               String?
  kyc_requirements_level                                                                                          String?                          @default("standard")
  aml_risk_rating                                                                                                 String?                          @default("low")
  is_ofac_sanctioned                                                                                              Boolean?                         @default(false)
  is_eu_sanctioned                                                                                                Boolean?                         @default(false)
  is_un_sanctioned                                                                                                Boolean?                         @default(false)
  offshore_financial_center                                                                                       Boolean?                         @default(false)
  created_at                                                                                                      DateTime?                        @default(now()) @db.Timestamptz(6)
  updated_at                                                                                                      DateTime?                        @default(now()) @db.Timestamptz(6)
  regulatory_equivalence_mapping_regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions regulatory_equivalence_mapping[] @relation("regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions")
  regulatory_equivalence_mapping_regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions       regulatory_equivalence_mapping[] @relation("regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions")
  token_geographic_restrictions                                                                                   token_geographic_restrictions[]

  @@index([region, regulatory_regime], map: "idx_jurisdictions_region")
  @@index([is_ofac_sanctioned, is_eu_sanctioned, is_un_sanctioned], map: "idx_jurisdictions_sanctions")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model guardian_api_tests {
  id                                                                               String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  test_name                                                                        String                @db.VarChar(100)
  test_type                                                                        String                @db.VarChar(50)
  endpoint                                                                         String                @db.VarChar(200)
  http_method                                                                      String                @db.VarChar(10)
  request_payload                                                                  Json?
  request_headers                                                                  Json?
  response_status                                                                  Int?
  response_payload                                                                 Json?
  response_headers                                                                 Json?
  guardian_wallet_id                                                               String?               @db.VarChar(100)
  guardian_operation_id                                                            String?               @db.VarChar(100)
  guardian_wallet_address                                                          String?               @db.VarChar(100)
  execution_time_ms                                                                Int?
  success                                                                          Boolean               @default(false)
  error_message                                                                    String?
  created_at                                                                       DateTime?             @default(now()) @db.Timestamptz(6)
  created_by                                                                       String?               @db.VarChar(100)
  notes                                                                            String?
  guardian_operations                                                              guardian_operations[]
  guardian_wallets_guardian_wallets_creation_request_idToguardian_api_tests        guardian_wallets[]    @relation("guardian_wallets_creation_request_idToguardian_api_tests")
  guardian_wallets_guardian_wallets_operation_check_request_idToguardian_api_tests guardian_wallets[]    @relation("guardian_wallets_operation_check_request_idToguardian_api_tests")
  guardian_wallets_guardian_wallets_wallet_details_request_idToguardian_api_tests  guardian_wallets[]    @relation("guardian_wallets_wallet_details_request_idToguardian_api_tests")

  @@index([created_at], map: "idx_guardian_api_tests_created_at")
  @@index([guardian_operation_id], map: "idx_guardian_api_tests_guardian_operation_id")
  @@index([guardian_wallet_id], map: "idx_guardian_api_tests_guardian_wallet_id")
  @@index([test_type], map: "idx_guardian_api_tests_test_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model guardian_operations {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id       String              @unique @db.VarChar(100)
  operation_type     String              @db.VarChar(50)
  operation_status   String?             @db.VarChar(50)
  guardian_wallet_id String?             @db.VarChar(100)
  related_test_id    String?             @db.Uuid
  operation_result   Json?
  operation_error    Json?
  created_at         DateTime?           @default(now()) @db.Timestamptz(6)
  last_checked_at    DateTime?           @default(now()) @db.Timestamptz(6)
  completed_at       DateTime?           @db.Timestamptz(6)
  check_count        Int?                @default(0)
  notes              String?
  guardian_api_tests guardian_api_tests? @relation(fields: [related_test_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation_id], map: "idx_guardian_operations_operation_id")
  @@index([operation_status], map: "idx_guardian_operations_status")
  @@index([guardian_wallet_id], map: "idx_guardian_operations_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model guardian_wallets {
  id                                                                                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  guardian_wallet_id                                                                 String              @unique @db.VarChar(100)
  guardian_operation_id                                                              String?             @db.VarChar(100)
  guardian_internal_id                                                               String?             @db.VarChar(100)
  wallet_name                                                                        String?             @db.VarChar(200)
  wallet_status                                                                      String?             @db.VarChar(50)
  wallet_addresses                                                                   Json?
  wallet_metadata                                                                    Json?
  creation_request_id                                                                String?             @db.Uuid
  operation_check_request_id                                                         String?             @db.Uuid
  wallet_details_request_id                                                          String?             @db.Uuid
  requested_at                                                                       DateTime?           @default(now()) @db.Timestamptz(6)
  operation_completed_at                                                             DateTime?           @db.Timestamptz(6)
  wallet_retrieved_at                                                                DateTime?           @db.Timestamptz(6)
  test_notes                                                                         String?
  created_by                                                                         String?             @db.VarChar(100)
  updated_at                                                                         DateTime?           @default(now()) @db.Timestamptz(6)
  guardian_api_tests_guardian_wallets_creation_request_idToguardian_api_tests        guardian_api_tests? @relation("guardian_wallets_creation_request_idToguardian_api_tests", fields: [creation_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guardian_api_tests_guardian_wallets_operation_check_request_idToguardian_api_tests guardian_api_tests? @relation("guardian_wallets_operation_check_request_idToguardian_api_tests", fields: [operation_check_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guardian_api_tests_guardian_wallets_wallet_details_request_idToguardian_api_tests  guardian_api_tests? @relation("guardian_wallets_wallet_details_request_idToguardian_api_tests", fields: [wallet_details_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([guardian_wallet_id], map: "idx_guardian_wallets_guardian_wallet_id")
  @@index([requested_at], map: "idx_guardian_wallets_requested_at")
  @@index([wallet_status], map: "idx_guardian_wallets_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model health_checks {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  service       String    @unique
  status        String
  response_time Int?
  details       Json?     @default("{}")
  last_check    DateTime? @default(now()) @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([service], map: "idx_health_checks_service")
  @@schema("public")
}

model investor_approvals {
  id                 String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  investor_id        String      @db.Uuid
  reviewer_id        String?     @db.Uuid
  status             String      @default("pending")
  rejection_reason   String?
  approval_date      DateTime?   @db.Timestamptz(6)
  submission_date    DateTime?   @default(now()) @db.Timestamptz(6)
  approval_type      String
  required_documents Json?
  review_notes       String?
  metadata           Json?
  created_at         DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?   @default(now()) @db.Timestamptz(6)
  investors          investors   @relation(fields: [investor_id], references: [investor_id], onDelete: NoAction, onUpdate: NoAction)
  users              auth_users? @relation(fields: [reviewer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approval_type], map: "idx_investor_approvals_approval_type")
  @@index([investor_id], map: "idx_investor_approvals_investor_id")
  @@index([status], map: "idx_investor_approvals_status")
  @@schema("public")
}

model investor_group_members {
  group_id        String          @db.Uuid
  investor_id     String          @db.Uuid
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  investor_groups investor_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "investor_group_members_group_fkey")
  investors       investors       @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "investor_group_members_investor_fkey")

  @@id([group_id, investor_id])
  @@schema("public")
}

model investor_groups {
  id                        String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                      String
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  project_id                String?                     @db.Uuid
  description               String?
  member_count              Int                         @default(0)
  group                     String?
  investor_group_members    investor_group_members[]
  projects                  projects?                   @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  investor_groups_investors investor_groups_investors[]

  @@schema("public")
}

model investor_groups_investors {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  group_id        String          @db.Uuid
  investor_id     String          @db.Uuid
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  project_id      String?         @db.Uuid
  organization_id String?         @db.Uuid
  investor_groups investor_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  investors       investors       @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([group_id, investor_id])
  @@index([group_id], map: "idx_investor_groups_investors_group_id")
  @@index([investor_id], map: "idx_investor_groups_investors_investor_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model investors {
  investor_id               String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                      String
  email                     String
  type                      String
  wallet_address            String?
  kyc_status                kyc_status
  lastUpdated               String?
  verification_details      Json?
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  kyc_expiry_date           DateTime?                   @db.Timestamptz(6)
  company                   String?
  notes                     String?
  investor_status           String?                     @default("pending")
  onboarding_completed      Boolean?                    @default(false)
  risk_assessment           Json?
  profile_data              Json?
  accreditation_status      String?                     @default("not_started")
  accreditation_expiry_date DateTime?                   @db.Timestamptz(6)
  accreditation_type        String?
  tax_residency             String?
  tax_id_number             String?
  investment_preferences    Json?
  last_compliance_check     DateTime?                   @db.Timestamptz(6)
  compliance_checked_by     String?                     @db.Uuid
  compliance_checked_email  String?
  compliance_checked_at     DateTime?                   @db.Timestamptz(6)
  organization_id           String?                     @db.Uuid
  project_id                String?                     @db.Uuid
  user_id                   String?                     @db.Uuid
  profile_type              profile_type?
  profile_id                String?                     @db.Uuid
  climate_investor_pools    climate_investor_pools[]
  compliance_checks         compliance_checks[]
  distributions             distributions[]
  investor_approvals        investor_approvals[]
  investor_documents        investor_documents[]
  investor_group_members    investor_group_members[]
  investor_groups_investors investor_groups_investors[]
  publicUsers                     public_users?               @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_investors_user_id")
  authUsers                     auth_users?                 @relation(fields: [compliance_checked_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  kyc_screening_logs        kyc_screening_logs[]
  subscriptions             subscriptions[]
  token_allocations         token_allocations[]
  wallets                   wallets[]

  @@index([kyc_status], map: "idx_investors_kyc_status")
  @@index([type], map: "idx_investors_type")
  @@index([compliance_checked_at], map: "idx_investors_compliance_checked_at")
  @@index([compliance_checked_by], map: "idx_investors_compliance_checked_by")
  @@index([last_compliance_check], map: "idx_investors_last_compliance_check")
  @@index([user_id], map: "idx_investors_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model invoice {
  invoice_id              Int       @id @default(autoincrement())
  provider_id             Int?
  patient_name            String?   @db.VarChar(255)
  patient_dob             DateTime? @db.Date
  service_dates           String?   @db.VarChar(255)
  procedure_codes         String?   @db.VarChar(255)
  diagnosis_codes         String?   @db.VarChar(255)
  billed_amount           Decimal?  @db.Decimal(10, 2)
  adjustments             Decimal?  @db.Decimal(10, 2)
  net_amount_due          Decimal?  @db.Decimal(10, 2)
  payer_id                Int?
  policy_number           String?   @db.VarChar(50)
  invoice_number          String?   @unique @db.VarChar(50)
  invoice_date            DateTime? @db.Date
  due_date                DateTime? @db.Date
  factoring_discount_rate Decimal?  @db.Decimal(5, 2)
  factoring_terms         String?
  upload_timestamp        DateTime? @default(now()) @db.Timestamp(6)
  pool_id                 Int?
  payer                   payer?    @relation(fields: [payer_id], references: [payer_id], onDelete: NoAction, onUpdate: NoAction)
  pool                    pool?     @relation(fields: [pool_id], references: [pool_id], onDelete: NoAction, onUpdate: NoAction)
  provider                provider? @relation(fields: [provider_id], references: [provider_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([payer_id], map: "idx_invoice_payer_id")
  @@index([pool_id], map: "idx_invoice_pool_id")
  @@index([provider_id], map: "idx_invoice_provider_id")
  @@schema("public")
}

model invoices {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount          Decimal?  @db.Decimal
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  currency        String?
  due_date        DateTime? @db.Date
  invoice_number  String?
  issued_date     DateTime? @db.Date
  paid            Boolean?  @default(false)
  subscription_id String?   @db.Uuid

  @@schema("public")
}

model issuer_access_roles {
  id                                          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_id                                   String      @db.Uuid
  user_id                                     String      @db.Uuid
  role                                        issuer_role
  created_at                                  DateTime    @default(now()) @db.Timestamptz(6)
  updated_at                                  DateTime    @default(now()) @db.Timestamptz(6)
  created_by                                  String      @db.Uuid
  updated_by                                  String      @db.Uuid
  users_issuer_access_roles_created_byTousers auth_users  @relation("issuer_access_roles_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_access_roles_updated_byTousers auth_users  @relation("issuer_access_roles_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_access_roles_user_idTousers    auth_users  @relation("issuer_access_roles_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([issuer_id, user_id])
  @@index([issuer_id], map: "idx_issuer_access_roles_issuer_id")
  @@index([role], map: "idx_issuer_access_roles_role")
  @@index([user_id], map: "idx_issuer_access_roles_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model issuer_detail_documents {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id    String    @db.Uuid
  document_type String
  document_url  String
  document_name String
  uploaded_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  uploaded_by   String?   @db.Uuid
  status        String?   @default("active")
  metadata      Json?
  is_public     Boolean   @default(false)
  projects      projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model issuer_documents {
  id                                        String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_id                                 String               @db.Uuid
  document_type                             document_type
  file_url                                  String
  status                                    document_status      @default(pending)
  uploaded_at                               DateTime             @default(now()) @db.Timestamptz(6)
  expires_at                                DateTime?            @db.Timestamptz(6)
  last_reviewed_at                          DateTime?            @db.Timestamptz(6)
  reviewed_by                               String?              @db.Uuid
  version                                   Int                  @default(1)
  metadata                                  Json                 @default("{}")
  created_at                                DateTime             @default(now()) @db.Timestamptz(6)
  updated_at                                DateTime             @default(now()) @db.Timestamptz(6)
  created_by                                String               @db.Uuid
  updated_by                                String               @db.Uuid
  document_name                             String
  is_public                                 Boolean              @default(false)
  document_workflows                        document_workflows[]
  users_issuer_documents_created_byTousers  auth_users           @relation("issuer_documents_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_documents_reviewed_byTousers auth_users?          @relation("issuer_documents_reviewed_byTousers", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_issuer_documents_updated_byTousers  auth_users           @relation("issuer_documents_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([issuer_id], map: "idx_issuer_documents_issuer_id")
  @@index([status], map: "idx_issuer_documents_status")
  @@index([document_type], map: "idx_issuer_documents_type")
  @@index([document_name], map: "idx_issuer_documents_document_name")
  @@index([document_type], map: "idx_issuer_documents_document_type")
  @@index([is_public], map: "idx_issuer_documents_is_public")
  @@index([issuer_id, document_type, status, created_at(sort: Desc)], map: "idx_issuer_documents_lookup")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model investor_documents {
  id                                          String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  investor_id                                 String          @db.Uuid
  document_type                               document_type
  document_name                               String
  file_url                                    String
  status                                      document_status @default(pending)
  is_public                                   Boolean         @default(false)
  uploaded_at                                 DateTime        @default(now()) @db.Timestamptz(6)
  expires_at                                  DateTime?       @db.Timestamptz(6)
  last_reviewed_at                            DateTime?       @db.Timestamptz(6)
  reviewed_by                                 String?         @db.Uuid
  version                                     Int             @default(1)
  metadata                                    Json            @default("{}")
  created_at                                  DateTime        @default(now()) @db.Timestamptz(6)
  updated_at                                  DateTime        @default(now()) @db.Timestamptz(6)
  created_by                                  String          @db.Uuid
  updated_by                                  String          @db.Uuid
  users_investor_documents_created_byTousers  auth_users      @relation("investor_documents_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_investor_documents_created_by")
  investors                                   investors       @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_investor_documents_investor_id")
  users_investor_documents_reviewed_byTousers auth_users?     @relation("investor_documents_reviewed_byTousers", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_investor_documents_reviewed_by")
  users_investor_documents_updated_byTousers  auth_users      @relation("investor_documents_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_investor_documents_updated_by")

  @@index([investor_id], map: "idx_investor_documents_investor_id")
  @@index([status], map: "idx_investor_documents_status")
  @@index([created_at], map: "idx_investor_documents_created_at")
  @@index([document_type], map: "idx_investor_documents_document_type")
  @@index([is_public], map: "idx_investor_documents_is_public")
  @@schema("public")
}

model kyc_screening_logs {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id     String    @db.Uuid
  previous_status String?
  new_status      String?
  method          String
  notes           String?
  performed_by    String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  investors       investors @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model mfa_policies {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  required   Boolean
  applies_to String[]  @db.Uuid
  exceptions String[]  @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model monitoring_metrics {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  service     String
  metric_name String
  value       Decimal   @db.Decimal
  unit        String?   @default("count")
  tags        Json?     @default("{}")
  recorded_at DateTime? @default(now()) @db.Timestamptz(6)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([metric_name], map: "idx_monitoring_metrics_metric_name")
  @@index([service, recorded_at], map: "idx_monitoring_metrics_service_time")
  @@schema("public")
}

model moonpay_asset_cache {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contract_address String
  token_id         String
  asset_data       Json
  cached_at        DateTime? @default(now()) @db.Timestamptz(6)
  expires_at       DateTime? @default(dbgenerated("(now() + '24:00:00'::interval)")) @db.Timestamptz(6)

  @@unique([contract_address, token_id])
  @@index([contract_address, token_id], map: "idx_moonpay_asset_cache_contract_token")
  @@index([expires_at], map: "idx_moonpay_asset_cache_expires_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_compliance_alerts {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  alert_id            String?   @unique
  alert_type          String
  severity            String    @default("medium")
  status              String    @default("open")
  customer_id         String?
  transaction_id      String?
  entity_type         String?
  entity_id           String?
  risk_score          Decimal?  @db.Decimal
  risk_level          String?
  title               String
  description         String
  details             Json?     @default("{}")
  screening_results   Json?     @default("{}")
  recommended_actions String[]
  assigned_to         String?
  reviewed_by         String?
  resolved_by         String?
  escalated_to        String?
  resolution_notes    String?
  auto_generated      Boolean?  @default(false)
  source              String?   @default("moonpay_api")
  external_reference  String?
  related_alerts      String[]
  metadata            Json?     @default("{}")
  triggered_at        DateTime? @default(now()) @db.Timestamptz(6)
  reviewed_at         DateTime? @db.Timestamptz(6)
  resolved_at         DateTime? @db.Timestamptz(6)
  escalated_at        DateTime? @db.Timestamptz(6)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@index([alert_id], map: "idx_moonpay_compliance_alerts_alert_id")
  @@index([assigned_to], map: "idx_moonpay_compliance_alerts_assigned_to")
  @@index([customer_id], map: "idx_moonpay_compliance_alerts_customer_id")
  @@index([details], map: "idx_moonpay_compliance_alerts_details", type: Gin)
  @@index([entity_type, entity_id], map: "idx_moonpay_compliance_alerts_entity")
  @@index([risk_level], map: "idx_moonpay_compliance_alerts_risk_level")
  @@index([severity], map: "idx_moonpay_compliance_alerts_severity")
  @@index([status], map: "idx_moonpay_compliance_alerts_status")
  @@index([transaction_id], map: "idx_moonpay_compliance_alerts_transaction_id")
  @@index([triggered_at], map: "idx_moonpay_compliance_alerts_triggered_at")
  @@index([alert_type], map: "idx_moonpay_compliance_alerts_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_customers {
  id                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_customer_id         String?   @unique
  moonpay_customer_id          String?   @unique
  email                        String?
  first_name                   String?
  last_name                    String?
  date_of_birth                DateTime? @db.Date
  address                      Json?
  kyc_level                    String?   @default("none")
  identity_verification_status String?
  verification_documents       Json?
  transaction_limits           Json?
  preferred_payment_methods    String[]
  created_at                   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([email], map: "idx_moonpay_customers_email")
  @@index([external_customer_id], map: "idx_moonpay_customers_external_id")
  @@index([moonpay_customer_id], map: "idx_moonpay_customers_moonpay_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_passes {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_pass_id String?   @unique
  project_id       String
  contract_address String
  token_id         String
  metadata_url     String?
  name             String
  description      String?
  image            String?
  attributes       Json?
  owner_address    String?
  status           String
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([contract_address, token_id], map: "idx_moonpay_passes_contract_token")
  @@index([owner_address], map: "idx_moonpay_passes_owner")
  @@index([project_id], map: "idx_moonpay_passes_project_id")
  @@index([status], map: "idx_moonpay_passes_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_policies {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_policy_id String?   @unique
  name               String
  type               String
  rules              Json
  is_active          Boolean?  @default(true)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_policy_logs {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  log_id                String?   @unique
  policy_id             String
  policy_name           String
  policy_type           String
  action_type           String
  execution_status      String    @default("success")
  entity_type           String?
  entity_id             String?
  customer_id           String?
  transaction_id        String?
  rule_conditions       Json?     @default("{}")
  rule_results          Json?     @default("{}")
  violation_details     Json?     @default("{}")
  before_state          Json?     @default("{}")
  after_state           Json?     @default("{}")
  triggered_by          String?
  executed_by           String?
  approved_by           String?
  reason                String?
  notes                 String?
  severity              String?   @default("info")
  compliance_impact     String?
  requires_action       Boolean?  @default(false)
  action_taken          String?
  follow_up_required    Boolean?  @default(false)
  follow_up_date        DateTime? @db.Timestamptz(6)
  retention_period_days Int?      @default(2555)
  auto_generated        Boolean?  @default(false)
  source                String?   @default("moonpay_policy_engine")
  correlation_id        String?
  session_id            String?
  ip_address            String?   @db.Inet
  user_agent            String?
  metadata              Json?     @default("{}")
  executed_at           DateTime? @default(now()) @db.Timestamptz(6)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([action_type], map: "idx_moonpay_policy_logs_action_type")
  @@index([correlation_id], map: "idx_moonpay_policy_logs_correlation_id")
  @@index([customer_id], map: "idx_moonpay_policy_logs_customer_id")
  @@index([entity_type, entity_id], map: "idx_moonpay_policy_logs_entity")
  @@index([executed_at], map: "idx_moonpay_policy_logs_executed_at")
  @@index([execution_status], map: "idx_moonpay_policy_logs_execution_status")
  @@index([log_id], map: "idx_moonpay_policy_logs_log_id")
  @@index([metadata], map: "idx_moonpay_policy_logs_metadata", type: Gin)
  @@index([policy_id], map: "idx_moonpay_policy_logs_policy_id")
  @@index([policy_type], map: "idx_moonpay_policy_logs_policy_type")
  @@index([requires_action], map: "idx_moonpay_policy_logs_requires_action")
  @@index([severity], map: "idx_moonpay_policy_logs_severity")
  @@index([transaction_id], map: "idx_moonpay_policy_logs_transaction_id")
  @@schema("public")
}

model moonpay_projects {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_project_id String?   @unique
  name                String
  description         String?
  contract_address    String?
  network             String
  total_supply        Int?
  max_supply          Int?
  metadata            Json?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model moonpay_swap_transactions {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_transaction_id String?   @unique
  quote_id                String
  status                  String
  base_currency           String
  quote_currency          String
  base_amount             Decimal   @db.Decimal
  quote_amount            Decimal   @db.Decimal
  from_address            String
  to_address              String
  tx_hash                 String?
  fees                    Json?
  metadata                Json?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_moonpay_swap_transactions_created_at")
  @@index([external_transaction_id], map: "idx_moonpay_swap_transactions_external_id")
  @@index([status], map: "idx_moonpay_swap_transactions_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_transactions {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_transaction_id String?   @unique
  type                    String
  status                  String    @default("pending")
  crypto_currency         String
  fiat_currency           String
  crypto_amount           Decimal?  @db.Decimal
  fiat_amount             Decimal   @db.Decimal
  wallet_address          String?
  payment_method          String?
  customer_id             String?
  redirect_url            String?
  widget_redirect_url     String?
  fees                    Json?
  metadata                Json?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@index([wallet_address, type, status, created_at], map: "idx_moonpay_transactions_composite")
  @@index([created_at], map: "idx_moonpay_transactions_created_at")
  @@index([customer_id], map: "idx_moonpay_transactions_customer_id")
  @@index([external_transaction_id], map: "idx_moonpay_transactions_external_id")
  @@index([status], map: "idx_moonpay_transactions_status")
  @@index([type], map: "idx_moonpay_transactions_type")
  @@index([wallet_address], map: "idx_moonpay_transactions_wallet_address")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model moonpay_webhook_config {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  webhook_id                  String?   @unique
  url                         String
  environment                 String    @default("sandbox")
  events                      String[]  @default([])
  status                      String    @default("active")
  version                     String?   @default("v1")
  secret_key                  String?
  description                 String?
  retry_policy                Json?     @default("{\"timeout\": 30000, \"max_delay\": 30000, \"max_attempts\": 3, \"initial_delay\": 1000, \"backoff_strategy\": \"exponential\"}")
  headers                     Json?     @default("{}")
  delivery_settings           Json?     @default("{\"enabled\": true, \"timeout\": 30, \"verify_ssl\": true}")
  metadata                    Json?     @default("{}")
  last_delivery_attempt       DateTime? @db.Timestamptz(6)
  last_successful_delivery    DateTime? @db.Timestamptz(6)
  last_failure_reason         String?
  delivery_attempts_count     Int?      @default(0)
  successful_deliveries_count Int?      @default(0)
  failed_deliveries_count     Int?      @default(0)
  is_active                   Boolean?  @default(true)
  created_by                  String?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_moonpay_webhook_config_created_at")
  @@index([environment], map: "idx_moonpay_webhook_config_environment")
  @@index([events], map: "idx_moonpay_webhook_config_events", type: Gin)
  @@index([status], map: "idx_moonpay_webhook_config_status")
  @@index([webhook_id], map: "idx_moonpay_webhook_config_webhook_id")
  @@schema("public")
}

model moonpay_webhook_events {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_type            String
  event_data            Json
  signature             String
  processed             Boolean?  @default(false)
  processing_attempts   Int?      @default(0)
  last_processing_error String?
  received_at           DateTime? @default(now()) @db.Timestamptz(6)
  processed_at          DateTime? @db.Timestamptz(6)

  @@index([processed], map: "idx_moonpay_webhook_events_processed")
  @@index([received_at], map: "idx_moonpay_webhook_events_received_at")
  @@index([event_type], map: "idx_moonpay_webhook_events_type")
  @@schema("public")
}

model multi_sig_confirmations {
  id                     String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  transaction_id         String?                 @db.Uuid
  owner                  String
  signature              String
  created_at             DateTime?               @default(now()) @db.Timestamptz(6)
  confirmed              Boolean?
  signer                 String?
  timestamp              DateTime?               @db.Timestamptz(6)
  multi_sig_transactions multi_sig_transactions? @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model multi_sig_transactions {
  id                         String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id                  String?                   @db.Uuid
  destination_wallet_address String
  value                      String
  data                       String                    @default("0x")
  nonce                      Int
  hash                       String
  executed                   Boolean                   @default(false)
  confirmations              Int                       @default(0)
  blockchain                 String
  token_address              String?
  token_symbol               String?
  created_at                 DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                 @default(now()) @db.Timestamptz(6)
  blockchain_specific_data   Json?
  description                String?
  required                   Int?
  to                         String?
  multi_sig_confirmations    multi_sig_confirmations[]
  multi_sig_wallets          multi_sig_wallets?        @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([blockchain])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model multi_sig_wallets {
  id                       String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                     String
  blockchain               String
  address                  String
  owners                   String[]
  threshold                Int
  created_by               String?                   @db.Uuid
  created_at               DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                 @default(now()) @db.Timestamptz(6)
  status                   String?                   @default("active")
  blocked_at               DateTime?                 @db.Timestamptz(6)
  block_reason             String?
  distributions            distributions[]
  multi_sig_audit_log      multi_sig_audit_log[]
  multi_sig_configurations multi_sig_configurations?
  multi_sig_proposals      multi_sig_proposals[]
  multi_sig_transactions   multi_sig_transactions[]
  users                    auth_users?               @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction_proposals    transaction_proposals[]
  wallet_details           wallet_details[]

  @@index([blockchain])
  @@index([owners], map: "idx_multi_sig_wallets_owners", type: Gin)
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_oracle_configs {
  id                   String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  fund_id              String      @db.Uuid
  name                 String
  oracle_type          String
  endpoint_url         String?
  api_key_encrypted    String?
  response_path        String?
  update_frequency     Int?        @default(3600)
  last_update          DateTime?   @db.Timestamptz(6)
  min_nav              Decimal?    @db.Decimal(18, 6)
  max_nav              Decimal?    @db.Decimal(18, 6)
  max_change_percent   Decimal?    @default(10.0) @db.Decimal(8, 4)
  active               Boolean?    @default(true)
  success_rate         Decimal?    @default(0.0) @db.Decimal(5, 2)
  last_error           String?
  consecutive_failures Int?        @default(0)
  created_at           DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?   @default(now()) @db.Timestamptz(6)
  created_by           String?     @db.Uuid
  users                auth_users? @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([active], map: "idx_nav_oracle_configs_active")
  @@index([fund_id], map: "idx_nav_oracle_configs_fund_id")
  @@schema("public")
}

model notifications {
  id              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String
  type            String
  title           String
  description     String
  date            DateTime @default(now()) @db.Timestamptz(6)
  read            Boolean  @default(false)
  action_required Boolean  @default(false)
  action_url      String?
  metadata        Json?
  created_at      DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model onboarding_restrictions {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type       String
  value      String
  reason     String
  active     Boolean  @default(true)
  created_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  created_by String

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model onchain_claims {
  id                     String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  identity_id            String?             @db.Uuid
  issuer_id              String?             @db.Uuid
  topic                  Int
  data                   String?
  signature              String
  valid_from             DateTime?           @db.Timestamptz(6)
  valid_to               DateTime?           @db.Timestamptz(6)
  verification_timestamp DateTime            @default(now()) @db.Timestamptz(6)
  status                 String
  onchain_identities     onchain_identities? @relation(fields: [identity_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  onchain_issuers        onchain_issuers?    @relation(fields: [issuer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([identity_id, issuer_id, topic, signature])
  @@index([identity_id], map: "idx_onchain_claims_identity_id")
  @@index([issuer_id], map: "idx_onchain_claims_issuer_id")
  @@index([topic], map: "idx_onchain_claims_topic")
  @@schema("public")
}

model onchain_identities {
  id                           String                         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                      String?                        @db.Uuid
  identity_address             String
  blockchain                   String
  network                      String
  created_at                   DateTime                       @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime                       @default(now()) @db.Timestamptz(6)
  is_active                    Boolean                        @default(true)
  onchain_claims               onchain_claims[]
  users                        auth_users?                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  onchain_verification_history onchain_verification_history[]

  @@unique([identity_address, blockchain, network])
  @@unique([user_id, blockchain, network])
  @@index([identity_address], map: "idx_onchain_identities_identity_address")
  @@index([user_id], map: "idx_onchain_identities_user_id")
  @@schema("public")
}

model onchain_issuers {
  id                 String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  issuer_address     String
  issuer_name        String
  blockchain         String
  network            String
  trusted_for_claims Int[]            @default([])
  created_at         DateTime         @default(now()) @db.Timestamptz(6)
  updated_at         DateTime         @default(now()) @db.Timestamptz(6)
  is_active          Boolean          @default(true)
  onchain_claims     onchain_claims[]

  @@unique([issuer_address, blockchain, network])
  @@schema("public")
}

model onchain_verification_history {
  id                     String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  identity_id            String?             @db.Uuid
  verification_type      String
  required_claims        Int[]               @default([])
  result                 Boolean
  reason                 String?
  verification_timestamp DateTime            @default(now()) @db.Timestamptz(6)
  onchain_identities     onchain_identities? @relation(fields: [identity_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([identity_id], map: "idx_onchain_verification_history_identity_id")
  @@schema("public")
}

model organizations {
  id                               String                             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                             String
  created_at                       DateTime?                          @default(now()) @db.Timestamptz(6)
  legal_name                       String?
  registration_number              String?
  registration_date                DateTime?                          @db.Timestamptz(6)
  tax_id                           String?
  jurisdiction                     String?
  business_type                    String?
  status                           String?                            @default("pending")
  contact_email                    String?
  contact_phone                    String?
  website                          String?
  address                          Json?
  legal_representatives            Json?
  compliance_status                String?                            @default("pending_review")
  onboarding_completed             Boolean?                           @default(false)
  updated_at                       DateTime?                          @default(now()) @db.Timestamptz(6)
  entity_structure                 String?
  issuer_type                      String?
  governance_model                 String?
  project_organization_assignments project_organization_assignments[]
  projects                         projects[]
  sidebar_configurations           sidebar_configurations[]
  sidebar_items                    sidebar_items[]
  sidebar_sections                 sidebar_sections[]
  user_organization_roles          user_organization_roles[]
  user_sidebar_preferences         user_sidebar_preferences[]
  whitelist_settings               whitelist_settings[]

  @@index([entity_structure], map: "idx_organizations_entity_structure")
  @@index([governance_model], map: "idx_organizations_governance_model")
  @@index([issuer_type], map: "idx_organizations_issuer_type")
  @@schema("public")
}

model payer {
  payer_id Int       @id @default(autoincrement())
  name     String?   @db.VarChar(255)
  invoice  invoice[]

  @@schema("public")
}

model permissions {
  name             String             @id
  description      String
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime           @default(now()) @db.Timestamptz(6)
  role_permissions role_permissions[]

  @@schema("public")
}

model policy_rule_approvers {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  policy_rule_id String    @db.Uuid
  user_id        String    @db.Uuid
  created_by     String    @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  status         String?   @default("pending")
  comment        String?
  timestamp      DateTime? @db.Timestamptz(6)
  rules          rules     @relation(fields: [policy_rule_id], references: [rule_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([policy_rule_id], map: "idx_policy_rule_approvers_rule_id")
  @@index([user_id], map: "idx_policy_rule_approvers_user_id")
  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model policy_rule_approvers_backup {
  policy_rule_id String?   @db.Uuid
  user_id        String?   @db.Uuid
  created_at     DateTime? @db.Timestamptz(6)
  created_by     String?   @db.Uuid
  status         String?
  comment        String?
  timestamp      DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model policy_template_approvers {
  template_id      String           @db.Uuid
  user_id          String           @db.Uuid
  created_by       String?          @db.Uuid
  status           String?          @default("pending")
  timestamp        DateTime?        @default(now()) @db.Timestamptz(6)
  policy_templates policy_templates @relation(fields: [template_id], references: [template_id], onDelete: Cascade, onUpdate: NoAction)
  users            public_users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([template_id, user_id])
  @@index([template_id], map: "idx_policy_template_approvers_template_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model policy_templates {
  template_id               String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_name             String
  description               String?
  template_data             Json
  created_by                String
  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)
  template_type             String?                     @default(dbgenerated("\nCASE\n    WHEN ((template_data ->> 'type'::text) IS NOT NULL) THEN (template_data ->> 'type'::text)\n    ELSE 'general'::text\nEND"))
  status                    String                      @default("active")
  policy_template_approvers policy_template_approvers[]

  @@index([created_at(sort: Desc)], map: "idx_policy_templates_created_at")
  @@index([template_name], map: "idx_policy_templates_name")
  @@index([status], map: "idx_policy_templates_status")
  @@index([template_type], map: "idx_policy_templates_type")
  @@schema("public")
}

model pool {
  pool_id            Int             @id @default(autoincrement())
  pool_name          String?         @db.VarChar(255)
  pool_type          pool_type_enum?
  creation_timestamp DateTime?       @default(now()) @db.Timestamp(6)
  invoice            invoice[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model projects {
  id                                          String                                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                        String
  description                                 String?
  created_at                                  DateTime?                                    @default(now()) @db.Timestamptz(6)
  updated_at                                  DateTime?                                    @default(now()) @db.Timestamptz(6)
  project_type                                String?
  organization_id                             String?                                      @db.Uuid
  is_primary                                  Boolean                                      @default(false)
  investment_status                           String                                       @default("Open") @db.VarChar(50)
  status                                      String?                                      @default("active") @db.VarChar(50)
  target_raise                                Decimal?                                     @db.Decimal
  subscription_start_date                     DateTime?                                    @db.Date
  subscription_end_date                       DateTime?                                    @db.Date
  transaction_start_date                      DateTime?                                    @db.Date
  maturity_date                               DateTime?                                    @db.Date
  total_notional                              Decimal?                                     @db.Decimal
  company_valuation                           Decimal?                                     @db.Decimal
  minimum_investment                          Decimal?                                     @db.Decimal
  estimated_yield_percentage                  Decimal?                                     @db.Decimal
  token_symbol                                String?
  legal_entity                                String?
  jurisdiction                                String?
  tax_id                                      String?
  duration                                    String?
  currency                                    String?                                      @default("USD")
  regulatory_exemptions                       Json[]
  asset_backed_products                       asset_backed_products?
  asset_nav_data                              asset_nav_data[]
  bond_products                               bond_products?
  cap_tables                                  cap_tables[]
  climate_incentives                          climate_incentives[]
  climate_pool_energy_assets                  climate_pool_energy_assets[]
  climate_pool_incentives                     climate_pool_incentives[]
  climate_pool_recs                           climate_pool_recs[]
  collectibles_products                       collectibles_products?
  commodities_products                        commodities_products?
  compliance_checks                           compliance_checks[]
  digital_tokenised_funds                     digital_tokenised_funds?
  digital_tokenized_fund_products             digital_tokenized_fund_products?
  distributions                               distributions[]
  energy_products                             energy_products?
  equity_products                             equity_products?
  fund_products                               fund_products?
  infrastructure_products                     infrastructure_products?
  investor_groups                             investor_groups[]
  invoice_aging_buckets                       invoice_aging_buckets[]
  invoice_collection_history                  invoice_collection_history[]
  invoice_receivables                         invoice_receivables[]
  issuer_detail_documents                     issuer_detail_documents[]
  nav_calculation_runs                        nav_calculation_runs[]
  notification_settings                       notification_settings[]
  private_debt_products                       private_debt_products?
  private_equity_products                     private_equity_products?
  project_organization_assignments            project_organization_assignments[]
  project_wallets                             project_wallets[]
  organizations                               organizations?                               @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_projects_organization")
  quantitative_investment_strategies_products quantitative_investment_strategies_products?
  quantitative_strategies                     quantitative_strategies?
  real_estate_products                        real_estate_products?
  redemption_rules                            redemption_rules[]
  redemption_window_templates                 redemption_window_templates[]
  redemption_windows                          redemption_windows[]
  renewable_energy_credits                    renewable_energy_credits[]
  stablecoin_products                         stablecoin_products?
  structured_products                         structured_products?
  subscriptions                               subscriptions[]
  token_allocations                           token_allocations[]
  token_deployment_history                    token_deployment_history[]
  token_templates                             token_templates[]
  tokens                                      tokens[]

  @@index([project_type], map: "idx_projects_project_type")
  @@index([created_at], map: "idx_projects_created_at")
  @@index([investment_status], map: "idx_projects_investment_status")
  @@index([organization_id, investment_status], map: "idx_projects_org_investment_status")
  @@index([organization_id], map: "idx_projects_organization_id")
  @@index([status], map: "idx_projects_status")
  @@schema("public")
}

model provider {
  provider_id Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  invoice     invoice[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_network_config {
  id                       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id          String?  @db.Uuid
  api_key_encrypted        String
  host_app_name            String
  host_logo_url            String
  enabled_flows            String[] @default(["ONRAMP", "OFFRAMP"])
  environment              String   @default("production")
  webhook_secret_encrypted String?
  configuration            Json?    @default("{}")
  is_active                Boolean  @default(true)
  created_by               String?  @db.Uuid
  created_at               DateTime @default(now()) @db.Timestamptz(6)
  updated_at               DateTime @default(now()) @db.Timestamptz(6)

  @@index([environment], map: "idx_ramp_network_config_environment")
  @@index([is_active], map: "idx_ramp_network_config_is_active")
  @@index([organization_id], map: "idx_ramp_network_config_organization_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_supported_assets {
  id                         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  symbol                     String
  name                       String
  chain                      String
  type                       String
  address                    String?
  logo_url                   String?
  enabled                    Boolean  @default(true)
  hidden                     Boolean  @default(false)
  decimals                   Int
  price_data                 Json?
  currency_code              String   @default("USD")
  min_purchase_amount        Decimal? @db.Decimal(20, 8)
  max_purchase_amount        Decimal? @db.Decimal(20, 8)
  min_purchase_crypto_amount String?
  network_fee                Decimal? @db.Decimal(20, 8)
  flow_type                  String
  last_updated               DateTime @default(now()) @db.Timestamptz(6)
  created_at                 DateTime @default(now()) @db.Timestamptz(6)

  @@unique([symbol, chain, flow_type], map: "ramp_supported_assets_symbol_chain_flow_unique")
  @@index([chain], map: "idx_ramp_supported_assets_chain")
  @@index([enabled], map: "idx_ramp_supported_assets_enabled")
  @@index([flow_type], map: "idx_ramp_supported_assets_flow_type")
  @@index([last_updated(sort: Desc)], map: "idx_ramp_supported_assets_last_updated")
  @@index([symbol], map: "idx_ramp_supported_assets_symbol")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_transaction_events {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id    String            @db.Uuid
  event_type        String
  event_data        Json
  ramp_event_id     String?
  timestamp         DateTime          @default(now()) @db.Timestamptz(6)
  session_id        String?
  user_agent        String?
  ip_address        String?           @db.Inet
  fiat_transactions fiat_transactions @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([event_type], map: "idx_ramp_transaction_events_event_type")
  @@index([session_id], map: "idx_ramp_transaction_events_session_id")
  @@index([timestamp(sort: Desc)], map: "idx_ramp_transaction_events_timestamp")
  @@index([transaction_id], map: "idx_ramp_transaction_events_transaction_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ramp_webhook_events {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_id          String    @unique
  event_type        String
  flow_type         String
  payload           Json
  processing_status String    @default("pending")
  error_message     String?
  processed_at      DateTime? @db.Timestamptz(6)
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  updated_at        DateTime  @default(now()) @db.Timestamptz(6)

  @@index([created_at(sort: Desc)], map: "idx_ramp_webhook_events_created_at")
  @@index([event_id], map: "idx_ramp_webhook_events_event_id")
  @@index([flow_type], map: "idx_ramp_webhook_events_flow_type")
  @@index([event_type], map: "idx_ramp_webhook_events_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_approvers {
  id                  String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  redemption_id       String              @db.Uuid
  name                String
  role                String
  avatar_url          String?
  approved            Boolean             @default(false)
  approved_at         DateTime?           @db.Timestamptz(6)
  created_at          DateTime            @default(now()) @db.Timestamptz(6)
  approver_id         String
  status              String?             @default("pending")
  comments            String?
  decision_date       DateTime?           @db.Timestamptz(6)
  updated_at          DateTime?           @default(now()) @db.Timestamptz(6)
  redemption_requests redemption_requests @relation(fields: [redemption_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_redemption_approvers_redemption_id")

  @@index([approver_id], map: "idx_redemption_approvers_approver_id")
  @@index([redemption_id, status], map: "idx_redemption_approvers_redemption_id_status")
  @@index([status], map: "idx_redemption_approvers_status")
  @@schema("public")
}

model redemption_requests {
  id                                            String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token_amount                                  Decimal                    @db.Decimal
  token_type                                    String
  redemption_type                               String
  status                                        String
  source_wallet_address                         String
  destination_wallet_address                    String
  conversion_rate                               Decimal                    @db.Decimal
  investor_name                                 String?
  investor_id                                   String?
  required_approvals                            Int                        @default(1)
  is_bulk_redemption                            Boolean?                   @default(false)
  investor_count                                Int?                       @default(1)
  rejection_reason                              String?
  rejected_by                                   String?
  rejection_timestamp                           DateTime?                  @db.Timestamptz(6)
  created_at                                    DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime                   @default(now()) @db.Timestamptz(6)
  project_id                                    String?                    @db.Uuid
  organization_id                               String?                    @db.Uuid
  eligibility_check_id                          String?                    @db.Uuid
  window_id                                     String?                    @db.Uuid
  distribution_ids                              String[]                   @default([]) @db.Uuid
  validation_results                            Json?                      @default("{}")
  business_rules_version                        String?                    @default("1.0")
  token_symbol                                  String?
  distribution_id                               String?                    @db.Uuid
  distribution_date                             DateTime?                  @db.Timestamptz(6)
  distribution_tx_hash                          String?
  usdc_amount                                   Decimal?                   @db.Decimal
  redemption_window_id                          String?                    @db.Uuid
  requested_by                                  String?                    @db.Uuid
  approved_by                                   String?                    @db.Uuid
  processed_by                                  String?                    @db.Uuid
  priority_level                                Int?                       @default(1)
  estimated_processing_time                     Unsupported("interval")?
  actual_processing_time                        Unsupported("interval")?
  compliance_status                             String?                    @default("pending")
  redemption_fee                                Decimal?                   @default(0) @db.Decimal(78, 18)
  net_redemption_amount                         Decimal?                   @db.Decimal(78, 18)
  pro_rata_adjustment                           Decimal?                   @default(0) @db.Decimal(78, 18)
  distribution_redemptions                      distribution_redemptions[]
  redemption_approvers                          redemption_approvers[]
  users_redemption_requests_approved_byTousers  auth_users?                @relation("redemption_requests_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_redemption_requests_approved_by")
  users_redemption_requests_processed_byTousers auth_users?                @relation("redemption_requests_processed_byTousers", fields: [processed_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_redemption_requests_processed_by")
  users_redemption_requests_requested_byTousers auth_users?                @relation("redemption_requests_requested_byTousers", fields: [requested_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_redemption_requests_requested_by")
  redemption_windows                            redemption_windows?        @relation(fields: [redemption_window_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_redemption_requests_window")
  redemption_settlements                        redemption_settlements[]

  @@index([compliance_status], map: "idx_redemption_requests_compliance_status")
  @@index([priority_level], map: "idx_redemption_requests_priority")
  @@index([requested_by], map: "idx_redemption_requests_requested_by")
  @@index([project_id, status, created_at], map: "idx_redemption_requests_validation")
  @@index([redemption_window_id], map: "idx_redemption_requests_window_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model redemption_rules {
  id                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rule_id                      String?   @db.Uuid
  redemption_type              String
  require_multi_sig_approval   Boolean?  @default(true)
  required_approvers           Int?      @default(2)
  total_approvers              Int?      @default(3)
  notify_investors             Boolean?  @default(true)
  settlement_method            String?   @default("stablecoin")
  immediate_execution          Boolean?
  use_latest_nav               Boolean?
  allow_any_time_redemption    Boolean?
  repurchase_frequency         String?
  lock_up_period               Int?
  submission_window_days       Int?
  lock_tokens_on_request       Boolean?
  use_window_nav               Boolean?
  enable_pro_rata_distribution Boolean?
  queue_unprocessed_requests   Boolean?
  enable_admin_override        Boolean?
  created_at                   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime? @default(now()) @db.Timestamptz(6)
  project_id                   String?   @db.Uuid
  organization_id              String?   @db.Uuid
  product_type                 String?
  product_id                   String?   @db.Uuid
  is_redemption_open           Boolean?  @default(false)
  open_after_date              DateTime? @db.Timestamptz(6)
  allow_continuous_redemption  Boolean?  @default(false)
  max_redemption_percentage    Decimal?  @db.Decimal
  redemption_eligibility_rules Json?     @default("{}")
  target_raise_amount          Decimal?  @db.Decimal
  redemption_window_id         String?   @db.Uuid
  approval_config_id           String?   @db.Uuid
  projects                     projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, map: "fk_redemption_rules_project")
  rules                        rules?    @relation(fields: [rule_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([rule_id], map: "idx_redemption_rules_rule_id")
  @@index([project_id, target_raise_amount, is_redemption_open], map: "idx_redemption_rules_capacity_analysis")
  @@index([is_redemption_open, open_after_date], map: "idx_redemption_rules_open_status")
  @@index([product_type], map: "idx_redemption_rules_product_type")
  @@index([project_id], map: "idx_redemption_rules_project_id")
  @@index([project_id, product_id], map: "idx_redemption_rules_project_product")
  @@index([project_id, product_id], map: "idx_redemption_rules_project_product_id")
  @@index([project_id, product_type], map: "idx_redemption_rules_project_product_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_settlements {
  id                        String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  redemption_request_id     String              @db.Uuid
  settlement_type           String
  status                    String              @default("initiated")
  token_contract_address    String
  token_amount              Decimal             @db.Decimal(78, 18)
  burn_transaction_hash     String?
  burn_gas_used             BigInt?
  burn_gas_price            Decimal?            @db.Decimal(78, 18)
  burn_status               String?             @default("pending")
  burn_confirmed_at         DateTime?           @db.Timestamptz(6)
  transfer_amount           Decimal             @db.Decimal(78, 18)
  transfer_currency         String              @default("USDC")
  transfer_to_address       String
  transfer_transaction_hash String?
  transfer_gas_used         BigInt?
  transfer_gas_price        Decimal?            @db.Decimal(78, 18)
  transfer_status           String?             @default("pending")
  transfer_confirmed_at     DateTime?           @db.Timestamptz(6)
  nav_used                  Decimal?            @db.Decimal(18, 6)
  exchange_rate             Decimal?            @db.Decimal(18, 6)
  settlement_fee            Decimal?            @default(0) @db.Decimal(78, 18)
  gas_estimate              Decimal?            @db.Decimal(78, 18)
  estimated_completion      DateTime?           @db.Timestamptz(6)
  actual_completion         DateTime?           @db.Timestamptz(6)
  error_message             String?
  retry_count               Int?                @default(0)
  last_retry_at             DateTime?           @db.Timestamptz(6)
  created_at                DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?           @default(now()) @db.Timestamptz(6)
  created_by                String?             @db.Uuid
  project_id                String?             @db.Uuid
  organization_id           String?             @db.Uuid
  users                     auth_users?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  redemption_requests       redemption_requests @relation(fields: [redemption_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([burn_status], map: "idx_redemption_settlements_burn_status")
  @@index([created_at], map: "idx_redemption_settlements_created_at")
  @@index([redemption_request_id], map: "idx_redemption_settlements_request_id")
  @@index([status], map: "idx_redemption_settlements_status")
  @@index([transfer_status], map: "idx_redemption_settlements_transfer_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_windows {
  id                                               String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  start_date                                       DateTime                   @db.Timestamptz(6)
  end_date                                         DateTime                   @db.Timestamptz(6)
  submission_start_date                            DateTime                   @db.Timestamptz(6)
  submission_end_date                              DateTime                   @db.Timestamptz(6)
  nav                                              Decimal?                   @db.Decimal(18, 6)
  nav_date                                         DateTime?                  @db.Date
  nav_source                                       String?
  status                                           String                     @default("upcoming")
  max_redemption_amount                            Decimal?                   @db.Decimal(78, 18)
  current_requests                                 Int?                       @default(0)
  total_request_value                              Decimal?                   @default(0) @db.Decimal(78, 18)
  approved_requests                                Int?                       @default(0)
  approved_value                                   Decimal?                   @default(0) @db.Decimal(78, 18)
  rejected_requests                                Int?                       @default(0)
  rejected_value                                   Decimal?                   @default(0) @db.Decimal(78, 18)
  queued_requests                                  Int?                       @default(0)
  queued_value                                     Decimal?                   @default(0) @db.Decimal(78, 18)
  processed_by                                     String?                    @db.Uuid
  processed_at                                     DateTime?                  @db.Timestamptz(6)
  notes                                            String?
  created_at                                       DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at                                       DateTime?                  @default(now()) @db.Timestamptz(6)
  created_by                                       String?                    @db.Uuid
  project_id                                       String?                    @db.Uuid
  organization_id                                  String?                    @db.Uuid
  submission_date_mode                             submission_date_mode_enum  @default(fixed)
  processing_date_mode                             processing_date_mode_enum  @default(fixed)
  lockup_days                                      Int?
  processing_offset_days                           Int                        @default(1)
  name                                             String?
  enable_pro_rata_distribution                     Boolean?                   @default(true)
  auto_process                                     Boolean?                   @default(false)
  is_active                                        Boolean?                   @default(true)
  is_template                                      Boolean?                   @default(false)
  min_redemption_amount                            Decimal?                   @default(0) @db.Decimal(78, 18)
  pro_rata_factor                                  Decimal?                   @default(1.0000) @db.Decimal(5, 4)
  processing_fee_percentage                        Decimal?                   @default(0.0000) @db.Decimal(5, 4)
  early_redemption_penalty                         Decimal?                   @default(0.0000) @db.Decimal(5, 4)
  submission_status                                String?                    @default("not_started")
  processing_status                                String?                    @default("pending")
  last_modified_by                                 String?                    @db.Uuid
  last_status_change_at                            DateTime?                  @default(now()) @db.Timestamptz(6)
  approved_by                                      String?                    @db.Uuid
  approved_at                                      DateTime?                  @db.Timestamptz(6)
  redemption_analytics                             redemption_analytics[]
  redemption_notifications                         redemption_notifications[]
  redemption_requests                              redemption_requests[]
  users_redemption_windows_approved_byTousers      auth_users?                @relation("redemption_windows_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_redemption_windows_approved_by")
  users_redemption_windows_last_modified_byTousers auth_users?                @relation("redemption_windows_last_modified_byTousers", fields: [last_modified_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_redemption_windows_last_modified_by")
  projects                                         projects?                  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_redemption_windows_project")
  users_redemption_windows_created_byTousers       auth_users?                @relation("redemption_windows_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_redemption_windows_processed_byTousers     auth_users?                @relation("redemption_windows_processed_byTousers", fields: [processed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([start_date, end_date], map: "idx_redemption_windows_dates")
  @@index([status], map: "idx_redemption_windows_status")
  @@index([auto_process], map: "idx_redemption_windows_auto_process")
  @@index([enable_pro_rata_distribution], map: "idx_redemption_windows_enable_pro_rata")
  @@index([is_active], map: "idx_redemption_windows_is_active")
  @@index([processing_date_mode], map: "idx_redemption_windows_processing_mode")
  @@index([processing_status], map: "idx_redemption_windows_processing_status")
  @@index([project_id], map: "idx_redemption_windows_project_id")
  @@index([submission_date_mode], map: "idx_redemption_windows_submission_mode")
  @@index([submission_status], map: "idx_redemption_windows_submission_status")
  @@schema("public")
}

model regulatory_equivalence_mapping {
  id                                                                                                        String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  home_jurisdiction                                                                                         String                   @db.Char(2)
  equivalent_jurisdiction                                                                                   String                   @db.Char(2)
  equivalence_type                                                                                          String
  regulatory_framework                                                                                      String
  recognition_date                                                                                          DateTime                 @db.Date
  expiry_date                                                                                               DateTime?                @db.Date
  mutual_recognition                                                                                        Boolean?                 @default(false)
  passport_rights                                                                                           Boolean?                 @default(false)
  simplified_procedures                                                                                     Boolean?                 @default(false)
  notes                                                                                                     String?
  created_at                                                                                                DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                                                                                                DateTime?                @default(now()) @db.Timestamptz(6)
  geographic_jurisdictions_regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions geographic_jurisdictions @relation("regulatory_equivalence_mapping_equivalent_jurisdictionTogeographic_jurisdictions", fields: [equivalent_jurisdiction], references: [country_code], onDelete: NoAction, onUpdate: NoAction)
  geographic_jurisdictions_regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions       geographic_jurisdictions @relation("regulatory_equivalence_mapping_home_jurisdictionTogeographic_jurisdictions", fields: [home_jurisdiction], references: [country_code], onDelete: NoAction, onUpdate: NoAction)

  @@unique([home_jurisdiction, equivalent_jurisdiction, regulatory_framework], map: "regulatory_equivalence_mappin_home_jurisdiction_equivalent__key")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ripple_payments {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hash            String    @unique
  from_account    String
  to_account      String
  amount          Decimal   @db.Decimal
  currency        String    @default("XRP")
  fee             Decimal?  @default(0.000012) @db.Decimal
  status          String    @default("pending")
  ledger_index    Int?
  sequence_number Int?
  destination_tag Int?
  source_tag      Int?
  memo            String?
  payment_type    String?   @default("standard")
  from_country    String?
  to_country      String?
  exchange_rate   Decimal?  @db.Decimal
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  issuer          String?   @db.VarChar(50)
  result_code     String?   @db.VarChar(50)
  invoice_id      String?   @db.VarChar(64)
  paths           Json?
  network_type    String    @default("mainnet") @db.VarChar(20)
  metadata        Json?     @default("{}")
  validated_at    DateTime? @db.Timestamptz(6)

  @@index([from_account, status, created_at], map: "idx_ripple_payments_composite")
  @@index([created_at], map: "idx_ripple_payments_created_at")
  @@index([from_account], map: "idx_ripple_payments_from_account")
  @@index([hash], map: "idx_ripple_payments_hash")
  @@index([status], map: "idx_ripple_payments_status")
  @@index([to_account], map: "idx_ripple_payments_to_account")
  @@index([created_at], map: "idx_ripple_payments_created")
  @@index([currency], map: "idx_ripple_payments_currency")
  @@index([from_account], map: "idx_ripple_payments_from")
  @@index([issuer], map: "idx_ripple_payments_issuer")
  @@index([ledger_index], map: "idx_ripple_payments_ledger")
  @@index([network_type], map: "idx_ripple_payments_network")
  @@index([to_account], map: "idx_ripple_payments_to")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model risk_assessments {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String?
  wallet_address  String?
  assessment_type String
  risk_level      String
  risk_score      Decimal?  @db.Decimal
  factors         Json?     @default("{}")
  recommendations Json?     @default("{}")
  metadata        Json?     @default("{}")
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([user_id], map: "idx_risk_assessments_user_id")
  @@index([wallet_address], map: "idx_risk_assessments_wallet_address")
  @@schema("public")
}

model role_permissions {
  role_id         String      @db.Uuid
  permission_name String
  created_at      DateTime    @default(now()) @db.Timestamptz(6)
  permissions     permissions @relation(fields: [permission_name], references: [name], onDelete: Cascade, onUpdate: NoAction)
  roles           roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([role_id, permission_name])
  @@schema("public")
}

model roles {
  id                        String                      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                      String                      @unique
  description               String
  priority                  Int
  created_at                DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                    @default(now()) @db.Timestamptz(6)
  approval_config_approvers approval_config_approvers[]
  role_permissions          role_permissions[]
  user_organization_roles   user_organization_roles[]
  user_roles                user_roles[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model rules {
  rule_id                                       String                      @unique(map: "rules_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rule_name                                     String
  rule_type                                     String
  rule_details                                  Json?
  created_by                                    String                      @db.Uuid
  status                                        String?                     @default("active")
  created_at                                    DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime?                   @default(now()) @db.Timestamptz(6)
  is_template                                   Boolean?                    @default(false)
  operation_validations                         operation_validations[]
  policy_operation_mappings                     policy_operation_mappings[]
  policy_rule_approvers                         policy_rule_approvers[]
  policy_violations                             policy_violations[]
  redemption_rules                              redemption_rules[]
  rule_conflicts_rule_conflicts_rule1_idTorules rule_conflicts[]            @relation("rule_conflicts_rule1_idTorules")
  rule_conflicts_rule_conflicts_rule2_idTorules rule_conflicts[]            @relation("rule_conflicts_rule2_idTorules")
  rule_evaluations                              rule_evaluations[]
  whitelist_settings                            whitelist_settings[]

  @@index([is_template], map: "idx_rules_is_template")
  @@index([rule_id], map: "idx_rules_rule_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model security_audit_logs {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  event_type     String
  severity       String
  user_id        String?
  wallet_address String?
  details        Json?     @default("{}")
  metadata       Json?     @default("{}")
  ip_address     String?
  user_agent     String?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([user_id], map: "idx_security_audit_logs_user_id")
  @@index([wallet_address], map: "idx_security_audit_logs_wallet_address")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model security_events {
  id               String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  timestamp        DateTime    @default(now()) @db.Timestamptz(6)
  event_type       String
  severity         String
  user_id          String?     @db.Uuid
  wallet_id        String?     @db.Uuid
  wallet_address   String?
  ip_address       String?
  device_info      String?
  transaction_hash String?
  contract_address String?
  details          String?
  metadata         Json?
  status           String?
  related_events   String[]
  created_at       DateTime    @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?   @db.Timestamptz(6)
  users            auth_users? @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([event_type], map: "idx_security_events_event_type")
  @@index([severity], map: "idx_security_events_severity")
  @@index([timestamp(sort: Desc)], map: "idx_security_events_timestamp")
  @@index([user_id], map: "idx_security_events_user_id")
  @@index([wallet_address], map: "idx_security_events_wallet_address")
  @@index([wallet_id], map: "idx_security_events_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model settlement_metrics {
  id                      String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date                    DateTime                 @unique @db.Date
  total_settlements       Int?                     @default(0)
  successful_settlements  Int?                     @default(0)
  failed_settlements      Int?                     @default(0)
  average_processing_time Unsupported("interval")?
  total_tokens_burned     Decimal?                 @default(0) @db.Decimal(78, 18)
  total_funds_transferred Decimal?                 @default(0) @db.Decimal(78, 18)
  total_gas_used          Decimal?                 @default(0) @db.Decimal(78, 18)
  total_fees_collected    Decimal?                 @default(0) @db.Decimal(78, 18)
  created_at              DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                @default(now()) @db.Timestamptz(6)

  @@index([date(sort: Desc)], map: "idx_settlement_metrics_date")
  @@schema("public")
}

model signatures {
  id                    String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proposal_id           String?                @db.Uuid
  signer                String
  signature             String
  created_at            DateTime?              @default(now()) @db.Timestamptz(6)
  transaction_proposals transaction_proposals? @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model stage_requirements {
  id              String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  stage_id        String
  name            String
  description     String?
  status          String          @default("pending")
  completed_at    DateTime?       @db.Timestamptz(6)
  failure_reason  String?
  order           Int
  created_at      DateTime        @default(now()) @db.Timestamptz(6)
  updated_at      DateTime        @default(now()) @db.Timestamptz(6)
  workflow_stages workflow_stages @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stripe_conversion_transactions {
  id                       String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String?       @db.Uuid
  stripe_payment_intent_id String?       @db.VarChar(255)
  stripe_session_id        String?       @db.VarChar(255)
  conversion_type          String        @db.VarChar(20)
  source_currency          String        @db.VarChar(10)
  source_amount            Decimal       @db.Decimal(20, 8)
  source_network           String?       @db.VarChar(50)
  destination_currency     String        @db.VarChar(10)
  destination_amount       Decimal?      @db.Decimal(20, 8)
  destination_network      String?       @db.VarChar(50)
  destination_wallet       String?       @db.VarChar(255)
  exchange_rate            Decimal?      @db.Decimal(20, 8)
  fees                     Decimal?      @db.Decimal(20, 8)
  stripe_fee               Decimal?      @db.Decimal(20, 8)
  network_fee              Decimal?      @db.Decimal(20, 8)
  status                   String?       @default("pending") @db.VarChar(50)
  stripe_status            String?       @db.VarChar(50)
  transaction_hash         String?       @db.VarChar(255)
  block_number             BigInt?
  confirmations            Int?          @default(0)
  metadata                 Json?
  error_message            String?
  created_at               DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?     @default(now()) @db.Timestamptz(6)
  users                    public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([stripe_payment_intent_id], map: "idx_stripe_conversion_transactions_payment_intent")
  @@index([status], map: "idx_stripe_conversion_transactions_status")
  @@index([conversion_type], map: "idx_stripe_conversion_transactions_type")
  @@index([user_id], map: "idx_stripe_conversion_transactions_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stripe_stablecoin_accounts {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?       @db.Uuid
  account_id     String        @unique @db.VarChar(255)
  balance_usdc   Decimal?      @default(0) @db.Decimal(20, 8)
  balance_usdb   Decimal?      @default(0) @db.Decimal(20, 8)
  account_status String?       @default("active") @db.VarChar(50)
  created_at     DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?     @default(now()) @db.Timestamptz(6)
  users          public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_stripe_stablecoin_accounts_account_id")
  @@index([user_id], map: "idx_stripe_stablecoin_accounts_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stripe_webhook_events {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stripe_event_id String    @unique @db.VarChar(255)
  event_type      String    @db.VarChar(100)
  processed       Boolean?  @default(false)
  data            Json
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([processed], map: "idx_stripe_webhook_events_processed")
  @@index([stripe_event_id], map: "idx_stripe_webhook_events_stripe_id")
  @@index([event_type], map: "idx_stripe_webhook_events_type")
  @@schema("public")
}

model subscriptions {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id       String              @db.Uuid
  subscription_id   String
  fiat_amount       Decimal             @db.Decimal
  currency          String
  confirmed         Boolean             @default(false)
  allocated         Boolean             @default(false)
  distributed       Boolean             @default(false)
  notes             String?
  subscription_date DateTime?           @default(now()) @db.Timestamptz(6)
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  project_id        String?             @db.Uuid
  distributions     distributions[]
  investors         investors           @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  projects          projects?           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  token_allocations token_allocations[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model system_processes {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  process_name      String
  start_time        DateTime? @default(now()) @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  status            String?   @default("running")
  error_details     Json?
  metadata          Json?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  progress          Float?    @default(0)
  priority          String?   @default("normal") @db.VarChar(10)
  notification_sent Boolean?  @default(false)
  cancellable       Boolean?  @default(false)

  @@index([process_name], map: "idx_system_processes_process_name")
  @@index([start_time(sort: Desc)], map: "idx_system_processes_start_time")
  @@index([status], map: "idx_system_processes_status")
  @@schema("public")
}

model system_settings {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  key        String    @unique(map: "system_settings_key_unique")
  value      String
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_allocations {
  id                   String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  investor_id          String               @db.Uuid
  subscription_id      String               @db.Uuid
  project_id           String?              @db.Uuid
  token_type           String
  token_amount         Decimal              @db.Decimal
  distributed          Boolean              @default(false)
  distribution_date    DateTime?            @db.Timestamptz(6)
  distribution_tx_hash String?
  notes                String?
  allocation_date      DateTime?            @default(now()) @db.Timestamptz(6)
  created_at           DateTime             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?            @default(now()) @db.Timestamptz(6)
  minted               Boolean              @default(false)
  minting_date         DateTime?            @db.Timestamptz(6)
  minting_tx_hash      String?
  standard             token_standard_enum?
  symbol               String?
  token_id             String?              @db.Uuid
  investors            investors            @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction, map: "token_allocations_investor_fkey")
  projects             projects?            @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "token_allocations_project_fkey")
  subscriptions        subscriptions        @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "token_allocations_subscription_fkey")
  tokens               tokens?              @relation(fields: [token_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "token_allocations_token_fkey")

  @@index([token_id], map: "idx_token_allocations_token_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_deployment_history {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String   @db.Uuid
  project_id       String   @db.Uuid
  status           String
  transaction_hash String?
  block_number     Int?
  timestamp        DateTime @default(now()) @db.Timestamptz(6)
  error            String?
  blockchain       String
  environment      String
  initial_owner    String?
  projects         projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_project_id")
  tokens           tokens   @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token_id")

  @@index([project_id], map: "idx_token_deployment_history_project_id")
  @@index([status], map: "idx_token_deployment_history_status")
  @@index([timestamp], map: "idx_token_deployment_history_timestamp")
  @@index([token_id], map: "idx_token_deployment_history_token_id")
  @@schema("public")
}

model token_deployments {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  network             String
  contract_address    String
  transaction_hash    String
  deployed_at         DateTime? @default(now()) @db.Timestamptz(6)
  deployed_by         String
  status              String    @default("PENDING")
  deployment_data     Json?
  deployment_strategy String?
  factory_address     String?
  master_address      String?
  gas_used            BigInt?
  gas_price           String?
  details             Json
  initial_owner       String?
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_deployments_token_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_designs {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  name             String
  type             String
  status           String    @default("draft")
  total_supply     Decimal   @db.Decimal
  contract_address String?
  deployment_date  DateTime? @db.Timestamptz(6)

  @@schema("public")
}

model token_erc1155_balances {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String    @db.Uuid
  token_type_id String
  address       String
  amount        String
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1155_crafting_recipes {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id             String    @db.Uuid
  recipe_name          String
  input_tokens         Json
  output_token_type_id String
  output_quantity      Int?      @default(1)
  success_rate         Int?      @default(100)
  cooldown_period      Int?      @default(0)
  required_level       Int?      @default(0)
  is_active            Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  tokens               tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1155_discount_tiers {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  min_quantity        Int
  max_quantity        Int?
  discount_percentage String
  tier_name           String?
  is_active           Boolean?  @default(true)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1155_properties {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                    String    @unique(map: "one_erc1155_property_per_token") @db.Uuid
  base_uri                    String?
  metadata_storage            String?   @default("ipfs")
  has_royalty                 Boolean?  @default(false)
  royalty_percentage          String?
  royalty_receiver            String?
  is_burnable                 Boolean?  @default(false)
  is_pausable                 Boolean?  @default(false)
  access_control              String?   @default("ownable")
  updatable_uris              Boolean?  @default(false)
  supply_tracking             Boolean?  @default(true)
  enable_approval_for_all     Boolean?  @default(true)
  sales_config                Json?
  whitelist_config            Json?
  batch_transfer_limits       Json?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)
  dynamic_uri_config          Json?
  batch_minting_config        Json?
  transfer_restrictions       Json?
  container_config            Json?
  dynamic_uris                Boolean?
  batch_minting_enabled       Boolean?  @default(false)
  container_enabled           Boolean?  @default(false)
  use_geographic_restrictions Boolean?  @default(false)
  default_restriction_policy  String?   @default("allowed")
  mint_roles                  String[]
  burning_enabled             Boolean?  @default(false)
  burn_roles                  String[]
  updatable_metadata          Boolean?  @default(false)
  metadata_update_roles       String[]
  supply_tracking_advanced    Boolean?  @default(false)
  max_supply_per_type         String?
  pricing_model               String?   @default("fixed")
  base_price                  String?
  price_multipliers           Json?
  bulk_discount_enabled       Boolean?  @default(false)
  bulk_discount_tiers         Json?
  referral_rewards_enabled    Boolean?  @default(false)
  referral_percentage         String?
  lazy_minting_enabled        Boolean?  @default(false)
  airdrop_enabled             Boolean?  @default(false)
  airdrop_snapshot_block      Int?
  claim_period_enabled        Boolean?  @default(false)
  claim_start_time            DateTime? @db.Timestamptz(6)
  claim_end_time              DateTime? @db.Timestamptz(6)
  crafting_enabled            Boolean?  @default(false)
  fusion_enabled              Boolean?  @default(false)
  token_recipes               Json?
  experience_points_enabled   Boolean?  @default(false)
  leveling_enabled            Boolean?  @default(false)
  consumable_tokens           Boolean?  @default(false)
  marketplace_fees_enabled    Boolean?  @default(false)
  marketplace_fee_percentage  String?
  marketplace_fee_recipient   String?
  bundle_trading_enabled      Boolean?  @default(false)
  atomic_swaps_enabled        Boolean?  @default(false)
  cross_collection_trading    Boolean?  @default(false)
  voting_power_enabled        Boolean?  @default(false)
  voting_weight_per_token     Json?
  community_treasury_enabled  Boolean?  @default(false)
  treasury_percentage         String?
  proposal_creation_threshold String?
  bridge_enabled              Boolean?  @default(false)
  bridgeable_token_types      String[]
  wrapped_versions            Json?
  layer2_support_enabled      Boolean?  @default(false)
  supported_layer2_networks   String[]
  tokens                      tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bridge_enabled], map: "idx_erc1155_bridge")
  @@index([crafting_enabled], map: "idx_erc1155_crafting")
  @@index([lazy_minting_enabled], map: "idx_erc1155_lazy_minting")
  @@index([pricing_model], map: "idx_erc1155_pricing_model")
  @@index([voting_power_enabled], map: "idx_erc1155_voting_power")
  @@schema("public")
}

model token_erc1155_type_configs {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id           String    @db.Uuid
  token_type_id      String
  supply_cap         String?
  mint_price         String?
  is_tradeable       Boolean?  @default(true)
  is_transferable    Boolean?  @default(true)
  utility_type       String?
  rarity_tier        String?
  experience_value   Int?      @default(0)
  crafting_materials Json?
  burn_rewards       Json?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  tokens             tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, token_type_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1155_types {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String    @db.Uuid
  token_type_id    String
  name             String?
  description      String?
  max_supply       String?
  metadata         Json?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  fungibility_type String?   @default("non-fungible")
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  tokens           tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, token_type_id], map: "unique_token_type")
  @@index([fungibility_type], map: "idx_token_erc1155_types_fungibility_type")
  @@index([token_id], map: "idx_token_erc1155_types_token_id")
  @@schema("public")
}

model token_erc1155_uri_mappings {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String    @db.Uuid
  token_type_id String
  uri           String
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1400_controllers {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id    String    @db.Uuid
  address     String
  permissions String[]
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  tokens      tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, address], map: "unique_token_controller")
  @@index([token_id], map: "idx_token_erc1400_controllers_token_id")
  @@schema("public")
}

model token_erc1400_corporate_actions {
  id                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                      String    @db.Uuid
  action_type                   String
  announcement_date             DateTime  @db.Date
  record_date                   DateTime? @db.Date
  effective_date                DateTime? @db.Date
  payment_date                  DateTime? @db.Date
  action_details                Json
  impact_on_supply              String?
  impact_on_price               String?
  shareholder_approval_required Boolean?  @default(false)
  voting_deadline               DateTime? @db.Date
  regulatory_approval_required  Boolean?  @default(false)
  status                        String?   @default("announced")
  execution_transaction_hash    String?
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  tokens                        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1400_custody_providers {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id               String    @db.Uuid
  provider_name          String
  provider_type          String
  provider_address       String?
  provider_lei           String?
  custody_agreement_hash String?
  is_active              Boolean?  @default(true)
  certification_level    String?
  jurisdiction           String?
  regulatory_approvals   String[]
  integration_status     String?   @default("pending")
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)
  tokens                 tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc1400_documents {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String?   @db.Uuid
  name          String
  document_uri  String
  document_type String?
  document_hash String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens?   @relation(fields: [token_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_erc1400_documents_token_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partition_balances {
  id                       String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  partition_id             String                   @db.Uuid
  holder_address           String
  balance                  String                   @default("0")
  last_updated             DateTime?                @default(now()) @db.Timestamptz(6)
  metadata                 Json?                    @default("{}")
  updated_at               DateTime?                @default(now()) @db.Timestamptz(6)
  token_erc1400_partitions token_erc1400_partitions @relation(fields: [partition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([partition_id, holder_address], map: "token_erc1400_partition_balance_partition_id_holder_address_key")
  @@index([holder_address], map: "idx_partition_balances_holder_address")
  @@index([partition_id], map: "idx_partition_balances_partition_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partition_operators {
  id                       String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  partition_id             String                   @db.Uuid
  holder_address           String
  operator_address         String
  authorized               Boolean?                 @default(true)
  last_updated             DateTime?                @default(now()) @db.Timestamptz(6)
  metadata                 Json?                    @default("{}")
  updated_at               DateTime?                @default(now()) @db.Timestamptz(6)
  token_erc1400_partitions token_erc1400_partitions @relation(fields: [partition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([partition_id, holder_address, operator_address], map: "token_erc1400_partition_opera_partition_id_holder_address_o_key")
  @@index([partition_id], map: "idx_partition_operators_partition_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partition_transfers {
  id                       String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  partition_id             String                   @db.Uuid
  from_address             String
  to_address               String
  amount                   String
  operator_address         String?
  timestamp                DateTime?                @default(now()) @db.Timestamptz(6)
  transaction_hash         String?
  metadata                 Json?                    @default("{}")
  updated_at               DateTime?                @default(now()) @db.Timestamptz(6)
  token_erc1400_partitions token_erc1400_partitions @relation(fields: [partition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([from_address], map: "idx_partition_transfers_from_address")
  @@index([partition_id], map: "idx_partition_transfers_partition_id")
  @@index([to_address], map: "idx_partition_transfers_to_address")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_partitions {
  id                                String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                          String                              @db.Uuid
  name                              String
  partition_id                      String
  metadata                          Json?
  created_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  total_supply                      String?                             @default("0")
  partition_type                    String?
  amount                            String?
  updated_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  corporate_actions                 Boolean?                            @default(false)
  custom_features                   Json?
  transferable                      Boolean?                            @default(true)
  token_erc1400_partition_balances  token_erc1400_partition_balances[]
  token_erc1400_partition_operators token_erc1400_partition_operators[]
  token_erc1400_partition_transfers token_erc1400_partition_transfers[]
  tokens                            tokens                              @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, partition_id], map: "unique_token_partition")
  @@index([token_id], map: "idx_token_erc1400_partitions_token_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc1400_properties {
  id                                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                                  String    @unique(map: "one_erc1400_property_per_token") @db.Uuid
  initial_supply                            String?
  cap                                       String?
  is_mintable                               Boolean?  @default(false)
  is_burnable                               Boolean?  @default(false)
  is_pausable                               Boolean?  @default(false)
  document_uri                              String?
  document_hash                             String?
  controller_address                        String?
  require_kyc                               Boolean?  @default(true)
  security_type                             String?   @default("equity")
  issuing_jurisdiction                      String?
  issuing_entity_name                       String?
  issuing_entity_lei                        String?
  transfer_restrictions                     Json?
  kyc_settings                              Json?
  compliance_settings                       Json?
  forced_transfers                          Boolean?  @default(false)
  issuance_modules                          Boolean?  @default(false)
  document_management                       Boolean?  @default(false)
  recovery_mechanism                        Boolean?  @default(false)
  created_at                                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                                DateTime? @default(now()) @db.Timestamptz(6)
  regulation_type                           String?
  is_multi_class                            Boolean?  @default(false)
  tranche_transferability                   Boolean?  @default(false)
  decimals                                  Int?      @default(18)
  token_details                             String?
  legal_terms                               String?
  prospectus                                String?
  enforce_kyc                               Boolean?  @default(false)
  forced_redemption_enabled                 Boolean?  @default(false)
  whitelist_enabled                         Boolean?  @default(false)
  holding_period                            Int?
  max_investor_count                        Int?
  investor_accreditation                    Boolean?  @default(false)
  auto_compliance                           Boolean?  @default(false)
  manual_approvals                          Boolean?  @default(false)
  compliance_module                         String?
  is_issuable                               Boolean?  @default(false)
  granular_control                          Boolean?  @default(false)
  dividend_distribution                     Boolean?  @default(false)
  corporate_actions                         Boolean?  @default(false)
  custom_features                           Json?
  geographic_restrictions                   Json?     @default("[]")
  compliance_automation_level               String?   @default("manual")
  whitelist_config                          Json?
  investor_whitelist_enabled                Boolean?  @default(false)
  accredited_investor_only                  Boolean?  @default(false)
  jurisdiction_restrictions                 Json?     @default("[]")
  investor_limits                           Json?     @default("{}")
  use_geographic_restrictions               Boolean?  @default(false)
  default_restriction_policy                String?   @default("blocked")
  institutional_grade                       Boolean?  @default(false)
  custody_integration_enabled               Boolean?  @default(false)
  prime_brokerage_support                   Boolean?  @default(false)
  settlement_integration                    String?
  clearing_house_integration                Boolean?  @default(false)
  central_securities_depository_integration Boolean?  @default(false)
  third_party_custody_addresses             String[]
  institutional_wallet_support              Boolean?  @default(false)
  real_time_compliance_monitoring           Boolean?  @default(false)
  automated_sanctions_screening             Boolean?  @default(false)
  pep_screening_enabled                     Boolean?  @default(false)
  aml_monitoring_enabled                    Boolean?  @default(false)
  transaction_monitoring_rules              Json?
  suspicious_activity_reporting             Boolean?  @default(false)
  compliance_officer_notifications          Boolean?  @default(false)
  regulatory_reporting_automation           Boolean?  @default(false)
  advanced_corporate_actions                Boolean?  @default(false)
  stock_splits_enabled                      Boolean?  @default(false)
  stock_dividends_enabled                   Boolean?  @default(false)
  rights_offerings_enabled                  Boolean?  @default(false)
  spin_offs_enabled                         Boolean?  @default(false)
  mergers_acquisitions_support              Boolean?  @default(false)
  treasury_management_enabled               Boolean?  @default(false)
  buyback_programs_enabled                  Boolean?  @default(false)
  share_repurchase_automation               Boolean?  @default(false)
  advanced_governance_enabled               Boolean?  @default(false)
  proxy_voting_enabled                      Boolean?  @default(false)
  cumulative_voting_enabled                 Boolean?  @default(false)
  weighted_voting_by_class                  Boolean?  @default(false)
  quorum_requirements                       Json?
  voting_delegation_enabled                 Boolean?  @default(false)
  institutional_voting_services             Boolean?  @default(false)
  board_election_support                    Boolean?  @default(false)
  cross_border_trading_enabled              Boolean?  @default(false)
  multi_jurisdiction_compliance             Boolean?  @default(false)
  passport_regime_support                   Boolean?  @default(false)
  treaty_benefits_enabled                   Boolean?  @default(false)
  withholding_tax_automation                Boolean?  @default(false)
  currency_hedging_enabled                  Boolean?  @default(false)
  foreign_ownership_restrictions            Json?
  regulatory_equivalence_mapping            Json?
  enhanced_reporting_enabled                Boolean?  @default(false)
  real_time_shareholder_registry            Boolean?  @default(false)
  beneficial_ownership_tracking             Boolean?  @default(false)
  position_reconciliation_enabled           Boolean?  @default(false)
  regulatory_filing_automation              Boolean?  @default(false)
  audit_trail_comprehensive                 Boolean?  @default(false)
  performance_analytics_enabled             Boolean?  @default(false)
  esg_reporting_enabled                     Boolean?  @default(false)
  traditional_finance_integration           Boolean?  @default(false)
  swift_integration_enabled                 Boolean?  @default(false)
  iso20022_messaging_support                Boolean?  @default(false)
  financial_data_vendor_integration         Boolean?  @default(false)
  market_data_feeds_enabled                 Boolean?  @default(false)
  price_discovery_mechanisms                Json?
  cross_chain_bridge_support                Boolean?  @default(false)
  layer2_scaling_support                    Boolean?  @default(false)
  advanced_risk_management                  Boolean?  @default(false)
  position_limits_enabled                   Boolean?  @default(false)
  concentration_limits                      Json?
  stress_testing_enabled                    Boolean?  @default(false)
  margin_requirements_dynamic               Boolean?  @default(false)
  collateral_management_enabled             Boolean?  @default(false)
  insurance_coverage_enabled                Boolean?  @default(false)
  disaster_recovery_enabled                 Boolean?  @default(false)
  tokens                                    tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([advanced_governance_enabled], map: "idx_erc1400_advanced_governance")
  @@index([real_time_compliance_monitoring], map: "idx_erc1400_compliance_monitoring")
  @@index([cross_border_trading_enabled], map: "idx_erc1400_cross_border")
  @@index([custody_integration_enabled], map: "idx_erc1400_custody_integration")
  @@index([institutional_grade], map: "idx_erc1400_institutional_grade")
  @@index([traditional_finance_integration], map: "idx_erc1400_traditional_finance")
  @@schema("public")
}

model token_erc1400_regulatory_filings {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id            String    @db.Uuid
  filing_type         String
  filing_date         DateTime  @db.Date
  filing_jurisdiction String
  filing_reference    String?
  document_hash       String?
  document_uri        String?
  regulatory_body     String?
  compliance_status   String?   @default("pending")
  due_date            DateTime? @db.Date
  auto_generated      Boolean?  @default(false)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  tokens              tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc20_properties {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                    String    @unique(map: "one_property_per_token") @db.Uuid
  initial_supply              String?
  cap                         String?
  is_mintable                 Boolean?  @default(false)
  is_burnable                 Boolean?  @default(false)
  is_pausable                 Boolean?  @default(false)
  token_type                  String?   @default("utility")
  access_control              String?   @default("ownable")
  allow_management            Boolean?  @default(false)
  permit                      Boolean?  @default(false)
  snapshot                    Boolean?  @default(false)
  fee_on_transfer             Json?
  rebasing                    Json?
  governance_features         Json?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)
  transfer_config             Json?
  gas_config                  Json?
  compliance_config           Json?
  whitelist_config            Json?
  governance_enabled          Boolean?  @default(false)
  quorum_percentage           String?
  proposal_threshold          String?
  voting_delay                Int?
  voting_period               Int?
  timelock_delay              Int?
  governance_token_address    String?
  pausable_by                 String?
  mintable_by                 String?
  burnable_by                 String?
  max_total_supply            String?
  anti_whale_enabled          Boolean?  @default(false)
  max_wallet_amount           String?
  cooldown_period             Int?
  blacklist_enabled           Boolean?  @default(false)
  deflation_enabled           Boolean?  @default(false)
  deflation_rate              String?
  staking_enabled             Boolean?  @default(false)
  staking_rewards_rate        String?
  buy_fee_enabled             Boolean?  @default(false)
  sell_fee_enabled            Boolean?  @default(false)
  liquidity_fee_percentage    String?
  marketing_fee_percentage    String?
  charity_fee_percentage      String?
  auto_liquidity_enabled      Boolean?  @default(false)
  reflection_enabled          Boolean?  @default(false)
  reflection_percentage       String?
  burn_on_transfer            Boolean?  @default(false)
  burn_percentage             String?
  lottery_enabled             Boolean?  @default(false)
  lottery_percentage          String?
  trading_start_time          DateTime? @db.Timestamptz(6)
  presale_enabled             Boolean?  @default(false)
  presale_rate                String?
  presale_start_time          DateTime? @db.Timestamptz(6)
  presale_end_time            DateTime? @db.Timestamptz(6)
  vesting_enabled             Boolean?  @default(false)
  vesting_cliff_period        Int?
  vesting_total_period        Int?
  vesting_release_frequency   String?   @default("monthly")
  use_geographic_restrictions Boolean?  @default(false)
  default_restriction_policy  String?   @default("allowed")
  tokens                      tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([governance_enabled], map: "idx_erc20_governance_enabled")
  @@index([presale_enabled], map: "idx_erc20_presale_enabled")
  @@index([token_type], map: "idx_erc20_token_type")
  @@index([trading_start_time], map: "idx_erc20_trading_start")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc3525_allocations {
  id                                                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                                                 String    @db.Uuid
  slot_id                                                  String
  token_id_within_slot                                     String
  value                                                    String
  created_at                                               DateTime? @default(now()) @db.Timestamptz(6)
  recipient                                                String?
  linked_token_id                                          String?   @db.Uuid
  updated_at                                               DateTime? @default(now()) @db.Timestamptz(6)
  tokens_token_erc3525_allocations_linked_token_idTotokens tokens?   @relation("token_erc3525_allocations_linked_token_idTotokens", fields: [linked_token_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tokens_token_erc3525_allocations_token_idTotokens        tokens    @relation("token_erc3525_allocations_token_idTotokens", fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, slot_id, token_id_within_slot], map: "unique_token_allocation")
  @@index([token_id], map: "idx_token_erc3525_allocations_token_id")
  @@schema("public")
}

model token_erc3525_payment_schedules {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String    @db.Uuid
  slot_id          String
  payment_date     DateTime  @db.Timestamptz(6)
  payment_amount   String
  payment_type     String
  currency         String?   @default("USD")
  is_completed     Boolean?  @default(false)
  transaction_hash String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  tokens           tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc3525_properties {
  id                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                      String    @unique(map: "one_erc3525_property_per_token") @db.Uuid
  value_decimals                Int?      @default(0)
  base_uri                      String?
  metadata_storage              String?   @default("ipfs")
  slot_type                     String?   @default("generic")
  is_burnable                   Boolean?  @default(false)
  is_pausable                   Boolean?  @default(false)
  has_royalty                   Boolean?  @default(false)
  royalty_percentage            String?
  royalty_receiver              String?
  slot_approvals                Boolean?  @default(true)
  value_approvals               Boolean?  @default(true)
  access_control                String?   @default("ownable")
  updatable_uris                Boolean?  @default(false)
  updatable_slots               Boolean?  @default(false)
  value_transfers_enabled       Boolean?  @default(true)
  sales_config                  Json?
  mergable                      Boolean?  @default(false)
  splittable                    Boolean?  @default(false)
  slot_transfer_validation      Json?
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  dynamic_metadata              Boolean?  @default(false)
  allows_slot_enumeration       Boolean?  @default(true)
  value_aggregation             Boolean?  @default(false)
  permissioning_enabled         Boolean?  @default(false)
  supply_tracking               Boolean?  @default(false)
  updatable_values              Boolean?  @default(false)
  custom_extensions             String?
  fractionalizable              Boolean?  @default(false)
  metadata                      Json?
  fractional_ownership_enabled  Boolean?  @default(false)
  auto_unit_calculation         Boolean?  @default(false)
  custom_slot_properties        Json?
  slot_enumeration_enabled      Boolean?  @default(true)
  value_aggregation_enabled     Boolean?  @default(false)
  permissioning_advanced        Boolean?  @default(false)
  slot_transfer_restrictions    Json?
  value_transfer_restrictions   Json?
  financial_instrument_type     String?
  principal_amount              String?
  interest_rate                 String?
  maturity_date                 DateTime? @db.Timestamptz(6)
  coupon_frequency              String?
  payment_schedule              Json?
  early_redemption_enabled      Boolean?  @default(false)
  redemption_penalty_rate       String?
  derivative_type               String?
  underlying_asset              String?
  underlying_asset_address      String?
  strike_price                  String?
  expiration_date               DateTime? @db.Timestamptz(6)
  settlement_type               String?
  margin_requirements           Json?
  leverage_ratio                String?
  slot_creation_enabled         Boolean?  @default(false)
  dynamic_slot_creation         Boolean?  @default(false)
  slot_admin_roles              String[]
  slot_freeze_enabled           Boolean?  @default(false)
  slot_merge_enabled            Boolean?  @default(false)
  slot_split_enabled            Boolean?  @default(false)
  cross_slot_transfers          Boolean?  @default(false)
  value_computation_method      String?
  value_oracle_address          String?
  value_calculation_formula     String?
  accrual_enabled               Boolean?  @default(false)
  accrual_rate                  String?
  accrual_frequency             String?
  value_adjustment_enabled      Boolean?  @default(false)
  slot_marketplace_enabled      Boolean?  @default(false)
  value_marketplace_enabled     Boolean?  @default(false)
  partial_value_trading         Boolean?  @default(false)
  minimum_trade_value           String?
  trading_fees_enabled          Boolean?  @default(false)
  trading_fee_percentage        String?
  market_maker_enabled          Boolean?  @default(false)
  slot_voting_enabled           Boolean?  @default(false)
  value_weighted_voting         Boolean?  @default(false)
  voting_power_calculation      String?
  quorum_calculation_method     String?
  proposal_value_threshold      String?
  delegate_enabled              Boolean?  @default(false)
  yield_farming_enabled         Boolean?  @default(false)
  liquidity_provision_enabled   Boolean?  @default(false)
  staking_yield_rate            String?
  compound_interest_enabled     Boolean?  @default(false)
  flash_loan_enabled            Boolean?  @default(false)
  collateral_factor             String?
  liquidation_threshold         String?
  regulatory_compliance_enabled Boolean?  @default(false)
  kyc_required                  Boolean?  @default(false)
  accredited_investor_only      Boolean?  @default(false)
  holding_period_restrictions   Int?
  transfer_limits               Json?
  reporting_requirements        Json?
  multi_signature_required      Boolean?  @default(false)
  approval_workflow_enabled     Boolean?  @default(false)
  institutional_custody_support Boolean?  @default(false)
  audit_trail_enhanced          Boolean?  @default(false)
  batch_operations_enabled      Boolean?  @default(false)
  emergency_pause_enabled       Boolean?  @default(false)
  recovery_mechanisms           Json?
  whitelist_config              Json?
  use_geographic_restrictions   Boolean?  @default(false)
  default_restriction_policy    String?   @default("blocked")
  geographic_restrictions       String[]
  tokens                        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([regulatory_compliance_enabled], map: "idx_erc3525_compliance")
  @@index([derivative_type], map: "idx_erc3525_derivative_type")
  @@index([expiration_date], map: "idx_erc3525_expiration_date")
  @@index([financial_instrument_type], map: "idx_erc3525_financial_instrument")
  @@index([maturity_date], map: "idx_erc3525_maturity_date")
  @@index([slot_marketplace_enabled], map: "idx_erc3525_slot_marketplace")
  @@index([yield_farming_enabled], map: "idx_erc3525_yield_farming")
  @@index([token_id], map: "idx_token_erc3525_properties_token_id")
  @@schema("public")
}

model token_erc3525_slot_configs {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id         String    @db.Uuid
  slot_id          String
  slot_name        String?
  slot_description String?
  value_units      String?
  slot_type        String?
  transferable     Boolean?  @default(true)
  tradeable        Boolean?  @default(true)
  divisible        Boolean?  @default(true)
  min_value        String?
  max_value        String?
  value_precision  Int?      @default(18)
  slot_properties  Json?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  tokens           tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, slot_id])
  @@schema("public")
}

model token_erc3525_slots {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id          String    @db.Uuid
  slot_id           String
  name              String?
  description       String?
  metadata          Json?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  value_units       String?
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  slot_transferable Boolean?  @default(true)
  tokens            tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, slot_id], map: "unique_token_slot")
  @@index([token_id], map: "idx_token_erc3525_slots_token_id")
  @@schema("public")
}

model token_erc3525_value_adjustments {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id          String    @db.Uuid
  slot_id           String
  adjustment_date   DateTime? @default(now()) @db.Timestamptz(6)
  adjustment_type   String
  adjustment_amount String
  adjustment_reason String?
  oracle_price      String?
  oracle_source     String?
  approved_by       String?
  transaction_hash  String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  tokens            tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_asset_allocations {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id     String    @db.Uuid
  asset        String
  percentage   String
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  description  String?
  protocol     String?
  expected_apy String?
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)
  tokens       tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_fee_tiers {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id             String    @db.Uuid
  tier_name            String
  min_balance          String
  max_balance          String?
  management_fee_rate  String
  performance_fee_rate String
  deposit_fee_rate     String?   @default("0")
  withdrawal_fee_rate  String?   @default("0")
  tier_benefits        Json?
  is_active            Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  tokens               tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc4626_performance_metrics {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id              String    @db.Uuid
  metric_date           DateTime  @db.Date
  total_assets          String
  share_price           String
  apy                   String?
  daily_yield           String?
  benchmark_performance String?
  total_fees_collected  String?
  new_deposits          String?
  withdrawals           String?
  net_flow              String?
  sharpe_ratio          String?
  volatility            String?
  max_drawdown          String?
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  tokens                tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, metric_date])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc4626_properties {
  id                              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                        String    @unique(map: "one_erc4626_property_per_token") @db.Uuid
  asset_address                   String?
  asset_name                      String?
  asset_symbol                    String?
  asset_decimals                  Int?      @default(18)
  vault_type                      String?   @default("yield")
  is_mintable                     Boolean?  @default(false)
  is_burnable                     Boolean?  @default(false)
  is_pausable                     Boolean?  @default(false)
  vault_strategy                  String?   @default("simple")
  custom_strategy                 Boolean?  @default(false)
  strategy_controller             String?
  access_control                  String?   @default("ownable")
  permit                          Boolean?  @default(false)
  flash_loans                     Boolean?  @default(false)
  emergency_shutdown              Boolean?  @default(false)
  fee_structure                   Json?
  rebalancing_rules               Json?
  performance_metrics             Boolean?  @default(false)
  created_at                      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime? @default(now()) @db.Timestamptz(6)
  yield_source                    String?   @default("external")
  strategy_documentation          String?
  rebalance_threshold             String?
  liquidity_reserve               String?   @default("10")
  max_slippage                    String?
  deposit_limit                   String?
  withdrawal_limit                String?
  min_deposit                     String?
  max_deposit                     String?
  min_withdrawal                  String?
  max_withdrawal                  String?
  performance_tracking            Boolean?  @default(false)
  deposit_fee                     String?
  withdrawal_fee                  String?
  management_fee                  String?
  performance_fee                 String?
  fee_recipient                   String?
  withdrawal_rules                Json?
  yield_optimization_enabled      Boolean?  @default(false)
  automated_rebalancing           Boolean?  @default(false)
  whitelist_config                Json?
  use_geographic_restrictions     Boolean?  @default(false)
  default_restriction_policy      String?   @default("allowed")
  strategy_complexity             String?   @default("simple")
  multi_asset_enabled             Boolean?  @default(false)
  rebalancing_enabled             Boolean?  @default(false)
  auto_compounding_enabled        Boolean?  @default(false)
  yield_optimization_strategy     String?
  risk_management_enabled         Boolean?  @default(false)
  risk_tolerance                  String?
  diversification_enabled         Boolean?  @default(false)
  apy_tracking_enabled            Boolean?  @default(false)
  benchmark_tracking_enabled      Boolean?  @default(false)
  benchmark_index                 String?
  performance_history_retention   Int?      @default(365)
  yield_sources                   Json?
  yield_distribution_schedule     String?
  compound_frequency              String?   @default("continuous")
  insurance_enabled               Boolean?  @default(false)
  insurance_provider              String?
  insurance_coverage_amount       String?
  emergency_exit_enabled          Boolean?  @default(false)
  circuit_breaker_enabled         Boolean?  @default(false)
  max_drawdown_threshold          String?
  stop_loss_enabled               Boolean?  @default(false)
  stop_loss_threshold             String?
  governance_token_enabled        Boolean?  @default(false)
  governance_token_address        String?
  voting_power_per_share          String?   @default("1")
  strategy_voting_enabled         Boolean?  @default(false)
  fee_voting_enabled              Boolean?  @default(false)
  manager_performance_threshold   String?
  manager_replacement_enabled     Boolean?  @default(false)
  dynamic_fees_enabled            Boolean?  @default(false)
  performance_fee_high_water_mark Boolean?  @default(false)
  fee_tier_system_enabled         Boolean?  @default(false)
  early_withdrawal_penalty        String?
  late_withdrawal_penalty         String?
  gas_fee_optimization            Boolean?  @default(false)
  fee_rebate_enabled              Boolean?  @default(false)
  liquidity_mining_enabled        Boolean?  @default(false)
  liquidity_incentives_rate       String?
  market_making_enabled           Boolean?  @default(false)
  arbitrage_enabled               Boolean?  @default(false)
  cross_dex_optimization          Boolean?  @default(false)
  liquidity_provider_rewards      Json?
  impermanent_loss_protection     Boolean?  @default(false)
  defi_protocol_integrations      String[]
  lending_protocol_enabled        Boolean?  @default(false)
  borrowing_enabled               Boolean?  @default(false)
  leverage_enabled                Boolean?  @default(false)
  max_leverage_ratio              String?
  cross_chain_yield_enabled       Boolean?  @default(false)
  bridge_protocols                String[]
  portfolio_analytics_enabled     Boolean?  @default(false)
  real_time_pnl_tracking          Boolean?  @default(false)
  tax_reporting_enabled           Boolean?  @default(false)
  automated_reporting             Boolean?  @default(false)
  notification_system_enabled     Boolean?  @default(false)
  mobile_app_integration          Boolean?  @default(false)
  social_trading_enabled          Boolean?  @default(false)
  institutional_grade             Boolean?  @default(false)
  custody_integration             Boolean?  @default(false)
  audit_trail_comprehensive       Boolean?  @default(false)
  compliance_reporting_enabled    Boolean?  @default(false)
  regulatory_framework            String?
  fund_administration_enabled     Boolean?  @default(false)
  third_party_audits_enabled      Boolean?  @default(false)
  tokens                          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([compound_frequency], map: "idx_erc4626_compound_frequency")
  @@index([governance_token_enabled], map: "idx_erc4626_governance")
  @@index([institutional_grade], map: "idx_erc4626_institutional")
  @@index([multi_asset_enabled], map: "idx_erc4626_multi_asset")
  @@index([rebalancing_enabled], map: "idx_erc4626_rebalancing")
  @@index([strategy_complexity], map: "idx_erc4626_strategy_complexity")
  @@index([yield_optimization_enabled], map: "idx_erc4626_yield_optimization")
  @@schema("public")
}

model token_erc4626_strategy_params {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id      String    @db.Uuid
  name          String
  value         String
  description   String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  param_type    String?   @default("string")
  is_required   Boolean?  @default(false)
  default_value String?
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  tokens        tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, name], map: "unique_token_strategy_param")
  @@schema("public")
}

model token_erc4626_vault_strategies {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                  String    @db.Uuid
  strategy_name             String
  strategy_type             String
  protocol_address          String?
  protocol_name             String?
  allocation_percentage     String
  min_allocation_percentage String?
  max_allocation_percentage String?
  risk_score                Int?
  expected_apy              String?
  actual_apy                String?
  is_active                 Boolean?  @default(true)
  last_rebalance            DateTime? @db.Timestamptz(6)
  created_at                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)
  tokens                    tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_erc721_attributes {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id   String    @db.Uuid
  trait_type String
  values     String[]
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  tokens     tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, trait_type], map: "unique_token_trait")
  @@index([token_id], map: "idx_token_erc721_attributes_token_id")
  @@schema("public")
}

model token_erc721_mint_phases {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id           String    @db.Uuid
  phase_name         String
  phase_order        Int
  start_time         DateTime? @db.Timestamptz(6)
  end_time           DateTime? @db.Timestamptz(6)
  max_supply         Int?
  price              String?
  max_per_wallet     Int?
  whitelist_required Boolean?  @default(false)
  merkle_root        String?
  is_active          Boolean?  @default(false)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  tokens             tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, phase_order])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_erc721_properties {
  id                             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                       String    @unique(map: "one_erc721_property_per_token") @db.Uuid
  base_uri                       String?
  metadata_storage               String?   @default("ipfs")
  max_supply                     String?
  has_royalty                    Boolean?  @default(false)
  royalty_percentage             String?
  royalty_receiver               String?
  is_burnable                    Boolean?  @default(false)
  is_pausable                    Boolean?  @default(false)
  asset_type                     String?   @default("unique_asset")
  minting_method                 String?   @default("open")
  auto_increment_ids             Boolean?  @default(true)
  enumerable                     Boolean?  @default(true)
  uri_storage                    String?   @default("tokenId")
  access_control                 String?   @default("ownable")
  updatable_uris                 Boolean?  @default(false)
  sales_config                   Json?
  whitelist_config               Json?
  permission_config              Json?
  created_at                     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime? @default(now()) @db.Timestamptz(6)
  is_mintable                    Boolean?
  dynamic_uri_config             Json?
  batch_minting_config           Json?
  transfer_restrictions          Json?
  supply_validation_enabled      Boolean?  @default(true)
  contract_uri                   String?
  custom_base_uri                String?
  revealable                     Boolean?  @default(false)
  pre_reveal_uri                 String?
  reserved_tokens                Int?      @default(0)
  minting_price                  String?
  max_mints_per_tx               Int?
  max_mints_per_wallet           Int?
  enable_fractional_ownership    Boolean?  @default(false)
  enable_dynamic_metadata        Boolean?  @default(false)
  use_safe_transfer              Boolean?  @default(true)
  public_sale_enabled            Boolean?  @default(false)
  public_sale_price              String?
  public_sale_start_time         DateTime? @db.Timestamptz(6)
  public_sale_end_time           DateTime? @db.Timestamptz(6)
  whitelist_sale_enabled         Boolean?  @default(false)
  whitelist_sale_price           String?
  whitelist_sale_start_time      DateTime? @db.Timestamptz(6)
  whitelist_sale_end_time        DateTime? @db.Timestamptz(6)
  reveal_batch_size              Int?
  auto_reveal                    Boolean?  @default(false)
  reveal_delay                   Int?
  placeholder_image_uri          String?
  metadata_frozen                Boolean?  @default(false)
  metadata_provenance_hash       String?
  mint_roles                     String[]
  admin_mint_enabled             Boolean?  @default(true)
  public_mint_enabled            Boolean?  @default(false)
  burn_roles                     String[]
  transfer_locked                Boolean?  @default(false)
  soulbound                      Boolean?  @default(false)
  creator_earnings_enabled       Boolean?  @default(false)
  creator_earnings_percentage    String?
  creator_earnings_address       String?
  marketplace_approved           String[]
  operator_filter_enabled        Boolean?  @default(false)
  custom_operator_filter_address String?
  utility_enabled                Boolean?  @default(false)
  utility_type                   String?
  staking_enabled                Boolean?  @default(false)
  staking_rewards_token_address  String?
  staking_rewards_rate           String?
  breeding_enabled               Boolean?  @default(false)
  evolution_enabled              Boolean?  @default(false)
  supply_cap_enabled             Boolean?  @default(false)
  total_supply_cap               String?
  mint_phases_enabled            Boolean?  @default(false)
  dutch_auction_enabled          Boolean?  @default(false)
  dutch_auction_start_price      String?
  dutch_auction_end_price        String?
  dutch_auction_duration         Int?
  cross_chain_enabled            Boolean?  @default(false)
  bridge_contracts               Json?
  layer2_enabled                 Boolean?  @default(false)
  layer2_networks                String[]
  use_geographic_restrictions    Boolean?  @default(false)
  default_restriction_policy     String?   @default("allowed")
  tokens                         tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([public_sale_enabled, public_sale_start_time], map: "idx_erc721_public_sale")
  @@index([revealable], map: "idx_erc721_revealable")
  @@index([staking_enabled], map: "idx_erc721_staking")
  @@index([utility_enabled, utility_type], map: "idx_erc721_utility")
  @@index([whitelist_sale_enabled, whitelist_sale_start_time], map: "idx_erc721_whitelist_sale")
  @@schema("public")
}

model token_erc721_trait_definitions {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id        String    @db.Uuid
  trait_name      String
  trait_type      String
  possible_values Json?
  rarity_weights  Json?
  is_required     Boolean?  @default(false)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  tokens          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, trait_name])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_events {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token_id   String   @db.Uuid
  event_type String
  severity   String
  message    String
  data       Json?
  timestamp  DateTime @default(now()) @db.Timestamptz(6)
  is_read    Boolean  @default(false)
  tokens     tokens   @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token")

  @@index([event_type], map: "idx_token_events_event_type")
  @@index([is_read], map: "idx_token_events_is_read")
  @@index([timestamp], map: "idx_token_events_timestamp")
  @@index([token_id], map: "idx_token_events_token_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_geographic_restrictions {
  id                           String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                     String                   @db.Uuid
  restriction_type             String
  country_code                 String                   @db.Char(2)
  max_ownership_percentage     Decimal?                 @db.Decimal(5, 2)
  min_investment_amount        String?
  max_investment_amount        String?
  requires_local_custodian     Boolean?                 @default(false)
  requires_tax_clearance       Boolean?                 @default(false)
  requires_regulatory_approval Boolean?                 @default(false)
  holding_period_restriction   Int?
  transfer_restrictions        Json?
  reporting_requirements       Json?
  effective_date               DateTime                 @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiry_date                  DateTime?                @db.Date
  notes                        String?
  created_by                   String?
  created_at                   DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?                @default(now()) @db.Timestamptz(6)
  geographic_jurisdictions     geographic_jurisdictions @relation(fields: [country_code], references: [country_code], onDelete: NoAction, onUpdate: NoAction)
  tokens                       tokens                   @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, country_code])
  @@index([effective_date, expiry_date], map: "idx_geographic_restrictions_effective")
  @@index([token_id, country_code], map: "idx_geographic_restrictions_token_country")
  @@index([restriction_type], map: "idx_geographic_restrictions_type")
  @@schema("public")
}

model token_operations {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id              String                  @db.Uuid
  operation_type        String
  operator              String
  amount                Decimal?                @db.Decimal
  recipient             String?
  sender                String?
  target_address        String?
  nft_token_id          String?
  token_type_id         String?
  slot_id               String?
  value                 Decimal?                @db.Decimal
  partition             String?
  asset_token_address   String?
  lock_duration         Int?
  lock_reason           String?
  unlock_time           DateTime?               @db.Timestamptz(6)
  lock_id               String?
  transaction_hash      String?
  timestamp             DateTime?               @default(now()) @db.Timestamptz(6)
  status                String?                 @default("SUCCESSFUL")
  error_message         String?
  blocks                Json?
  compliance_audit_logs compliance_audit_logs[]
  compliance_violations compliance_violations[]
  operation_metadata    operation_metadata?
  operation_validations operation_validations[]
  policy_violations     policy_violations[]
  rule_conflicts        rule_conflicts[]
  rule_evaluations      rule_evaluations[]
  threshold_breaches    threshold_breaches[]
  tokens                tokens                  @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_operations_token_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_sanctions_rules {
  id                              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                        String    @db.Uuid
  sanctions_regime                String
  screening_enabled               Boolean?  @default(true)
  auto_block_sanctioned_entities  Boolean?  @default(true)
  enhanced_due_diligence_required Boolean?  @default(false)
  manual_review_threshold         String?
  screening_frequency             String?   @default("real_time")
  whitelist_override_allowed      Boolean?  @default(false)
  last_screening_update           DateTime? @default(now()) @db.Timestamptz(6)
  created_at                      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime? @default(now()) @db.Timestamptz(6)
  tokens                          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_templates {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id  String    @db.Uuid
  name        String
  description String?
  standard    String
  blocks      Json
  metadata    Json?
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  projects    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model token_versions {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id   String    @db.Uuid
  version    Int
  data       Json
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  created_by String?
  blocks     Json?
  decimals   Int?
  metadata   Json?
  name       String?
  standard   String?
  symbol     String?
  notes      String?
  tokens     tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([token_id], map: "idx_token_versions_token_id")
  @@index([token_id, version], map: "idx_token_versions_token_id_version")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model token_whitelists {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id        String    @db.Uuid
  wallet_address  String
  blockchain      String
  approved_by     String?   @db.Uuid
  approval_date   DateTime? @default(now()) @db.Timestamptz(6)
  is_active       Boolean?  @default(true)
  metadata        Json?     @default("{}")
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  created_by      String?   @db.Uuid
  updated_by      String?   @db.Uuid
  approval_reason String?
  removal_date    DateTime? @db.Timestamptz(6)
  removal_reason  String?
  removal_by      String?   @db.Uuid
  tokens          tokens    @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_token_whitelists_token_id")

  @@unique([token_id, wallet_address], map: "unique_whitelist_token_wallet")
  @@index([blockchain], map: "idx_token_whitelists_blockchain")
  @@index([token_id], map: "idx_token_whitelists_token_id")
  @@index([wallet_address], map: "idx_token_whitelists_wallet_address")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tokens {
  id                                                                          String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                                                                  String                              @db.Uuid
  name                                                                        String
  symbol                                                                      String
  decimals                                                                    Int                                 @default(18)
  standard                                                                    token_standard_enum
  blocks                                                                      Json
  metadata                                                                    Json?
  status                                                                      token_status_enum                   @default(DRAFT)
  reviewers                                                                   String[]                            @default([])
  approvals                                                                   String[]                            @default([])
  contract_preview                                                            String?
  created_at                                                                  DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_at                                                                  DateTime?                           @default(now()) @db.Timestamptz(6)
  total_supply                                                                String?
  config_mode                                                                 token_config_mode_enum?             @default(min)
  address                                                                     String?                             @db.VarChar(255)
  blockchain                                                                  String?                             @db.VarChar(100)
  deployment_status                                                           String?                             @default("pending") @db.VarChar(50)
  deployment_timestamp                                                        DateTime?                           @db.Timestamp(6)
  deployment_transaction                                                      String?                             @db.VarChar(255)
  deployment_error                                                            String?
  deployed_by                                                                 String?                             @db.Uuid
  deployment_environment                                                      String?                             @db.VarChar(50)
  description                                                                 String?
  master_address                                                              String?
  master_version                                                              String?
  is_minimal_proxy                                                            Boolean?                            @default(true)
  initialization_data                                                         Json?
  initial_owner                                                               String?
  deployment_rate_limits                                                      deployment_rate_limits[]
  token_allocations                                                           token_allocations[]
  token_climate_properties                                                    token_climate_properties?
  token_deployment_history                                                    token_deployment_history[]
  token_deployment_verifications                                              token_deployment_verifications[]
  token_deployments                                                           token_deployments[]
  token_erc1155_balances                                                      token_erc1155_balances[]
  token_erc1155_crafting_recipes                                              token_erc1155_crafting_recipes[]
  token_erc1155_discount_tiers                                                token_erc1155_discount_tiers[]
  token_erc1155_properties                                                    token_erc1155_properties?
  token_erc1155_type_configs                                                  token_erc1155_type_configs[]
  token_erc1155_types                                                         token_erc1155_types[]
  token_erc1155_uri_mappings                                                  token_erc1155_uri_mappings[]
  token_erc1400_controllers                                                   token_erc1400_controllers[]
  token_erc1400_corporate_actions                                             token_erc1400_corporate_actions[]
  token_erc1400_custody_providers                                             token_erc1400_custody_providers[]
  token_erc1400_documents                                                     token_erc1400_documents[]
  token_erc1400_partitions                                                    token_erc1400_partitions[]
  token_erc1400_properties                                                    token_erc1400_properties?
  token_erc1400_regulatory_filings                                            token_erc1400_regulatory_filings[]
  token_erc20_properties                                                      token_erc20_properties?
  token_erc3525_allocations_token_erc3525_allocations_linked_token_idTotokens token_erc3525_allocations[]         @relation("token_erc3525_allocations_linked_token_idTotokens")
  token_erc3525_allocations_token_erc3525_allocations_token_idTotokens        token_erc3525_allocations[]         @relation("token_erc3525_allocations_token_idTotokens")
  token_erc3525_payment_schedules                                             token_erc3525_payment_schedules[]
  token_erc3525_properties                                                    token_erc3525_properties?
  token_erc3525_slot_configs                                                  token_erc3525_slot_configs[]
  token_erc3525_slots                                                         token_erc3525_slots[]
  token_erc3525_value_adjustments                                             token_erc3525_value_adjustments[]
  token_erc4626_asset_allocations                                             token_erc4626_asset_allocations[]
  token_erc4626_fee_tiers                                                     token_erc4626_fee_tiers[]
  token_erc4626_performance_metrics                                           token_erc4626_performance_metrics[]
  token_erc4626_properties                                                    token_erc4626_properties?
  token_erc4626_strategy_params                                               token_erc4626_strategy_params[]
  token_erc4626_vault_strategies                                              token_erc4626_vault_strategies[]
  token_erc721_attributes                                                     token_erc721_attributes[]
  token_erc721_mint_phases                                                    token_erc721_mint_phases[]
  token_erc721_properties                                                     token_erc721_properties?
  token_erc721_trait_definitions                                              token_erc721_trait_definitions[]
  token_events                                                                token_events[]
  token_extensions                                                            token_extensions[]
  token_geographic_restrictions                                               token_geographic_restrictions[]
  token_operations                                                            token_operations[]
  token_sanctions_rules                                                       token_sanctions_rules[]
  token_versions                                                              token_versions[]
  token_whitelists                                                            token_whitelists[]
  users                                                                       auth_users?                         @relation(fields: [deployed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects                                                                    projects                            @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([blockchain], map: "idx_tokens_blockchain")
  @@index([deployment_status], map: "idx_tokens_deployment_status")
  @@index([project_id], map: "idx_tokens_project_id")
  @@index([standard], map: "idx_tokens_standard")
  @@index([status], map: "idx_tokens_status")
  @@schema("public")
}

model transaction_events {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  request_id String
  event_type String
  timestamp  DateTime @default(now()) @db.Timestamptz(6)
  data       Json
  actor      String?
  actor_role String?
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@index([actor], map: "idx_transaction_events_actor")
  @@index([event_type], map: "idx_transaction_events_event_type")
  @@index([request_id], map: "idx_transaction_events_request_id")
  @@index([timestamp], map: "idx_transaction_events_timestamp")
  @@schema("public")
}

model transaction_notifications {
  id             String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  transaction_id String?
  wallet_address String
  type           String
  message        String
  read           Boolean? @default(false)
  action_url     String?
  data           Json?
  created_at     DateTime @default(now()) @db.Timestamptz(6)

  @@index([read], map: "idx_transaction_notifications_read")
  @@index([transaction_id], map: "idx_transaction_notifications_transaction")
  @@index([wallet_address], map: "idx_transaction_notifications_wallet")
  @@schema("public")
}

model transaction_proposals {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id              String?                  @db.Uuid
  title                  String
  description            String?
  to_address             String
  value                  String
  data                   String?                  @default("0x")
  nonce                  Int?
  status                 String                   @default("pending")
  blockchain             String
  token_address          String?
  token_symbol           String?
  created_by             String?                  @db.Uuid
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  signatures             signatures[]
  users                  auth_users?              @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  multi_sig_wallets      multi_sig_wallets?       @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transaction_signatures transaction_signatures[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transaction_signatures {
  id                    String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  proposal_id           String                @db.Uuid
  transaction_hash      String?
  signer                String                @db.Uuid
  signature             String
  created_at            DateTime              @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?             @default(now()) @db.Timestamptz(6)
  transaction_proposals transaction_proposals @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "transaction_signatures_proposal_fkey")
  users                 auth_users            @relation(fields: [signer], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transactions {
  id                          String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_hash            String                   @unique
  from_address                String
  to_address                  String
  value                       Decimal                  @default(0) @db.Decimal
  token_symbol                String?
  token_address               String?
  blockchain                  String                   @default("ethereum")
  status                      String                   @default("pending")
  type                        String                   @default("transfer")
  gas_used                    Decimal?                 @db.Decimal
  created_at                  DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                @default(now()) @db.Timestamptz(6)
  gas_limit                   Decimal?                 @db.Decimal
  gas_price                   Decimal?                 @db.Decimal
  max_fee_per_gas             Decimal?                 @db.Decimal
  max_priority_fee_per_gas    Decimal?                 @db.Decimal
  block_number                Int?
  block_hash                  String?
  transaction_index           Int?
  confirmations               Int?                     @default(0)
  memo                        String?
  destination_tag             Int?
  transfer_type               String?                  @default("standard")
  network_fee                 Decimal?                 @db.Decimal
  estimated_confirmation_time Unsupported("interval")?

  @@index([blockchain], map: "idx_transactions_blockchain")
  @@index([from_address, status, created_at], map: "idx_transactions_composite")
  @@index([created_at], map: "idx_transactions_created_at")
  @@index([from_address], map: "idx_transactions_from_address")
  @@index([transaction_hash], map: "idx_transactions_hash")
  @@index([status], map: "idx_transactions_status")
  @@index([to_address], map: "idx_transactions_to_address")
  @@schema("public")
}

model user_mfa_settings {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id      String     @db.Uuid
  enabled      Boolean    @default(false)
  verified     Boolean    @default(false)
  secret       String?
  backup_codes Json?
  created_at   DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?  @default(now()) @db.Timestamptz(6)
  users        auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_mfa_settings_user_id")
  @@schema("public")
}

model user_roles {
  user_id    String       @id @db.Uuid
  role_id    String       @db.Uuid
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  roles      roles        @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model user_sessions {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id        String?   @db.Uuid
  session_id     String
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  last_active_at DateTime? @default(now()) @db.Timestamptz(6)
  ip_address     String?
  user_agent     String?
  device_info    Json?

  @@schema("public")
}

model public_users {
  id                                                                          String                           @id @db.Uuid
  name                                                                        String
  email                                                                       String                           @unique
  status                                                                      String                           @default("active")
  public_key                                                                  String?
  encrypted_private_key                                                       String?
  created_at                                                                  DateTime                         @default(now()) @db.Timestamptz(6)
  updated_at                                                                  DateTime                         @default(now()) @db.Timestamptz(6)
  auth_id                                                                     String?                          @unique(map: "users_auth_id_idx") @db.Uuid
  approval_config_approvers_approval_config_approvers_approver_user_idTousers approval_config_approvers[]      @relation("approval_config_approvers_approver_user_idTousers")
  approval_config_approvers_approval_config_approvers_created_byTousers       approval_config_approvers[]      @relation("approval_config_approvers_created_byTousers")
  approval_config_history                                                     approval_config_history[]
  approval_configs_approval_configs_created_byTousers                         approval_configs[]               @relation("approval_configs_created_byTousers")
  approval_configs_approval_configs_last_modified_byTousers                   approval_configs[]               @relation("approval_configs_last_modified_byTousers")
  compliance_violations                                                       compliance_violations[]
  contract_masters                                                            contract_masters[]
  document_approvals                                                          document_approvals[]
  document_versions                                                           document_versions[]
  energy_assets                                                               energy_assets[]
  investors                                                                   investors[]
  operation_validations                                                       operation_validations[]
  policy_template_approvers                                                   policy_template_approvers[]
  policy_violations                                                           policy_violations[]
  profiles                                                                    profiles[]
  stripe_conversion_transactions                                              stripe_conversion_transactions[]
  stripe_stablecoin_accounts                                                  stripe_stablecoin_accounts[]
  token_deployment_verifications                                              token_deployment_verifications[]
  token_extensions_token_extensions_attached_byTousers                        token_extensions[]               @relation("token_extensions_attached_byTousers")
  token_extensions_token_extensions_detached_byTousers                        token_extensions[]               @relation("token_extensions_detached_byTousers")
  transaction_validations                                                     transaction_validations[]
  user_organization_roles                                                     user_organization_roles[]
  user_roles                                                                  user_roles?
  users_users_auth_idTousers                                                  auth_users?                      @relation("users_auth_idTousers", fields: [auth_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                                                                       auth_users                       @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  validation_alerts                                                           validation_alerts[]
  wallet_access_logs                                                          wallet_access_logs[]

  @@map("users")
  @@schema("public")
}

model wallet_details {
  id                       String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id                String?            @db.Uuid
  blockchain_specific_data Json
  created_at               DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?          @default(now()) @db.Timestamptz(6)
  multi_sig_wallets        multi_sig_wallets? @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model wallet_signatories {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_address String
  name           String
  email          String
  role           String
  status         String?   @default("pending")
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([wallet_address, email])
  @@index([status], map: "idx_wallet_signatories_status")
  @@index([wallet_address], map: "idx_wallet_signatories_wallet_address")
  @@schema("public")
}

model wallet_transactions {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chain_id           String?
  data               Json?
  from_address       String?
  gas_limit          Decimal?  @db.Decimal
  gas_price          Decimal?  @db.Decimal
  nonce              Int?
  to_address         String?
  value              Decimal?  @db.Decimal
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  tx_hash            String?
  status             String?   @default("pending")
  token_symbol       String?
  token_address      String?
  confirmation_count Int?      @default(0)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([from_address], map: "idx_wallet_transactions_from_address")
  @@index([status], map: "idx_wallet_transactions_status")
  @@index([tx_hash], map: "idx_wallet_transactions_tx_hash")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wallets {
  id                          String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  investor_id                 String                        @db.Uuid
  wallet_address              String?
  wallet_type                 String
  blockchain                  String                        @default("ethereum")
  is_multi_sig_enabled        Boolean                       @default(false)
  guardian_policy             Json                          @default("{}")
  signatories                 Json                          @default("[]")
  status                      String                        @default("pending")
  created_at                  DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime                      @default(now()) @db.Timestamptz(6)
  user_id                     String?                       @db.Uuid
  restriction_validation_logs restriction_validation_logs[]
  session_keys                session_keys[]
  signature_migrations        signature_migrations[]
  smart_contract_wallets      smart_contract_wallets[]
  user_operations             user_operations[]
  wallet_facets               wallet_facets[]
  wallet_guardians            wallet_guardians[]
  wallet_locks                wallet_locks[]
  wallet_restriction_rules    wallet_restriction_rules[]
  wallet_transaction_drafts   wallet_transaction_drafts[]
  investors                   investors                     @relation(fields: [investor_id], references: [investor_id], onDelete: Cascade, onUpdate: NoAction)
  webauthn_challenges         webauthn_challenges[]
  webauthn_credentials        webauthn_credentials[]

  @@index([investor_id], map: "idx_wallets_investor_id")
  @@index([status], map: "idx_wallets_status")
  @@index([wallet_address], map: "idx_wallets_wallet_address")
  @@index([wallet_type], map: "idx_wallets_wallet_type")
  @@schema("public")
}

model whitelist_entries {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String
  address         String
  label           String?
  added_by        String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([organization_id, address])
  @@index([address], map: "idx_whitelist_entries_address")
  @@index([organization_id], map: "idx_whitelist_entries_organization_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model whitelist_settings {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id       String?                 @db.Uuid
  name                  String
  description           String?
  rule_id               String?                 @db.Uuid
  required_approvals    Int
  total_approvers       Int
  created_by            String?                 @db.Uuid
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @default(now()) @db.Timestamptz(6)
  organizations         organizations?          @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  rules                 rules?                  @relation(fields: [rule_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)
  whitelist_signatories whitelist_signatories[]

  @@schema("public")
}

model whitelist_signatories {
  id                 String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  whitelist_id       String?             @db.Uuid
  user_id            String?             @db.Uuid
  approved           Boolean?            @default(false)
  approved_at        DateTime?           @db.Timestamptz(6)
  whitelist_settings whitelist_settings? @relation(fields: [whitelist_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([whitelist_id, user_id])
  @@schema("public")
}

model workflow_stages {
  id                    String               @id
  organization_id       String
  name                  String
  description           String?
  status                String
  completion_percentage Int                  @default(0)
  order                 Int
  created_at            DateTime             @default(now()) @db.Timestamptz(6)
  updated_at            DateTime             @default(now()) @db.Timestamptz(6)
  documents             documents[]
  stage_requirements    stage_requirements[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model facet_registry {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  address            String    @unique
  version            String
  description        String?
  function_selectors String[]  @default([])
  source_code_hash   String
  audit_report_url   String?
  audit_status       String?   @default("pending")
  is_active          Boolean?  @default(false)
  deployed_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([is_active, audit_status], map: "idx_facet_registry_active")
  @@index([address], map: "idx_facet_registry_address")
  @@index([function_selectors], map: "idx_facet_registry_selectors", type: Gin)
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model smart_contract_wallets {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id              String    @db.Uuid
  diamond_proxy_address  String
  implementation_version String
  facet_registry_address String
  is_deployed            Boolean?  @default(false)
  deployment_tx_hash     String?
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)
  wallets                wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([diamond_proxy_address], map: "idx_smart_contract_wallets_proxy")
  @@index([wallet_id], map: "idx_smart_contract_wallets_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_operations {
  id                       String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id                String                 @db.Uuid
  user_op_hash             String                 @unique
  sender_address           String
  nonce                    BigInt
  init_code                String?
  call_data                String
  call_gas_limit           BigInt
  verification_gas_limit   BigInt
  pre_verification_gas     BigInt
  max_fee_per_gas          BigInt
  max_priority_fee_per_gas BigInt
  paymaster_and_data       String?
  signature_data           String
  status                   String?                @default("pending")
  transaction_hash         String?
  block_number             BigInt?
  gas_used                 BigInt?
  created_at               DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?              @default(now()) @db.Timestamptz(6)
  actual_gas_cost          BigInt?
  failure_reason           String?
  batch_operations         batch_operations[]
  paymaster_operations     paymaster_operations[]
  session_key_usage        session_key_usage[]
  wallets                  wallets                @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_op_hash], map: "idx_user_operations_hash")
  @@index([sender_address], map: "idx_user_operations_sender")
  @@index([status], map: "idx_user_operations_status")
  @@index([wallet_id], map: "idx_user_operations_wallet_id")
  @@index([created_at], map: "idx_user_operations_created_at")
  @@index([status, created_at], map: "idx_user_operations_status_created")
  @@index([transaction_hash], map: "idx_user_operations_transaction_hash")
  @@index([wallet_id, status], map: "idx_user_operations_wallet_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_facets {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id          String    @db.Uuid
  facet_name         String
  facet_address      String
  function_selectors String[]  @default([])
  is_active          Boolean?  @default(true)
  added_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  wallets            wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([facet_address], map: "idx_wallet_facets_address")
  @@index([function_selectors], map: "idx_wallet_facets_selectors", type: Gin)
  @@index([wallet_id], map: "idx_wallet_facets_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_guardians {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id            String    @db.Uuid
  guardian_address     String
  guardian_name        String?
  status               String?   @default("pending_add")
  requested_at         DateTime? @default(now()) @db.Timestamptz(6)
  confirmed_at         DateTime? @db.Timestamptz(6)
  security_period_ends DateTime? @db.Timestamptz(6)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  wallets              wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([guardian_address], map: "idx_wallet_guardians_address")
  @@index([status], map: "idx_wallet_guardians_status")
  @@index([wallet_id], map: "idx_wallet_guardians_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webauthn_challenges {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id      String    @db.Uuid
  challenge      String
  challenge_type String
  expires_at     DateTime  @db.Timestamptz(6)
  is_used        Boolean?  @default(false)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  wallets        wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([challenge], map: "idx_webauthn_challenges_challenge")
  @@index([expires_at], map: "idx_webauthn_challenges_expires")
  @@index([wallet_id], map: "idx_webauthn_challenges_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webauthn_credentials {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id          String    @db.Uuid
  credential_id      String
  public_key_x       String
  public_key_y       String
  authenticator_data String?
  is_primary         Boolean?  @default(false)
  device_name        String?
  platform           String?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  wallets            wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wallet_id, credential_id], map: "idx_webauthn_credentials_unique")
  @@index([credential_id], map: "idx_webauthn_credentials_credential_id")
  @@index([wallet_id], map: "idx_webauthn_credentials_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model batch_operations {
  id                String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_operation_id String          @db.Uuid
  operation_index   Int
  target_address    String
  value             String
  call_data         String
  success           Boolean?        @default(false)
  return_data       String?
  gas_used          BigInt?
  created_at        DateTime?       @default(now()) @db.Timestamptz(6)
  user_operations   user_operations @relation(fields: [user_operation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_operation_id, operation_index], map: "idx_batch_operations_unique")
  @@index([operation_index], map: "idx_batch_operations_index")
  @@index([success], map: "idx_batch_operations_success")
  @@index([target_address], map: "idx_batch_operations_target")
  @@index([user_operation_id], map: "idx_batch_operations_user_op")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model paymaster_operations {
  id                     String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_operation_id      String          @db.Uuid
  paymaster_address      String
  paymaster_data         String
  verification_gas_limit BigInt
  post_op_gas_limit      BigInt
  gas_sponsored          BigInt
  sponsor_address        String?
  policy_applied         Json
  created_at             DateTime?       @default(now()) @db.Timestamptz(6)
  user_operations        user_operations @relation(fields: [user_operation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_paymaster_operations_created_at")
  @@index([paymaster_address], map: "idx_paymaster_operations_paymaster")
  @@index([paymaster_address, created_at], map: "idx_paymaster_operations_paymaster_created")
  @@index([sponsor_address], map: "idx_paymaster_operations_sponsor")
  @@index([user_operation_id], map: "idx_paymaster_operations_user_op")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model wallet_transaction_drafts {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_id  String    @unique
  wallet_id       String    @db.Uuid
  blockchain      String
  from_address    String
  to_address      String
  amount          Decimal   @db.Decimal
  raw_transaction String
  nonce           Int?
  data            Json?     @default("{}")
  expires_at      DateTime  @db.Timestamptz(6)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  wallets         wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_wallet_transaction_drafts_wallet_id")

  @@index([expires_at], map: "idx_wallet_transaction_drafts_expires_at")
  @@index([transaction_id], map: "idx_wallet_transaction_drafts_transaction_id")
  @@index([wallet_id], map: "idx_wallet_transaction_drafts_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model restriction_validation_logs {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id         String    @db.Uuid
  transaction_hash  String?
  validation_result Boolean
  failed_rules      Json?     @default("[]")
  warnings          Json?     @default("[]")
  validated_at      DateTime? @default(now()) @db.Timestamptz(6)
  wallets           wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([validated_at(sort: Desc)], map: "idx_restriction_validation_logs_validated_at")
  @@index([wallet_id], map: "idx_restriction_validation_logs_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model signature_migration_approvals {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  migration_id         String               @db.Uuid
  approver_address     String
  signature            String
  approved_at          DateTime?            @default(now()) @db.Timestamptz(6)
  signature_migrations signature_migrations @relation(fields: [migration_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([migration_id, approver_address])
  @@index([migration_id], map: "idx_signature_migration_approvals_migration_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model signature_migrations {
  id                            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id                     String                          @db.Uuid
  from_scheme                   String
  to_scheme                     String
  new_public_key                String
  new_credential_id             String?
  status                        String                          @default("pending")
  migration_hash                String
  required_approvals            Int                             @default(1)
  current_approvals             Int                             @default(0)
  finalize_after                DateTime?                       @db.Timestamptz(6)
  transaction_hash              String?
  migration_data                Json?                           @default("{}")
  finalized_at                  DateTime?                       @db.Timestamptz(6)
  cancelled_at                  DateTime?                       @db.Timestamptz(6)
  created_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  signature_migration_approvals signature_migration_approvals[]
  wallets                       wallets                         @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_signature_migrations_created_at")
  @@index([status], map: "idx_signature_migrations_status")
  @@index([wallet_id], map: "idx_signature_migrations_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_locks {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id        String    @db.Uuid
  lock_type        String
  is_locked        Boolean   @default(true)
  locked_by        String
  locked_at        DateTime  @default(now()) @db.Timestamptz(6)
  unlock_time      DateTime? @db.Timestamptz(6)
  lock_reason      String?
  lock_nonce       Int       @default(1)
  unlock_hash      String?
  can_unlock_early Boolean   @default(true)
  unlocked_by      String?
  unlocked_at      DateTime? @db.Timestamptz(6)
  unlock_reason    String?
  lock_data        Json?     @default("{}")
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  wallets          wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_wallet_locks_created_at")
  @@index([wallet_id], map: "idx_wallet_locks_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_restriction_rules {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id   String    @db.Uuid
  rule_type   String
  name        String
  description String?
  is_active   Boolean   @default(true)
  priority    Int       @default(100)
  rule_data   Json      @default("{}")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  wallets     wallets   @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([wallet_id, priority], map: "idx_wallet_restriction_rules_priority")
  @@index([wallet_id], map: "idx_wallet_restriction_rules_wallet_id")
  @@schema("public")
}

/// EIP-4337 Bundler configurations for different chains and networks
model bundler_configurations {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bundler_name           String
  bundler_address        String
  entry_point_address    String
  chain_id               Int
  rpc_url                String
  max_bundle_size        Int?      @default(10)
  max_bundle_wait_time   Int?      @default(5000)
  min_priority_fee       BigInt?   @default(1000000000)
  is_active              Boolean?  @default(true)
  supported_entry_points Json?     @default("[]")
  gas_price_multiplier   Decimal?  @default(1.1) @db.Decimal(3, 2)
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)

  @@index([chain_id, is_active], map: "idx_bundler_configurations_chain_active")
  @@schema("public")
}

/// EIP-4337 Bundler operations tracking for UserOperation bundling
model bundler_operations {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bundle_hash         String    @unique
  bundler_address     String
  entry_point_address String
  chain_id            Int
  user_operations     Json      @default("[]")
  transaction_hash    String?
  block_number        BigInt?
  gas_used            BigInt?
  gas_price           BigInt?
  status              String?   @default("pending")
  bundle_size         Int       @default(0)
  total_gas_limit     BigInt
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  submitted_at        DateTime? @db.Timestamptz(6)
  included_at         DateTime? @db.Timestamptz(6)
  failure_reason      String?

  @@index([status], map: "idx_bundler_operations_status")
  @@index([chain_id], map: "idx_bundler_operations_chain_id")
  @@index([created_at], map: "idx_bundler_operations_created_at")
  @@schema("public")
}

/// Session keys for account abstraction - temporary spending permissions
model session_keys {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id           String              @db.Uuid
  session_key_address String
  public_key          String
  permissions         Json                @default("{}")
  validity_start      DateTime            @db.Timestamptz(6)
  validity_end        DateTime            @db.Timestamptz(6)
  status              String?             @default("active")
  created_by_user_id  String              @db.Uuid
  spending_limit      BigInt?
  daily_limit         BigInt?
  allowed_targets     Json?               @default("[]")
  allowed_functions   Json?               @default("[]")
  created_at          DateTime?           @default(now()) @db.Timestamptz(6)
  last_used_at        DateTime?           @db.Timestamptz(6)
  revoked_at          DateTime?           @db.Timestamptz(6)
  usage_count         Int?                @default(0)
  session_key_usage   session_key_usage[]
  wallets             wallets             @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([wallet_id], map: "idx_session_keys_wallet_id")
  @@index([status], map: "idx_session_keys_status")
  @@index([validity_start, validity_end], map: "idx_session_keys_validity")
  @@schema("public")
}

/// Session key usage tracking for monitoring and limits
model session_key_usage {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_key_id     String          @db.Uuid
  user_operation_id  String          @db.Uuid
  amount_spent       BigInt          @default(0)
  target_address     String
  function_signature String?
  created_at         DateTime?       @default(now()) @db.Timestamptz(6)
  session_keys       session_keys    @relation(fields: [session_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_operations    user_operations @relation(fields: [user_operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([session_key_id], map: "idx_session_key_usage_session_key_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_clients {
  id                 String                  @id @db.Uuid
  client_id          String                  @unique
  client_secret_hash String
  registration_type  oauth_registration_type
  redirect_uris      String
  grant_types        String
  client_name        String?
  client_uri         String?
  logo_uri           String?
  created_at         DateTime                @default(now()) @db.Timestamptz(6)
  updated_at         DateTime                @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?               @db.Timestamptz(6)

  @@index([client_id])
  @@index([deleted_at])
  @@schema("auth")
}

model migrations {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @unique
  executed_at DateTime? @default(now()) @db.Timestamptz(6)

  @@map("_migrations")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model abs_cash_flows {
  id                          String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_backed_product_id     String                @db.Uuid
  abs_tranche_id              String?               @db.Uuid
  payment_date                DateTime              @db.Timestamptz(6)
  is_actual                   Boolean?              @default(false)
  collection_period_start     DateTime              @db.Timestamptz(6)
  collection_period_end       DateTime              @db.Timestamptz(6)
  beginning_pool_balance      Decimal               @db.Decimal(20, 2)
  principal_collections       Decimal               @db.Decimal(20, 2)
  scheduled_principal         Decimal?              @db.Decimal(20, 2)
  unscheduled_principal       Decimal?              @db.Decimal(20, 2)
  interest_collections        Decimal               @db.Decimal(20, 2)
  fees_collections            Decimal?              @db.Decimal(20, 2)
  recoveries                  Decimal?              @db.Decimal(20, 2)
  total_collections           Decimal               @db.Decimal(20, 2)
  currency                    String?               @default("USD") @db.VarChar(3)
  servicing_fee               Decimal?              @db.Decimal(20, 2)
  trustee_fee                 Decimal?              @db.Decimal(20, 2)
  other_fees                  Decimal?              @db.Decimal(20, 2)
  net_available_funds         Decimal?              @db.Decimal(20, 2)
  senior_interest_paid        Decimal?              @db.Decimal(20, 2)
  senior_principal_paid       Decimal?              @db.Decimal(20, 2)
  mezzanine_interest_paid     Decimal?              @db.Decimal(20, 2)
  mezzanine_principal_paid    Decimal?              @db.Decimal(20, 2)
  subordinated_interest_paid  Decimal?              @db.Decimal(20, 2)
  subordinated_principal_paid Decimal?              @db.Decimal(20, 2)
  equity_distribution         Decimal?              @db.Decimal(20, 2)
  reserve_account_deposit     Decimal?              @db.Decimal(20, 2)
  reserve_account_withdrawal  Decimal?              @db.Decimal(20, 2)
  ending_reserve_balance      Decimal?              @db.Decimal(20, 2)
  ending_pool_balance         Decimal               @db.Decimal(20, 2)
  pool_factor                 Decimal?              @db.Decimal(5, 4)
  losses                      Decimal?              @db.Decimal(20, 2)
  cumulative_losses           Decimal?              @db.Decimal(20, 2)
  delinquencies               Decimal?              @db.Decimal(20, 2)
  prepayment_rate             Decimal?              @db.Decimal(5, 2)
  default_rate                Decimal?              @db.Decimal(5, 2)
  waterfall_distribution      Json?
  trigger_breaches            Json?
  notes                       String?
  created_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  abs_tranches                abs_tranches?         @relation(fields: [abs_tranche_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asset_backed_products       asset_backed_products @relation(fields: [asset_backed_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([asset_backed_product_id], map: "idx_abs_cash_flows_abs_product")
  @@index([is_actual], map: "idx_abs_cash_flows_actual")
  @@index([payment_date], map: "idx_abs_cash_flows_payment_date")
  @@index([abs_tranche_id], map: "idx_abs_cash_flows_tranche")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model abs_collateral_pools {
  id                                String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_backed_product_id           String                @db.Uuid
  pool_cut_off_date                 DateTime              @db.Timestamptz(6)
  reporting_period_end              DateTime              @db.Timestamptz(6)
  total_pool_balance                Decimal               @db.Decimal(20, 2)
  number_of_loans                   Int
  currency                          String?               @default("USD") @db.VarChar(3)
  collateral_type                   String                @db.VarChar(50)
  weighted_average_coupon           Decimal?              @db.Decimal(5, 4)
  weighted_average_maturity_months  Int?
  weighted_average_fico_score       Int?
  weighted_average_ltv              Decimal?              @db.Decimal(5, 2)
  weighted_average_dti              Decimal?              @db.Decimal(5, 2)
  weighted_average_seasoning_months Int?
  geographic_concentration          Json?
  top_10_obligors_percentage        Decimal?              @db.Decimal(5, 2)
  concentration_limits_compliant    Boolean?              @default(true)
  current_performing_balance        Decimal?              @db.Decimal(20, 2)
  delinquent_30_days_balance        Decimal?              @db.Decimal(20, 2)
  delinquent_60_days_balance        Decimal?              @db.Decimal(20, 2)
  delinquent_90_days_balance        Decimal?              @db.Decimal(20, 2)
  delinquent_120_plus_days_balance  Decimal?              @db.Decimal(20, 2)
  defaulted_balance                 Decimal?              @db.Decimal(20, 2)
  delinquency_rate                  Decimal?              @db.Decimal(5, 2)
  default_rate                      Decimal?              @db.Decimal(5, 2)
  cumulative_loss_rate              Decimal?              @db.Decimal(5, 2)
  recovery_rate                     Decimal?              @db.Decimal(5, 2)
  loss_severity                     Decimal?              @db.Decimal(5, 2)
  prepayment_rate                   Decimal?              @db.Decimal(5, 2)
  abs_prepayment_speed              Int?
  pool_factor                       Decimal?              @db.Decimal(5, 4)
  advance_rate                      Decimal?              @db.Decimal(5, 2)
  excess_spread                     Decimal?              @db.Decimal(5, 4)
  reserve_account_balance           Decimal?              @db.Decimal(20, 2)
  reserve_account_target            Decimal?              @db.Decimal(20, 2)
  is_reserve_account_funded         Boolean?
  servicer_name                     String?               @db.VarChar(255)
  servicer_rating                   String?               @db.VarChar(10)
  servicing_fee_rate                Decimal?              @db.Decimal(5, 4)
  trustee_name                      String?               @db.VarChar(255)
  static_pool_performance           Json?
  notes                             String?
  created_at                        DateTime?             @default(now()) @db.Timestamptz(6)
  asset_backed_products             asset_backed_products @relation(fields: [asset_backed_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([asset_backed_product_id], map: "idx_abs_collateral_pools_abs_product")
  @@index([reporting_period_end], map: "idx_abs_collateral_pools_period_end")
  @@index([collateral_type], map: "idx_abs_collateral_pools_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model abs_loss_projections {
  id                                 String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_backed_product_id            String                @db.Uuid
  projection_date                    DateTime              @db.Timestamptz(6)
  scenario_name                      String                @db.VarChar(100)
  scenario_description               String?
  projection_horizon_months          Int
  projected_cumulative_loss_rate     Decimal               @db.Decimal(5, 2)
  projected_cumulative_losses        Decimal               @db.Decimal(20, 2)
  currency                           String?               @default("USD") @db.VarChar(3)
  expected_default_rate              Decimal?              @db.Decimal(5, 2)
  expected_recovery_rate             Decimal?              @db.Decimal(5, 2)
  expected_loss_severity             Decimal?              @db.Decimal(5, 2)
  expected_losses_by_year            Json?
  peak_loss_year                     Int?
  peak_loss_amount                   Decimal?              @db.Decimal(20, 2)
  time_to_peak_losses_months         Int?
  tail_losses                        Decimal?              @db.Decimal(20, 2)
  economic_assumptions               Json?
  unemployment_rate_assumption       Decimal?              @db.Decimal(5, 2)
  home_price_index_assumption        Decimal?              @db.Decimal(5, 2)
  interest_rate_assumption           Decimal?              @db.Decimal(5, 4)
  macroeconomic_scenario             String?               @db.VarChar(50)
  collateral_performance_assumptions Json?
  loss_timing_assumptions            String?
  confidence_level                   Decimal?              @db.Decimal(5, 2)
  loss_distribution                  Json?
  tranche_coverage                   Json?
  first_loss_tranche                 String?               @db.VarChar(10)
  attachment_point                   Decimal?              @db.Decimal(5, 2)
  detachment_point                   Decimal?              @db.Decimal(5, 2)
  expected_tranche_losses            Json?
  stress_test_results                Json?
  model_used                         String?               @db.VarChar(100)
  model_version                      String?               @db.VarChar(20)
  model_assumptions                  String?
  notes                              String?
  created_at                         DateTime?             @default(now()) @db.Timestamptz(6)
  asset_backed_products              asset_backed_products @relation(fields: [asset_backed_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([asset_backed_product_id], map: "idx_abs_loss_projections_abs_product")
  @@index([projection_date], map: "idx_abs_loss_projections_date")
  @@index([scenario_name], map: "idx_abs_loss_projections_scenario")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model abs_prepayment_speeds {
  id                        String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_backed_product_id   String                @db.Uuid
  observation_date          DateTime              @db.Timestamptz(6)
  prepayment_type           String                @db.VarChar(50)
  prepayment_rate           Decimal               @db.Decimal(5, 2)
  single_monthly_mortality  Decimal?              @db.Decimal(5, 4)
  constant_prepayment_rate  Decimal?              @db.Decimal(5, 2)
  abs_prepayment_speed      Int?
  psa_percentage            Int?
  voluntary_prepayments     Decimal?              @db.Decimal(20, 2)
  involuntary_prepayments   Decimal?              @db.Decimal(20, 2)
  total_prepayments         Decimal?              @db.Decimal(20, 2)
  currency                  String?               @default("USD") @db.VarChar(3)
  prepayment_drivers        Json?
  interest_rate_environment Decimal?              @db.Decimal(5, 4)
  refinancing_incentive     Decimal?              @db.Decimal(5, 4)
  burnout_factor            Decimal?              @db.Decimal(5, 4)
  seasonal_factors          Json?
  projected_prepayment_rate Decimal?              @db.Decimal(5, 2)
  prepayment_sensitivity    Json?
  model_used                String?               @db.VarChar(100)
  model_assumptions         String?
  historical_average_3m     Decimal?              @db.Decimal(5, 2)
  historical_average_12m    Decimal?              @db.Decimal(5, 2)
  historical_average_life   Decimal?              @db.Decimal(5, 2)
  notes                     String?
  created_at                DateTime?             @default(now()) @db.Timestamptz(6)
  asset_backed_products     asset_backed_products @relation(fields: [asset_backed_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([asset_backed_product_id], map: "idx_abs_prepayment_speeds_abs_product")
  @@index([observation_date], map: "idx_abs_prepayment_speeds_date")
  @@index([prepayment_type], map: "idx_abs_prepayment_speeds_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model abs_tranches {
  id                                String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_backed_product_id           String                @db.Uuid
  tranche_name                      String                @db.VarChar(100)
  tranche_class                     String                @db.VarChar(10)
  seniority_level                   Int
  is_senior                         Boolean?              @default(false)
  is_mezzanine                      Boolean?              @default(false)
  is_subordinated                   Boolean?              @default(false)
  is_equity                         Boolean?              @default(false)
  original_principal                Decimal               @db.Decimal(20, 2)
  current_principal                 Decimal               @db.Decimal(20, 2)
  currency                          String?               @default("USD") @db.VarChar(3)
  coupon_rate                       Decimal               @db.Decimal(5, 4)
  coupon_type                       String?               @db.VarChar(50)
  reference_rate                    String?               @db.VarChar(50)
  spread_bps                        Int?
  payment_frequency                 String?               @db.VarChar(20)
  first_payment_date                DateTime              @db.Timestamptz(6)
  legal_final_maturity              DateTime              @db.Timestamptz(6)
  expected_maturity_date            DateTime?             @db.Timestamptz(6)
  weighted_average_life             Decimal?              @db.Decimal(5, 2)
  credit_enhancement_percentage     Decimal?              @db.Decimal(5, 2)
  subordination_percentage          Decimal?              @db.Decimal(5, 2)
  over_collateralization_percentage Decimal?              @db.Decimal(5, 2)
  credit_rating_moodys              String?               @db.VarChar(10)
  credit_rating_sp                  String?               @db.VarChar(10)
  credit_rating_fitch               String?               @db.VarChar(10)
  rating_date                       DateTime?             @db.Timestamptz(6)
  is_investment_grade               Boolean?
  enhancement_triggers              Json?
  payment_priority                  Int?
  principal_payment_method          String?               @db.VarChar(50)
  call_provisions                   Json?
  is_callable                       Boolean?              @default(false)
  call_date                         DateTime?             @db.Timestamptz(6)
  call_price                        Decimal?              @db.Decimal(5, 2)
  prepayment_lockout_end            DateTime?             @db.Timestamptz(6)
  yield_to_maturity                 Decimal?              @db.Decimal(5, 4)
  yield_to_call                     Decimal?              @db.Decimal(5, 4)
  duration                          Decimal?              @db.Decimal(5, 2)
  convexity                         Decimal?              @db.Decimal(10, 4)
  price_as_of_date                  DateTime?             @db.Timestamptz(6)
  current_price                     Decimal?              @db.Decimal(20, 8)
  status                            String?               @default("performing") @db.VarChar(20)
  notes                             String?
  created_at                        DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime?             @default(now()) @db.Timestamptz(6)
  abs_cash_flows                    abs_cash_flows[]
  asset_backed_products             asset_backed_products @relation(fields: [asset_backed_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([asset_backed_product_id], map: "idx_abs_tranches_abs_product")
  @@index([tranche_class], map: "idx_abs_tranches_class")
  @@index([seniority_level], map: "idx_abs_tranches_seniority")
  @@index([status], map: "idx_abs_tranches_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model asset_backed_products {
  id                       String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id               String                  @unique @db.Uuid
  asset_number             String?                 @db.VarChar(50)
  asset_type               String?                 @db.VarChar(100)
  origination_date         DateTime?               @db.Timestamptz(6)
  original_amount          Decimal?                @db.Decimal
  maturity_date            DateTime?               @db.Timestamptz(6)
  interest_rate            Decimal?                @db.Decimal
  accrual_type             String?                 @db.VarChar(50)
  lien_position            String?                 @db.VarChar(50)
  payment_frequency        String?                 @db.VarChar(50)
  current_balance          Decimal?                @db.Decimal
  modification_indicator   Boolean?
  prepayment_penalty       Decimal?                @db.Decimal
  delinquency_status       Int?
  repurchase_amount        Decimal?                @db.Decimal
  demand_resolution_date   DateTime?               @db.Timestamptz(6)
  repurchaser              String?
  status                   String?                 @db.VarChar(50)
  target_raise             Decimal?                @db.Decimal
  created_at               DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?               @default(now()) @db.Timestamptz(6)
  debtor_credit_quality    String?                 @db.VarChar
  collection_period_days   Int?
  recovery_rate_percentage Decimal?                @db.Decimal
  diversification_metrics  String?                 @db.VarChar
  abs_cash_flows           abs_cash_flows[]
  abs_collateral_pools     abs_collateral_pools[]
  abs_loss_projections     abs_loss_projections[]
  abs_prepayment_speeds    abs_prepayment_speeds[]
  abs_tranches             abs_tranches[]
  projects                 projects                @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_asset_backed_products_project")

  @@index([asset_number], map: "idx_asset_backed_products_asset_number")
  @@index([project_id], map: "idx_asset_backed_products_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model asset_holdings {
  id                 String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  asset_id           String    @db.Uuid
  holding_type       String
  quantity           Decimal   @db.Decimal(78, 18)
  value              Decimal   @db.Decimal(78, 18)
  maturity_date      DateTime? @db.Date
  credit_rating      String?
  source             String    @default("oracle")
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  oracle_price       Decimal?  @default(0) @db.Decimal(78, 18)
  last_oracle_update DateTime? @default(now()) @db.Timestamptz(6)

  @@index([asset_id], map: "idx_asset_holdings_asset_id")
  @@index([maturity_date], map: "idx_asset_holdings_maturity_date")
  @@index([updated_at], map: "idx_asset_holdings_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model asset_nav_data {
  id                                       String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  asset_id                                 String      @db.Uuid
  project_id                               String      @db.Uuid
  date                                     DateTime    @db.Date
  nav                                      Decimal     @db.Decimal(18, 6)
  total_assets                             Decimal     @db.Decimal(78, 18)
  asset_name                               String
  total_liabilities                        Decimal     @default(0) @db.Decimal(78, 18)
  outstanding_shares                       Decimal     @db.Decimal(78, 18)
  previous_nav                             Decimal?    @db.Decimal(18, 6)
  change_amount                            Decimal?    @db.Decimal(18, 6)
  change_percent                           Decimal?    @db.Decimal(8, 4)
  source                                   String      @default("manual")
  validated                                Boolean?    @default(false)
  validated_by                             String?     @db.Uuid
  validated_at                             DateTime?   @db.Timestamptz(6)
  notes                                    String?
  calculation_method                       String?
  market_conditions                        String?
  created_at                               DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at                               DateTime?   @default(now()) @db.Timestamptz(6)
  created_by                               String?     @db.Uuid
  calculated_nav                           Decimal?    @default(dbgenerated("\nCASE\n    WHEN (total_assets > total_liabilities) THEN ((total_assets - total_liabilities) / outstanding_shares)\n    ELSE NULL::numeric\nEND")) @db.Decimal(18, 6)
  identifier                               String?
  token_id                                 String?     @db.Uuid
  token_parity_percentage                  Decimal?    @db.Decimal
  users_asset_nav_data_created_byTousers   auth_users? @relation("asset_nav_data_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects                                 projects    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_asset_nav_data_validated_byTousers auth_users? @relation("asset_nav_data_validated_byTousers", fields: [validated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([asset_id, date], map: "unique_asset_date")
  @@index([asset_id, date], map: "idx_asset_nav_data_asset_date")
  @@index([created_at], map: "idx_asset_nav_data_created_at")
  @@index([asset_id, date(sort: Desc)], map: "idx_asset_nav_data_fund_date")
  @@index([project_id, date], map: "idx_asset_nav_data_project_date")
  @@index([source, validated], map: "idx_asset_nav_data_source_status")
  @@index([validated, date(sort: Desc)], map: "idx_asset_nav_data_validated")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model auction_comparables {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type    String
  date          DateTime @db.Timestamptz(6)
  auction_house String
  lot_number    String?
  hammer_price  Decimal  @db.Decimal
  estimate_low  Decimal? @db.Decimal
  estimate_high Decimal? @db.Decimal
  currency      String   @default("USD")
  premium       Decimal  @default(0) @db.Decimal
  similarity    Decimal  @db.Decimal
  description   String?
  metadata      Json?    @default("{}")
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@index([asset_type], map: "idx_auction_comparables_asset_type")
  @@index([date(sort: Desc)], map: "idx_auction_comparables_date")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model authorized_activities {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  activity_name String
  category      String?
  active        Boolean?  @default(true)
  authorized_at DateTime? @db.Timestamptz(6)
  expires_at    DateTime? @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model authorized_signatories {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String
  role              String
  active            Boolean?  @default(true)
  digital_signature String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model blacklisted_addresses {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address    String    @unique
  reason     String?
  severity   String?
  added_by   String?   @db.Uuid
  added_at   DateTime? @default(now()) @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@index([address], map: "idx_blacklisted_addresses_address")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bond_amortization_schedule {
  id                String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id   String        @db.Uuid
  payment_date      DateTime      @db.Date
  principal_payment Decimal       @db.Decimal(20, 2)
  beginning_balance Decimal       @db.Decimal(20, 2)
  ending_balance    Decimal       @db.Decimal(20, 2)
  payment_status    String        @default("scheduled") @db.VarChar(20)
  created_at        DateTime      @default(now()) @db.Timestamptz(6)
  updated_at        DateTime      @default(now()) @db.Timestamptz(6)
  bond_products     bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bond_product_id], map: "idx_bond_amortization_bond_id")
  @@index([payment_date], map: "idx_bond_amortization_payment_date")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bond_call_put_schedules {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id String        @db.Uuid
  option_type     String        @db.VarChar(10)
  option_date     DateTime      @db.Date
  call_price      Decimal?      @db.Decimal(10, 4)
  put_price       Decimal?      @db.Decimal(10, 4)
  notice_days     Int?
  option_style    String        @db.VarChar(20)
  is_make_whole   Boolean       @default(false)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime      @default(now()) @db.Timestamptz(6)
  bond_products   bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bond_product_id], map: "idx_bond_call_put_bond_id")
  @@index([option_date], map: "idx_bond_call_put_option_date")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bond_coupon_payments {
  id                  String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id     String        @db.Uuid
  payment_date        DateTime      @db.Date
  coupon_amount       Decimal       @db.Decimal(20, 2)
  payment_status      String        @default("scheduled") @db.VarChar(20)
  actual_payment_date DateTime?     @db.Date
  accrual_start_date  DateTime      @db.Date
  accrual_end_date    DateTime      @db.Date
  days_in_period      Int
  created_at          DateTime      @default(now()) @db.Timestamptz(6)
  updated_at          DateTime      @default(now()) @db.Timestamptz(6)
  bond_products       bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bond_product_id], map: "idx_bond_coupon_payments_bond_id")
  @@index([payment_date], map: "idx_bond_coupon_payments_payment_date")
  @@index([payment_status], map: "idx_bond_coupon_payments_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bond_covenants {
  id                   String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id      String        @db.Uuid
  covenant_type        String        @db.VarChar(50)
  covenant_description String
  financial_ratio      String?       @db.VarChar(50)
  threshold_value      Decimal?      @db.Decimal(20, 4)
  test_frequency       String?       @db.VarChar(20)
  last_test_date       DateTime?     @db.Date
  compliance_status    String?       @db.VarChar(20)
  created_at           DateTime      @default(now()) @db.Timestamptz(6)
  updated_at           DateTime      @default(now()) @db.Timestamptz(6)
  bond_products        bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bond_product_id], map: "idx_bond_covenants_bond_id")
  @@index([covenant_type], map: "idx_bond_covenants_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bond_credit_ratings {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id String        @db.Uuid
  rating_agency   String        @db.VarChar(20)
  rating          String        @db.VarChar(10)
  rating_outlook  String?       @db.VarChar(20)
  rating_date     DateTime      @db.Date
  previous_rating String?       @db.VarChar(10)
  rating_action   String?       @db.VarChar(20)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  bond_products   bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([bond_product_id, rating_agency, rating_date], map: "bond_credit_ratings_unique_agency_date")
  @@index([bond_product_id, rating_agency, rating_date(sort: Desc)], map: "idx_bond_credit_ratings_bond_agency_date")
  @@index([bond_product_id], map: "idx_bond_credit_ratings_bond_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bond_events {
  id                   String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id      String        @db.Uuid
  event_type           String        @db.VarChar(50)
  event_date           DateTime      @db.Date
  announcement_date    DateTime?     @db.Date
  event_description    String
  financial_impact     Decimal?      @db.Decimal(20, 2)
  requires_revaluation Boolean       @default(false)
  created_at           DateTime      @default(now()) @db.Timestamptz(6)
  bond_products        bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bond_product_id], map: "idx_bond_events_bond_id")
  @@index([event_date(sort: Desc)], map: "idx_bond_events_event_date")
  @@index([event_type], map: "idx_bond_events_event_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bond_market_prices {
  id                  String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id     String        @db.Uuid
  price_date          DateTime      @db.Date
  price_time          DateTime?     @db.Time(6)
  clean_price         Decimal       @db.Decimal(10, 4)
  dirty_price         Decimal       @db.Decimal(10, 4)
  bid_price           Decimal?      @db.Decimal(10, 4)
  ask_price           Decimal?      @db.Decimal(10, 4)
  mid_price           Decimal?      @db.Decimal(10, 4)
  ytm                 Decimal?      @db.Decimal(8, 4)
  spread_to_benchmark Decimal?      @db.Decimal(8, 4)
  data_source         String        @db.VarChar(50)
  is_official_close   Boolean       @default(false)
  created_at          DateTime      @default(now()) @db.Timestamptz(6)
  bond_products       bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([bond_product_id, price_date, price_time, data_source], map: "bond_market_prices_unique_timestamp")
  @@index([bond_product_id, price_date(sort: Desc)], map: "idx_bond_market_prices_bond_date")
  @@index([bond_product_id], map: "idx_bond_market_prices_bond_id")
  @@index([price_date(sort: Desc)], map: "idx_bond_market_prices_date")
  @@schema("public")
}

model bond_products {
  id                         String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                 String                       @unique @db.Uuid
  bond_isin_cusip            String?                      @db.VarChar(50)
  issuer_name                String?
  coupon_rate                Decimal?                     @db.Decimal
  face_value                 Decimal?                     @db.Decimal
  credit_rating              String?                      @db.VarChar(10)
  bond_type                  String?                      @db.VarChar(50)
  callable_flag              Boolean?
  call_put_dates             DateTime[]                   @db.Timestamptz
  yield_to_maturity          Decimal?                     @db.Decimal
  duration                   Decimal?                     @db.Decimal
  currency                   String?                      @db.VarChar(10)
  issue_date                 DateTime?                    @db.Timestamptz(6)
  maturity_date              DateTime?                    @db.Timestamptz(6)
  status                     String?                      @db.VarChar(50)
  coupon_payment_history     Json?
  redemption_call_date       DateTime?                    @db.Timestamptz(6)
  accrued_interest           Decimal?                     @db.Decimal
  coupon_frequency           String?                      @db.VarChar(50)
  callable_features          Boolean?
  call_date                  DateTime?                    @db.Timestamptz(6)
  call_price                 Decimal?                     @db.Decimal
  security_collateral        String?
  target_raise               Decimal?                     @db.Decimal
  created_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  bond_identifier            String?                      @db.VarChar
  isin                       String?                      @db.VarChar(12)
  cusip                      String?                      @db.VarChar(9)
  sedol                      String?                      @db.VarChar(7)
  asset_name                 String?                      @db.VarChar(255)
  issuer_type                String?                      @db.VarChar(50)
  seniority                  String?                      @db.VarChar(50)
  day_count_convention       String?                      @default("actual_actual") @db.VarChar(20)
  purchase_price             Decimal?                     @db.Decimal(20, 2)
  purchase_date              DateTime?                    @db.Date
  current_price              Decimal?                     @db.Decimal(20, 2)
  accounting_treatment       String?                      @default("held_to_maturity") @db.VarChar(30)
  puttable                   Boolean?                     @default(false)
  convertible                Boolean?                     @default(false)
  bond_amortization_schedule bond_amortization_schedule[]
  bond_call_put_schedules    bond_call_put_schedules[]
  bond_coupon_payments       bond_coupon_payments[]
  bond_covenants             bond_covenants[]
  bond_credit_ratings        bond_credit_ratings[]
  bond_events                bond_events[]
  bond_market_prices         bond_market_prices[]
  projects                   projects                     @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_bond_products_project")
  bond_sinking_fund          bond_sinking_fund[]

  @@index([accounting_treatment], map: "idx_bond_products_accounting_treatment")
  @@index([bond_isin_cusip], map: "idx_bond_products_bond_isin_cusip")
  @@index([credit_rating], map: "idx_bond_products_credit_rating")
  @@index([maturity_date], map: "idx_bond_products_maturity_date")
  @@index([project_id], map: "idx_bond_products_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model bond_sinking_fund {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bond_product_id  String        @db.Uuid
  payment_date     DateTime      @db.Date
  required_amount  Decimal       @db.Decimal(20, 2)
  actual_amount    Decimal?      @db.Decimal(20, 2)
  redemption_price Decimal       @db.Decimal(10, 4)
  payment_status   String        @default("pending") @db.VarChar(20)
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime      @default(now()) @db.Timestamptz(6)
  bond_products    bond_products @relation(fields: [bond_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([bond_product_id], map: "idx_bond_sinking_fund_bond_id")
  @@index([payment_date], map: "idx_bond_sinking_fund_payment_date")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model carbon_market_prices {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_id                String?  @db.Uuid
  current_price           Decimal  @db.Decimal
  voluntary_market_price  Decimal  @db.Decimal
  compliance_market_price Decimal  @db.Decimal
  future_price            Decimal? @db.Decimal
  currency                String   @default("USD") @db.VarChar(3)
  as_of_date              DateTime @db.Timestamptz(6)
  source                  String   @db.VarChar(100)
  liquidity_score         Decimal? @db.Decimal
  market_type             String?  @db.VarChar(50)
  created_at              DateTime @default(now()) @db.Timestamptz(6)
  updated_at              DateTime @default(now()) @db.Timestamptz(6)

  @@unique([asset_id, as_of_date])
  @@index([asset_id, as_of_date(sort: Desc)], map: "idx_carbon_market_prices_asset_date")
  @@index([as_of_date(sort: Desc)], map: "idx_carbon_market_prices_latest")
  @@schema("public")
}

model carbon_offsets {
  offset_id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id            String    @db.Uuid
  type                  String    @db.VarChar(50)
  amount                Decimal   @db.Decimal(15, 2)
  price_per_ton         Decimal   @db.Decimal(10, 2)
  total_value           Decimal   @db.Decimal(15, 2)
  verification_standard String?   @db.VarChar(100)
  verification_date     DateTime? @db.Date
  expiration_date       DateTime? @db.Date
  status                String    @db.VarChar(50)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_allocations {
  id                               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  composite_fund_id                String    @db.Uuid
  asset_class                      String    @db.VarChar(50)
  asset_subclass                   String?   @db.VarChar(50)
  target_allocation_percentage     Decimal   @db.Decimal(5, 2)
  minimum_allocation_percentage    Decimal?  @db.Decimal(5, 2)
  maximum_allocation_percentage    Decimal?  @db.Decimal(5, 2)
  current_allocation_percentage    Decimal   @db.Decimal(5, 2)
  current_market_value             Decimal   @db.Decimal(20, 2)
  currency                         String?   @default("USD") @db.VarChar(3)
  allocation_drift                 Decimal?  @db.Decimal(5, 2)
  drift_percentage                 Decimal?  @db.Decimal(5, 2)
  is_within_tolerance              Boolean?  @default(true)
  rebalancing_threshold_percentage Decimal?  @db.Decimal(5, 2)
  strategic_rationale              String?
  benchmark_index                  String?   @db.VarChar(50)
  tracking_error                   Decimal?  @db.Decimal(5, 2)
  effective_date                   DateTime  @db.Timestamptz(6)
  last_rebalance_date              DateTime? @db.Timestamptz(6)
  next_review_date                 DateTime? @db.Timestamptz(6)
  allocation_policy_document_url   String?
  notes                            String?
  created_at                       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([asset_class], map: "idx_cf_allocations_asset_class")
  @@index([effective_date], map: "idx_cf_allocations_effective_date")
  @@index([composite_fund_id], map: "idx_cf_allocations_fund")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_cash_flows {
  id                         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  composite_fund_id          String    @db.Uuid
  cash_flow_date             DateTime  @db.Timestamptz(6)
  cash_flow_type             String    @db.VarChar(50)
  amount                     Decimal   @db.Decimal(20, 2)
  currency                   String?   @default("USD") @db.VarChar(3)
  investor_id                String?   @db.Uuid
  investor_name              String?   @db.VarChar(255)
  number_of_shares           Decimal?  @db.Decimal(20, 6)
  share_price                Decimal?  @db.Decimal(20, 8)
  asset_class_affected       String?   @db.VarChar(50)
  allocation_method          String?   @db.VarChar(50)
  related_transaction_id     String?   @db.VarChar(100)
  payment_method             String?   @db.VarChar(50)
  transaction_reference      String?   @db.VarChar(100)
  bank_account_last_4        String?   @db.VarChar(4)
  processing_time_days       Int?
  fees_charged               Decimal?  @db.Decimal(20, 2)
  fee_percentage             Decimal?  @db.Decimal(5, 2)
  tax_withholding            Decimal?  @db.Decimal(20, 2)
  net_cash_flow              Decimal?  @db.Decimal(20, 2)
  fund_nav_before            Decimal?  @db.Decimal(20, 2)
  fund_nav_after             Decimal?  @db.Decimal(20, 2)
  impact_on_allocations      Json?
  reinvestment_plan          String?
  redemption_impact_analysis String?
  status                     String?   @default("completed") @db.VarChar(20)
  failure_reason             String?
  notes                      String?
  created_at                 DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime? @default(now()) @db.Timestamptz(6)

  @@index([cash_flow_date], map: "idx_cf_cash_flows_date")
  @@index([composite_fund_id], map: "idx_cf_cash_flows_fund")
  @@index([investor_id], map: "idx_cf_cash_flows_investor")
  @@index([cash_flow_type], map: "idx_cf_cash_flows_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_holdings {
  id                              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  composite_fund_id               String    @db.Uuid
  asset_class                     String    @db.VarChar(50)
  asset_subclass                  String?   @db.VarChar(50)
  holding_type                    String    @db.VarChar(50)
  product_id                      String?   @db.Uuid
  product_type                    String?   @db.VarChar(50)
  ticker_symbol                   String?   @db.VarChar(50)
  isin                            String?   @db.VarChar(50)
  cusip                           String?   @db.VarChar(50)
  security_name                   String    @db.VarChar(255)
  quantity                        Decimal   @db.Decimal(20, 6)
  average_cost                    Decimal?  @db.Decimal(20, 8)
  total_cost_basis                Decimal?  @db.Decimal(20, 2)
  current_price                   Decimal   @db.Decimal(20, 8)
  current_market_value            Decimal   @db.Decimal(20, 2)
  currency                        String?   @default("USD") @db.VarChar(3)
  fx_rate_to_base                 Decimal?  @db.Decimal(20, 8)
  unrealized_gain_loss            Decimal?  @db.Decimal(20, 2)
  unrealized_gain_loss_percentage Decimal?  @db.Decimal(5, 2)
  weight_in_portfolio             Decimal?  @db.Decimal(5, 2)
  weight_in_asset_class           Decimal?  @db.Decimal(5, 2)
  acquisition_date                DateTime  @db.Timestamptz(6)
  last_rebalance_date             DateTime? @db.Timestamptz(6)
  accrued_income                  Decimal?  @db.Decimal(20, 2)
  dividend_yield                  Decimal?  @db.Decimal(5, 2)
  maturity_date                   DateTime? @db.Timestamptz(6)
  credit_rating                   String?   @db.VarChar(10)
  country_exposure                String?   @db.VarChar(3)
  sector_exposure                 String?   @db.VarChar(50)
  esg_score                       Int?
  liquidity_classification        String?   @db.VarChar(20)
  days_to_liquidate_estimate      Int?
  is_restricted                   Boolean?  @default(false)
  restriction_reason              String?
  restriction_end_date            DateTime? @db.Timestamptz(6)
  status                          String?   @default("active") @db.VarChar(20)
  notes                           String?
  created_at                      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime? @default(now()) @db.Timestamptz(6)

  @@index([asset_class], map: "idx_cf_holdings_asset_class")
  @@index([composite_fund_id], map: "idx_cf_holdings_fund")
  @@index([product_id], map: "idx_cf_holdings_product_id")
  @@index([status], map: "idx_cf_holdings_status")
  @@index([ticker_symbol], map: "idx_cf_holdings_ticker")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_performance_attribution {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  composite_fund_id       String    @db.Uuid
  period_start_date       DateTime  @db.Timestamptz(6)
  period_end_date         DateTime  @db.Timestamptz(6)
  attribution_level       String    @db.VarChar(50)
  asset_class             String?   @db.VarChar(50)
  holding_id              String?   @db.Uuid
  security_name           String?   @db.VarChar(255)
  beginning_market_value  Decimal   @db.Decimal(20, 2)
  ending_market_value     Decimal   @db.Decimal(20, 2)
  currency                String?   @default("USD") @db.VarChar(3)
  net_cash_flow           Decimal?  @db.Decimal(20, 2)
  total_return            Decimal?  @db.Decimal(20, 2)
  total_return_percentage Decimal?  @db.Decimal(5, 2)
  capital_appreciation    Decimal?  @db.Decimal(20, 2)
  income_return           Decimal?  @db.Decimal(20, 2)
  fx_impact               Decimal?  @db.Decimal(20, 2)
  allocation_effect       Decimal?  @db.Decimal(20, 2)
  selection_effect        Decimal?  @db.Decimal(20, 2)
  interaction_effect      Decimal?  @db.Decimal(20, 2)
  benchmark_return        Decimal?  @db.Decimal(5, 2)
  benchmark_index         String?   @db.VarChar(50)
  active_return           Decimal?  @db.Decimal(5, 2)
  tracking_error          Decimal?  @db.Decimal(5, 2)
  information_ratio       Decimal?  @db.Decimal(5, 2)
  sharpe_ratio            Decimal?  @db.Decimal(5, 2)
  sortino_ratio           Decimal?  @db.Decimal(5, 2)
  max_drawdown            Decimal?  @db.Decimal(5, 2)
  volatility              Decimal?  @db.Decimal(5, 2)
  beta                    Decimal?  @db.Decimal(5, 4)
  alpha                   Decimal?  @db.Decimal(5, 2)
  contribution_to_return  Decimal?  @db.Decimal(20, 2)
  contribution_percentage Decimal?  @db.Decimal(5, 2)
  top_contributors        Json?
  top_detractors          Json?
  sector_attribution      Json?
  country_attribution     Json?
  risk_attribution        Json?
  calculation_methodology String?   @db.VarChar(100)
  notes                   String?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@index([asset_class], map: "idx_cf_performance_attribution_asset_class")
  @@index([composite_fund_id], map: "idx_cf_performance_attribution_fund")
  @@index([attribution_level], map: "idx_cf_performance_attribution_level")
  @@index([period_start_date, period_end_date], map: "idx_cf_performance_attribution_period")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_rebalancing_events {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  composite_fund_id       String    @db.Uuid
  rebalancing_date        DateTime  @db.Timestamptz(6)
  rebalancing_type        String    @db.VarChar(50)
  trigger_reason          String?
  pre_rebalance_nav       Decimal   @db.Decimal(20, 2)
  post_rebalance_nav      Decimal   @db.Decimal(20, 2)
  currency                String?   @default("USD") @db.VarChar(3)
  allocations_before      Json
  allocations_after       Json
  target_allocations      Json?
  trades_executed         Json
  total_trades            Int?
  total_buy_value         Decimal?  @db.Decimal(20, 2)
  total_sell_value        Decimal?  @db.Decimal(20, 2)
  net_cash_flow           Decimal?  @db.Decimal(20, 2)
  transaction_costs       Decimal?  @db.Decimal(20, 2)
  transaction_cost_bps    Int?
  market_impact_estimate  Decimal?  @db.Decimal(20, 2)
  tax_implications        Decimal?  @db.Decimal(20, 2)
  execution_quality_score Int?
  slippage                Decimal?  @db.Decimal(20, 2)
  days_to_complete        Int?
  completion_date         DateTime? @db.Timestamptz(6)
  portfolio_manager       String?   @db.VarChar(255)
  approval_status         String?   @default("approved") @db.VarChar(20)
  approved_by             String?   @db.VarChar(255)
  approval_date           DateTime? @db.Timestamptz(6)
  performance_impact      Json?
  variance_from_plan      Json?
  lessons_learned         String?
  status                  String?   @default("completed") @db.VarChar(20)
  notes                   String?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)

  @@index([rebalancing_date], map: "idx_cf_rebalancing_events_date")
  @@index([composite_fund_id], map: "idx_cf_rebalancing_events_fund")
  @@index([rebalancing_type], map: "idx_cf_rebalancing_events_type")
  @@schema("public")
}

model climate_cash_flow_projections {
  projection_id    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  projection_date  DateTime  @db.Date
  projected_amount Decimal   @db.Decimal(15, 2)
  source_type      String    @db.VarChar(50)
  entity_id        String?   @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model climate_incentives {
  incentive_id             String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                     String                     @db.VarChar(50)
  amount                   Decimal                    @db.Decimal(15, 2)
  status                   String                     @db.VarChar(50)
  asset_id                 String?                    @db.Uuid
  receivable_id            String?                    @db.Uuid
  expected_receipt_date    DateTime?                  @db.Date
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  project_id               String?                    @db.Uuid
  energy_assets            energy_assets?             @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction)
  climate_receivables      climate_receivables?       @relation(fields: [receivable_id], references: [receivable_id], onDelete: NoAction, onUpdate: NoAction)
  projects                 projects?                  @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "fk_climate_incentives_project_id")
  climate_pool_incentives  climate_pool_incentives[]
  renewable_energy_credits renewable_energy_credits[]

  @@index([asset_id], map: "idx_climate_incentives_asset")
  @@index([project_id], map: "idx_climate_incentives_project_id")
  @@index([receivable_id], map: "idx_climate_incentives_receivable")
  @@index([type], map: "idx_climate_incentives_type")
  @@schema("public")
}

model climate_investor_pools {
  investor_id                String                     @db.Uuid
  pool_id                    String                     @db.Uuid
  investment_amount          Decimal                    @db.Decimal(15, 2)
  created_at                 DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                  @default(now()) @db.Timestamptz(6)
  project_id                 String?                    @db.Uuid
  investors                  investors                  @relation(fields: [investor_id], references: [investor_id], onDelete: NoAction, onUpdate: NoAction)
  climate_tokenization_pools climate_tokenization_pools @relation(fields: [pool_id], references: [pool_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([investor_id, pool_id])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model climate_market_data_cache {
  cache_id      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cache_key     String    @unique @db.VarChar(100)
  data          Json
  cached_at     DateTime? @default(now()) @db.Timestamptz(6)
  expires_at    DateTime  @db.Timestamptz(6)
  hit_count     Int?      @default(0)
  last_accessed DateTime? @default(now()) @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_climate_market_data_cache_expires")
  @@index([cache_key], map: "idx_climate_market_data_cache_key")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model climate_nav_calculations {
  id                               String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  receivable_id                    String              @db.Uuid
  asset_id                         String?             @db.Uuid
  calculation_type                 String
  lcoe_capex                       Decimal?            @db.Decimal(15, 2)
  lcoe_opex_annual                 Decimal?            @db.Decimal(12, 2)
  lcoe_maintenance_costs           Json?
  lcoe_tax_credits                 Json?
  lcoe_calculated                  Decimal?            @db.Decimal(10, 4)
  lcoe_competitiveness             String?
  ppa_contract_type                String?
  ppa_base_rate                    Decimal?            @db.Decimal(10, 4)
  ppa_escalation_rate              Decimal?            @db.Decimal(6, 4)
  ppa_market_comparison            Decimal?            @db.Decimal(10, 4)
  ppa_counterparty_rating          String?
  ppa_risk_premium                 Decimal?            @db.Decimal(6, 4)
  carbon_credits_annual            Int?
  carbon_price_current             Decimal?            @db.Decimal(8, 2)
  carbon_verification_standard     String?
  additionality_financial          Boolean?
  additionality_regulatory         Boolean?
  additionality_common_practice    Boolean?
  additionality_barrier            Boolean?
  additionality_premium_percentage Decimal?            @db.Decimal(5, 2)
  climate_nav_value                Decimal?            @db.Decimal(15, 2)
  monte_carlo_nav_value            Decimal?            @db.Decimal(15, 2)
  valuation_variance               Decimal?            @db.Decimal(6, 4)
  recommended_value                Decimal?            @db.Decimal(15, 2)
  investment_recommendation        String?
  confidence_level                 Decimal?            @db.Decimal(4, 3)
  calculation_methodology          String?
  data_sources                     Json?
  risk_adjustments                 Json?
  created_at                       DateTime?           @default(now()) @db.Timestamptz(6)
  calculated_by                    String?
  energy_assets                    energy_assets?      @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction)
  climate_receivables              climate_receivables @relation(fields: [receivable_id], references: [receivable_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([asset_id], map: "idx_climate_nav_asset")
  @@index([created_at], map: "idx_climate_nav_created")
  @@index([receivable_id], map: "idx_climate_nav_receivable")
  @@index([calculation_type], map: "idx_climate_nav_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model climate_payers {
  payer_id               String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String                @db.VarChar(255)
  credit_rating          String?               @db.VarChar(10)
  financial_health_score Int?
  payment_history        Json?
  created_at             DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?             @default(now()) @db.Timestamptz(6)
  project_id             String?               @db.Uuid
  esg_score              Int?
  climate_receivables    climate_receivables[]

  @@schema("public")
}

model climate_policies {
  policy_id              String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String                   @unique @db.VarChar(255)
  description            String?
  impact_level           String?                  @db.VarChar(50)
  effective_date         DateTime                 @db.Date
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                @default(now()) @db.Timestamptz(6)
  project_id             String?                  @db.Uuid
  climate_policy_impacts climate_policy_impacts[]

  @@index([effective_date], map: "idx_climate_policies_effective_date")
  @@schema("public")
}

model climate_policy_impacts {
  impact_id           String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  policy_id           String?              @db.Uuid
  receivable_id       String?              @db.Uuid
  asset_id            String?              @db.Uuid
  impact_description  String?
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @default(now()) @db.Timestamptz(6)
  project_id          String?              @db.Uuid
  energy_assets       energy_assets?       @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction)
  climate_policies    climate_policies?    @relation(fields: [policy_id], references: [policy_id], onDelete: NoAction, onUpdate: NoAction)
  climate_receivables climate_receivables? @relation(fields: [receivable_id], references: [receivable_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model climate_pool_energy_assets {
  pool_id                    String                     @db.Uuid
  asset_id                   String                     @db.Uuid
  created_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  project_id                 String?                    @db.Uuid
  energy_assets              energy_assets              @relation(fields: [asset_id], references: [asset_id], onDelete: Cascade, onUpdate: NoAction)
  climate_tokenization_pools climate_tokenization_pools @relation(fields: [pool_id], references: [pool_id], onDelete: Cascade, onUpdate: NoAction)
  projects                   projects?                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([pool_id, asset_id])
  @@index([asset_id], map: "idx_climate_pool_energy_assets_asset_id")
  @@index([pool_id], map: "idx_climate_pool_energy_assets_pool_id")
  @@index([project_id], map: "idx_climate_pool_energy_assets_project_id")
  @@schema("public")
}

model climate_pool_incentives {
  pool_id                    String                     @db.Uuid
  incentive_id               String                     @db.Uuid
  created_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  project_id                 String?                    @db.Uuid
  climate_incentives         climate_incentives         @relation(fields: [incentive_id], references: [incentive_id], onDelete: Cascade, onUpdate: NoAction)
  climate_tokenization_pools climate_tokenization_pools @relation(fields: [pool_id], references: [pool_id], onDelete: Cascade, onUpdate: NoAction)
  projects                   projects?                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([pool_id, incentive_id])
  @@index([incentive_id], map: "idx_climate_pool_incentives_incentive_id")
  @@index([pool_id], map: "idx_climate_pool_incentives_pool_id")
  @@index([project_id], map: "idx_climate_pool_incentives_project_id")
  @@schema("public")
}

model climate_pool_receivables {
  pool_id                    String                     @db.Uuid
  receivable_id              String                     @db.Uuid
  created_at                 DateTime?                  @default(now()) @db.Timestamptz(6)
  project_id                 String?                    @db.Uuid
  climate_tokenization_pools climate_tokenization_pools @relation(fields: [pool_id], references: [pool_id], onDelete: NoAction, onUpdate: NoAction)
  climate_receivables        climate_receivables        @relation(fields: [receivable_id], references: [receivable_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([pool_id, receivable_id])
  @@schema("public")
}

model climate_pool_recs {
  pool_id                    String                     @db.Uuid
  rec_id                     String                     @db.Uuid
  created_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                   @default(now()) @db.Timestamptz(6)
  project_id                 String?                    @db.Uuid
  climate_tokenization_pools climate_tokenization_pools @relation(fields: [pool_id], references: [pool_id], onDelete: Cascade, onUpdate: NoAction)
  projects                   projects?                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  renewable_energy_credits   renewable_energy_credits   @relation(fields: [rec_id], references: [rec_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([pool_id, rec_id])
  @@index([pool_id], map: "idx_climate_pool_recs_pool_id")
  @@index([project_id], map: "idx_climate_pool_recs_project_id")
  @@index([rec_id], map: "idx_climate_pool_recs_rec_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model climate_receivables {
  receivable_id               String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_id                    String?                     @db.Uuid
  payer_id                    String?                     @db.Uuid
  amount                      Decimal                     @db.Decimal(15, 2)
  due_date                    DateTime                    @db.Date
  risk_score                  Int?
  discount_rate               Decimal?                    @db.Decimal(5, 2)
  created_at                  DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?                   @default(now()) @db.Timestamptz(6)
  project_id                  String?                     @db.Uuid
  climate_nav_value           Decimal?                    @db.Decimal(15, 2)
  monte_carlo_nav_value       Decimal?                    @db.Decimal(15, 2)
  nav_variance_percentage     Decimal?                    @db.Decimal(6, 4)
  nav_reconciliation_status   String?
  investment_recommendation   String?
  recommendation_confidence   Decimal?                    @db.Decimal(4, 3)
  target_price                Decimal?                    @db.Decimal(15, 2)
  climate_nav_last_calculated DateTime?                   @db.Timestamptz(6)
  climate_incentives          climate_incentives[]
  climate_nav_calculations    climate_nav_calculations[]
  climate_policy_impacts      climate_policy_impacts[]
  climate_pool_receivables    climate_pool_receivables[]
  energy_assets               energy_assets?              @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction)
  climate_payers              climate_payers?             @relation(fields: [payer_id], references: [payer_id], onDelete: NoAction, onUpdate: NoAction)
  climate_risk_calculations   climate_risk_calculations[]
  climate_risk_factors        climate_risk_factors[]
  renewable_energy_credits    renewable_energy_credits[]

  @@index([payer_id, due_date], map: "idx_climate_receivables_payer_due")
  @@schema("public")
}

model climate_reports {
  report_id      String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  report_type    String      @db.VarChar(50)
  generated_by   String?     @db.Uuid
  parameters     Json
  file_path      String
  file_size      BigInt?
  status         String?     @default("pending") @db.VarChar(20)
  created_at     DateTime?   @default(now()) @db.Timestamptz(6)
  expires_at     DateTime?   @db.Timestamptz(6)
  download_count Int?        @default(0)
  users          auth_users? @relation(fields: [generated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model climate_risk_calculations {
  id                         String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  receivable_id              String              @db.Uuid
  calculated_at              DateTime            @default(now()) @db.Timestamptz(6)
  production_risk_score      Decimal             @db.Decimal(5, 4)
  production_risk_factors    String[]            @default([])
  production_risk_confidence Decimal             @db.Decimal(5, 4)
  last_weather_update        DateTime?           @db.Timestamptz(6)
  credit_risk_score          Decimal             @db.Decimal(5, 4)
  credit_risk_factors        String[]            @default([])
  credit_risk_confidence     Decimal             @db.Decimal(5, 4)
  last_credit_update         DateTime?           @db.Timestamptz(6)
  policy_risk_score          Decimal             @db.Decimal(5, 4)
  policy_risk_factors        String[]            @default([])
  policy_risk_confidence     Decimal             @db.Decimal(5, 4)
  last_policy_update         DateTime?           @db.Timestamptz(6)
  composite_risk_score       Decimal             @db.Decimal(5, 4)
  composite_risk_level       String
  composite_risk_confidence  Decimal             @db.Decimal(5, 4)
  discount_rate_calculated   Decimal             @db.Decimal(8, 4)
  discount_rate_previous     Decimal?            @db.Decimal(8, 4)
  discount_rate_change       Decimal?            @db.Decimal(8, 4)
  discount_rate_reason       String?
  recommendations            String[]            @default([])
  alerts                     Json                @default("[]")
  next_review_date           DateTime            @db.Timestamptz(6)
  created_at                 DateTime            @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime            @default(now()) @db.Timestamptz(6)
  project_id                 String?             @db.Uuid
  market_adjustments         Json?               @default("{}")
  user_data_sources          Json?               @default("[]")
  data_completeness          String?             @default("basic") @db.VarChar(20)
  methodology_used           String?
  factors_considered         Json?               @default("[]")
  policy_impact_assessment   Json?               @default("[]")
  calculation_date           DateTime?           @default(now()) @db.Timestamptz(6)
  climate_receivables        climate_receivables @relation(fields: [receivable_id], references: [receivable_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([receivable_id, next_review_date], map: "idx_climate_risk_calculations_active")
  @@index([calculated_at], map: "idx_climate_risk_calculations_calculated_at")
  @@index([next_review_date], map: "idx_climate_risk_calculations_next_review")
  @@index([receivable_id], map: "idx_climate_risk_calculations_receivable_id")
  @@index([composite_risk_level], map: "idx_climate_risk_calculations_risk_level")
  @@schema("public")
}

model climate_risk_factors {
  factor_id           String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  receivable_id       String?              @db.Uuid
  production_risk     Decimal?             @db.Decimal(5, 2)
  credit_risk         Decimal?             @db.Decimal(5, 2)
  policy_risk         Decimal?             @db.Decimal(5, 2)
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @default(now()) @db.Timestamptz(6)
  project_id          String?              @db.Uuid
  climate_receivables climate_receivables? @relation(fields: [receivable_id], references: [receivable_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model climate_tokenization_pools {
  pool_id                    String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                       String                       @db.VarChar(255)
  total_value                Decimal                      @db.Decimal(15, 2)
  risk_profile               String?                      @db.VarChar(50)
  created_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  project_id                 String?                      @db.Uuid
  climate_investor_pools     climate_investor_pools[]
  climate_pool_energy_assets climate_pool_energy_assets[]
  climate_pool_incentives    climate_pool_incentives[]
  climate_pool_receivables   climate_pool_receivables[]
  climate_pool_recs          climate_pool_recs[]
  token_climate_properties   token_climate_properties[]

  @@index([project_id], map: "idx_climate_tokenization_pools_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model climate_user_data_cache {
  cache_id                  String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  source_id                 String?                    @db.Uuid
  entity_id                 String                     @db.VarChar(255)
  data_type                 String                     @db.VarChar(50)
  processed_data            Json
  extracted_at              DateTime?                  @default(now()) @db.Timestamptz(6)
  expires_at                DateTime                   @db.Timestamptz(6)
  data_quality_score        Decimal?                   @default(0.5) @db.Decimal(3, 2)
  created_at                DateTime?                  @default(now()) @db.Timestamptz(6)
  climate_user_data_sources climate_user_data_sources? @relation(fields: [source_id], references: [source_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([entity_id], map: "idx_climate_user_data_cache_entity")
  @@index([expires_at], map: "idx_climate_user_data_cache_expires")
  @@index([data_type], map: "idx_climate_user_data_cache_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model climate_user_data_sources {
  source_id               String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                 String?                   @db.Uuid
  project_id              String?                   @db.Uuid
  source_name             String                    @db.VarChar(255)
  source_type             String                    @db.VarChar(50)
  data_format             String                    @db.VarChar(20)
  file_path               String
  file_size               BigInt
  data_schema             Json?                     @default("{}")
  upload_date             DateTime?                 @default(now()) @db.Timestamptz(6)
  last_processed          DateTime?                 @db.Timestamptz(6)
  processing_status       String?                   @default("pending") @db.VarChar(20)
  validation_errors       Json?                     @default("[]")
  refresh_frequency       String?                   @default("manual") @db.VarChar(20)
  is_active               Boolean?                  @default(true)
  metadata                Json?                     @default("{}")
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  climate_user_data_cache climate_user_data_cache[]
  users                   auth_users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  data_source_mappings    data_source_mappings[]

  @@index([is_active], map: "idx_climate_user_data_sources_active")
  @@index([source_type, processing_status], map: "idx_climate_user_data_sources_type_status")
  @@index([user_id], map: "idx_climate_user_data_sources_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model collectibles_appraisals {
  id                              String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  collectibles_product_id         String                @db.Uuid
  appraisal_date                  DateTime              @db.Timestamptz(6)
  appraiser_name                  String                @db.VarChar(255)
  appraiser_credentials           String?
  appraiser_firm                  String?               @db.VarChar(255)
  appraisal_type                  String                @db.VarChar(50)
  appraised_value                 Decimal               @db.Decimal(20, 2)
  value_range_low                 Decimal?              @db.Decimal(20, 2)
  value_range_high                Decimal?              @db.Decimal(20, 2)
  currency                        String?               @default("USD") @db.VarChar(3)
  appraisal_method                String?               @db.VarChar(100)
  condition_assessment            String?
  condition_grade                 String?               @db.VarChar(20)
  authenticity_verified           Boolean?              @default(false)
  authenticity_method             String?
  rarity_assessment               String?
  market_demand_assessment        String?
  comparable_sales                Json?
  recent_auction_results          Json?
  market_trends_analysis          String?
  factors_affecting_value         String?
  liquidity_assessment            String?
  estimated_time_to_sell_days     Int?
  insurance_recommended_value     Decimal?              @db.Decimal(20, 2)
  replacement_cost                Decimal?              @db.Decimal(20, 2)
  appraisal_report_url            String?
  photo_documentation_urls        String[]
  is_certified_appraisal          Boolean?              @default(false)
  certification_body              String?               @db.VarChar(100)
  next_appraisal_recommended_date DateTime?             @db.Timestamptz(6)
  notes                           String?
  created_at                      DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?             @default(now()) @db.Timestamptz(6)
  collectibles_products           collectibles_products @relation(fields: [collectibles_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([appraiser_name], map: "idx_collectibles_appraisals_appraiser")
  @@index([collectibles_product_id], map: "idx_collectibles_appraisals_collectible")
  @@index([appraisal_date], map: "idx_collectibles_appraisals_date")
  @@index([appraisal_type], map: "idx_collectibles_appraisals_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_authentication_records {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id              String    @db.Uuid
  confidence_score        Decimal   @db.Decimal
  certification_authority String?
  certification_date      DateTime? @db.Date
  fraud_risk_score        Decimal   @db.Decimal
  authentication_method   String?
  certificate_number      String?
  notes                   String?
  metadata                Json?     @default("{}")
  created_at              DateTime  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime  @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_collectibles_authentication_product_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model collectibles_condition_reports {
  id                               String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  collectibles_product_id          String                @db.Uuid
  report_date                      DateTime              @db.Timestamptz(6)
  inspector_name                   String                @db.VarChar(255)
  inspector_credentials            String?
  inspection_type                  String?               @db.VarChar(50)
  overall_condition_grade          String                @db.VarChar(20)
  physical_condition_score         Int?
  structural_integrity             String?
  surface_condition                String?
  color_condition                  String?
  mechanical_condition             String?
  completeness_assessment          String?
  damage_assessment                String?
  previous_repairs                 String?
  restoration_history              String?
  conservation_needs               String?
  recommended_conservation_work    String?
  conservation_cost_estimate       Decimal?              @db.Decimal(20, 2)
  storage_requirements             String?
  environmental_requirements       String?
  handling_instructions            String?
  display_recommendations          String?
  insurance_considerations         String?
  impact_on_value                  String?
  comparison_to_previous_reports   String?
  deterioration_rate               String?               @db.VarChar(20)
  photos_taken                     Int?
  photo_urls                       String[]
  uv_light_examination_results     String?
  x_ray_examination_results        String?
  infrared_examination_results     String?
  scientific_analysis_results      Json?
  condition_report_url             String?
  is_suitable_for_sale             Boolean?              @default(true)
  is_suitable_for_display          Boolean?              @default(true)
  is_suitable_for_loan             Boolean?              @default(true)
  next_inspection_recommended_date DateTime?             @db.Timestamptz(6)
  notes                            String?
  created_at                       DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                       DateTime?             @default(now()) @db.Timestamptz(6)
  collectibles_products            collectibles_products @relation(fields: [collectibles_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([collectibles_product_id], map: "idx_collectibles_condition_reports_collectible")
  @@index([report_date], map: "idx_collectibles_condition_reports_date")
  @@index([overall_condition_grade], map: "idx_collectibles_condition_reports_grade")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_insurance_policies {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id      String    @db.Uuid
  policy_number   String?
  provider        String?
  annual_premium  Decimal   @db.Decimal
  coverage_amount Decimal   @db.Decimal
  deductible      Decimal?  @db.Decimal
  policy_type     String?
  start_date      DateTime? @db.Date
  end_date        DateTime? @db.Date
  metadata        Json?     @default("{}")
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime  @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_collectibles_insurance_product_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model collectibles_insurance_valuations {
  id                           String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  collectibles_product_id      String                @db.Uuid
  valuation_date               DateTime              @db.Timestamptz(6)
  valuation_purpose            String                @db.VarChar(50)
  insurance_provider           String?               @db.VarChar(255)
  policy_number                String?               @db.VarChar(100)
  insured_value                Decimal               @db.Decimal(20, 2)
  replacement_value            Decimal               @db.Decimal(20, 2)
  agreed_value                 Decimal?              @db.Decimal(20, 2)
  currency                     String?               @default("USD") @db.VarChar(3)
  valuation_basis              String?               @db.VarChar(50)
  annual_premium               Decimal?              @db.Decimal(20, 2)
  premium_rate                 Decimal?              @db.Decimal(5, 4)
  deductible                   Decimal?              @db.Decimal(20, 2)
  coverage_type                String?               @db.VarChar(50)
  coverage_territory           String?               @db.VarChar(100)
  storage_requirements         String?
  security_requirements        String?
  display_restrictions         String?
  transit_coverage             Boolean?              @default(false)
  exhibition_coverage          Boolean?              @default(false)
  restoration_coverage         Boolean?              @default(false)
  pair_and_set_clause          String?
  inflation_guard_percentage   Decimal?              @db.Decimal(5, 2)
  appraisal_required_frequency String?               @db.VarChar(20)
  last_appraisal_date          DateTime?             @db.Timestamptz(6)
  next_appraisal_due_date      DateTime?             @db.Timestamptz(6)
  claims_history               Json?
  risk_mitigation_measures     String?
  special_conditions           String?
  policy_effective_date        DateTime?             @db.Timestamptz(6)
  policy_expiration_date       DateTime?             @db.Timestamptz(6)
  status                       String?               @default("active") @db.VarChar(20)
  notes                        String?
  created_at                   DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?             @default(now()) @db.Timestamptz(6)
  collectibles_products        collectibles_products @relation(fields: [collectibles_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([collectibles_product_id], map: "idx_collectibles_insurance_valuations_collectible")
  @@index([valuation_date], map: "idx_collectibles_insurance_valuations_date")
  @@index([policy_number], map: "idx_collectibles_insurance_valuations_policy")
  @@index([status], map: "idx_collectibles_insurance_valuations_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model collectibles_market_comparables {
  id                          String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  collectibles_product_id     String                @db.Uuid
  comparable_item_description String
  artist_creator              String?               @db.VarChar(255)
  creation_date               String?               @db.VarChar(100)
  medium_type                 String?               @db.VarChar(100)
  dimensions                  String?               @db.VarChar(100)
  condition_grade             String?               @db.VarChar(20)
  sale_date                   DateTime              @db.Timestamptz(6)
  sale_price                  Decimal               @db.Decimal(20, 2)
  currency                    String?               @default("USD") @db.VarChar(3)
  sale_venue                  String?               @db.VarChar(100)
  sale_type                   String?               @db.VarChar(50)
  lot_number                  String?               @db.VarChar(50)
  estimate_low                Decimal?              @db.Decimal(20, 2)
  estimate_high               Decimal?              @db.Decimal(20, 2)
  hammer_price                Decimal?              @db.Decimal(20, 2)
  buyers_premium_percentage   Decimal?              @db.Decimal(5, 2)
  total_price_with_premium    Decimal?              @db.Decimal(20, 2)
  number_of_bidders           Int?
  provenance_quality          String?               @db.VarChar(20)
  exhibition_history_quality  String?               @db.VarChar(20)
  publication_history_quality String?               @db.VarChar(20)
  authenticity_status         String?               @db.VarChar(20)
  rarity_compared             String?               @db.VarChar(50)
  condition_compared          String?               @db.VarChar(50)
  similarity_score            Int?
  relevance_to_valuation      String?               @db.VarChar(20)
  adjustment_factors          Json?
  adjusted_comparable_value   Decimal?              @db.Decimal(20, 2)
  data_source                 String?               @db.VarChar(100)
  catalog_reference           String?               @db.VarChar(100)
  catalog_url                 String?
  image_url                   String?
  notes                       String?
  created_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  collectibles_products       collectibles_products @relation(fields: [collectibles_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([collectibles_product_id], map: "idx_collectibles_market_comparables_collectible")
  @@index([sale_date], map: "idx_collectibles_market_comparables_date")
  @@index([similarity_score], map: "idx_collectibles_market_comparables_similarity")
  @@index([sale_venue], map: "idx_collectibles_market_comparables_venue")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_market_metrics {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type       String   @unique
  estimated_value  Decimal  @db.Decimal
  trend            Decimal  @db.Decimal
  liquidity        Decimal  @db.Decimal
  volatility       Decimal  @db.Decimal
  seasonality      Decimal  @db.Decimal
  demand           Decimal  @db.Decimal
  supply           Decimal  @db.Decimal
  investment_grade Decimal  @db.Decimal
  last_updated     DateTime @default(now()) @db.Timestamptz(6)
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  updated_at       DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model collectibles_products {
  id                                String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                        String                              @unique @db.Uuid
  asset_id                          String?                             @db.VarChar(50)
  asset_type                        String?                             @db.VarChar(100)
  description                       String?
  acquisition_date                  DateTime?                           @db.Timestamptz(6)
  purchase_price                    Decimal?                            @db.Decimal
  current_value                     Decimal?                            @db.Decimal
  condition                         String?                             @db.VarChar(50)
  location                          String?
  owner                             String?
  insurance_details                 Decimal?                            @db.Decimal
  appraisal_date                    DateTime?                           @db.Timestamptz(6)
  sale_date                         DateTime?                           @db.Timestamptz(6)
  sale_price                        Decimal?                            @db.Decimal
  status                            String?                             @db.VarChar(50)
  target_raise                      Decimal?                            @db.Decimal
  created_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  collectibles_appraisals           collectibles_appraisals[]
  collectibles_condition_reports    collectibles_condition_reports[]
  collectibles_insurance_valuations collectibles_insurance_valuations[]
  collectibles_market_comparables   collectibles_market_comparables[]
  projects                          projects                            @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_collectibles_products_project")
  collectibles_provenance           collectibles_provenance[]

  @@index([asset_id], map: "idx_collectibles_products_asset_id")
  @@index([project_id], map: "idx_collectibles_products_project_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model collectibles_provenance {
  id                          String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  collectibles_product_id     String                @db.Uuid
  sequence_number             Int
  ownership_period_start      DateTime?             @db.Timestamptz(6)
  ownership_period_end        DateTime?             @db.Timestamptz(6)
  owner_name                  String?               @db.VarChar(255)
  owner_type                  String?               @db.VarChar(50)
  acquisition_method          String?               @db.VarChar(100)
  acquisition_date            DateTime?             @db.Timestamptz(6)
  acquisition_price           Decimal?              @db.Decimal(20, 2)
  acquisition_currency        String?               @db.VarChar(3)
  acquisition_source          String?               @db.VarChar(255)
  sale_method                 String?               @db.VarChar(100)
  sale_date                   DateTime?             @db.Timestamptz(6)
  sale_price                  Decimal?              @db.Decimal(20, 2)
  sale_currency               String?               @db.VarChar(3)
  buyer_name                  String?               @db.VarChar(255)
  exhibition_history          Json?
  publication_history         Json?
  restoration_events          Json?
  documentation_type          String?               @db.VarChar(50)
  documentation_url           String?
  is_gap_in_provenance        Boolean?              @default(false)
  gap_explanation             String?
  authenticity_concerns       String?
  legal_disputes              String?
  export_import_documentation String?
  cultural_property_status    String?               @db.VarChar(50)
  verification_status         String?               @default("verified") @db.VarChar(20)
  verified_by                 String?               @db.VarChar(255)
  verification_date           DateTime?             @db.Timestamptz(6)
  notes                       String?
  created_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?             @default(now()) @db.Timestamptz(6)
  collectibles_products       collectibles_products @relation(fields: [collectibles_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([collectibles_product_id], map: "idx_collectibles_provenance_collectible")
  @@index([ownership_period_start, ownership_period_end], map: "idx_collectibles_provenance_dates")
  @@index([sequence_number], map: "idx_collectibles_provenance_sequence")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_provenance_records {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id            String    @db.Uuid
  completeness_score    Decimal   @db.Decimal
  documentation_quality Decimal   @db.Decimal
  ownership_history     Json?     @default("[]")
  gaps                  String[]
  earliest_record_date  DateTime? @db.Date
  verification_status   String?
  notes                 String?
  metadata              Json?     @default("{}")
  created_at            DateTime  @default(now()) @db.Timestamptz(6)
  updated_at            DateTime  @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_collectibles_provenance_product_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_rarity_scores {
  id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id             String   @db.Uuid
  rarity_score           Decimal  @db.Decimal
  production_quantity    Int?
  surviving_quantity     Int?
  grade_level            String?
  unique_characteristics String[]
  comparable_count       Int?
  scarcity_factor        Decimal? @db.Decimal
  assessment_date        DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  notes                  String?
  metadata               Json?    @default("{}")
  created_at             DateTime @default(now()) @db.Timestamptz(6)
  updated_at             DateTime @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_collectibles_rarity_product_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_risk_assessments {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id        String   @db.Uuid
  authenticity_risk Decimal  @db.Decimal
  damage_risk       Decimal  @db.Decimal
  theft_risk        Decimal  @db.Decimal
  storage_risk      Decimal  @db.Decimal
  legal_risk        Decimal  @db.Decimal
  market_risk       Decimal? @db.Decimal
  liquidity_risk    Decimal? @db.Decimal
  assessment_date   DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  assessor          String?
  notes             String?
  metadata          Json?    @default("{}")
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_collectibles_risk_product_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model collectibles_storage_facilities {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id         String   @db.Uuid
  facility_name      String?
  location           String?
  monthly_cost       Decimal  @db.Decimal
  annual_cost        Decimal  @db.Decimal
  storage_conditions String?
  security_level     String?
  insurance_included Boolean? @default(false)
  metadata           Json?    @default("{}")
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  updated_at         DateTime @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_collectibles_storage_product_id")
  @@schema("public")
}

model commodities_products {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                  String    @unique @db.Uuid
  commodity_id                String?   @db.VarChar(20)
  commodity_name              String?
  commodity_type              String?   @db.VarChar(50)
  unit_of_measure             String?   @db.VarChar(50)
  contract_size               Decimal?  @db.Decimal
  grade_quality               String?
  exchange                    String?   @db.VarChar(50)
  delivery_months             String[]
  liquidity_metric            Decimal?  @db.Decimal
  currency                    String?   @db.VarChar(10)
  contract_issue_date         DateTime? @db.Timestamptz(6)
  expiration_date             DateTime? @db.Timestamptz(6)
  status                      String?   @db.VarChar(50)
  roll_history                Json?
  storage_delivery_costs      Decimal?  @db.Decimal
  production_inventory_levels Json?
  target_raise                Decimal?  @db.Decimal
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)
  projects                    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_commodities_products_project")

  @@index([commodity_id], map: "idx_commodities_products_commodity_id")
  @@index([project_id], map: "idx_commodities_products_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commodity_handling_costs {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  commodity_type  String
  unit_of_measure String
  cost_per_unit   Decimal   @db.Decimal
  handling_type   String?
  location        String?
  currency        String    @default("USD")
  effective_date  DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiration_date DateTime? @db.Date
  notes           String?
  metadata        Json?     @default("{}")
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime  @default(now()) @db.Timestamptz(6)

  @@index([commodity_type], map: "idx_commodity_handling_commodity")
  @@index([unit_of_measure], map: "idx_commodity_handling_unit")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commodity_implied_volatility {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  instrument_key      String
  volatility          Decimal  @db.Decimal
  maturity_months     Int?
  calculation_method  String?
  confidence_interval Decimal? @db.Decimal
  calculation_date    DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  data_source         String?
  metadata            Json?    @default("{}")
  created_at          DateTime @default(now()) @db.Timestamptz(6)
  updated_at          DateTime @default(now()) @db.Timestamptz(6)

  @@index([calculation_date(sort: Desc)], map: "idx_commodity_volatility_date")
  @@index([instrument_key], map: "idx_commodity_volatility_instrument")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commodity_insurance_rates {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  commodity_type        String
  annual_rate           Decimal   @db.Decimal
  coverage_type         String?
  minimum_coverage      Decimal?  @db.Decimal
  maximum_coverage      Decimal?  @db.Decimal
  deductible_percentage Decimal?  @db.Decimal
  geographic_scope      String?
  risk_factors          Json?     @default("{}")
  effective_date        DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiration_date       DateTime? @db.Date
  provider              String?
  metadata              Json?     @default("{}")
  created_at            DateTime  @default(now()) @db.Timestamptz(6)
  updated_at            DateTime  @default(now()) @db.Timestamptz(6)

  @@index([commodity_type], map: "idx_commodity_insurance_commodity")
  @@schema("public")
}

model commodity_market_data {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  instrument_key String
  open_interest  Int      @default(0)
  volume         Int      @default(0)
  vwap           Decimal? @db.Decimal
  high           Decimal? @db.Decimal
  low            Decimal? @db.Decimal
  close          Decimal? @db.Decimal
  settlement     Decimal? @db.Decimal
  market_date    DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  exchange       String?
  metadata       Json?    @default("{}")
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  updated_at     DateTime @default(now()) @db.Timestamptz(6)

  @@index([market_date(sort: Desc)], map: "idx_commodity_market_data_date")
  @@index([instrument_key], map: "idx_commodity_market_data_instrument")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commodity_quality_multipliers {
  id                         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  commodity_type             String
  grade                      String
  multiplier                 Decimal   @db.Decimal
  grade_specification        String?
  applicable_standards       String[]
  typical_price_differential Decimal?  @db.Decimal
  effective_date             DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiration_date            DateTime? @db.Date
  certifying_body            String?
  notes                      String?
  metadata                   Json?     @default("{}")
  created_at                 DateTime  @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime  @default(now()) @db.Timestamptz(6)

  @@index([commodity_type], map: "idx_commodity_quality_commodity")
  @@index([grade], map: "idx_commodity_quality_grade")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model commodity_storage_rates {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  commodity_type   String
  storage_location String?
  annual_rate      Decimal   @db.Decimal
  monthly_rate     Decimal?  @db.Decimal
  daily_rate       Decimal?  @db.Decimal
  unit_of_measure  String?
  facility_type    String?
  minimum_quantity Decimal?  @db.Decimal
  currency         String    @default("USD")
  effective_date   DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  expiration_date  DateTime? @db.Date
  metadata         Json?     @default("{}")
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)

  @@index([commodity_type], map: "idx_commodity_storage_commodity")
  @@index([storage_location], map: "idx_commodity_storage_location")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model compliance_alerts {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type            String
  severity        String
  message         String
  details         Json?
  timestamp       DateTime  @db.Timestamptz(6)
  acknowledged    Boolean?  @default(false)
  acknowledged_by String?   @db.Uuid
  acknowledged_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model compliance_audit_logs {
  id                 String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id       String?           @db.Uuid
  operation_type     String
  operator           String
  compliance_status  Json
  violations         Json[]
  audit_trail        Json
  regulatory_flags   Json[]
  reporting_required Boolean?          @default(false)
  integrity_hash     String
  created_at         DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations   token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_audit_logs_created")
  @@index([operation_id], map: "idx_audit_logs_operation")
  @@schema("public")
}

model compliance_metrics {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  metric_date          DateTime  @unique @db.Date
  total_operations     Int?      @default(0)
  compliant_operations Int?      @default(0)
  partial_compliance   Int?      @default(0)
  non_compliant        Int?      @default(0)
  violations_count     Int?      @default(0)
  reports_generated    Int?      @default(0)
  avg_compliance_score Decimal?  @db.Decimal
  created_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([metric_date], map: "idx_metrics_date")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model compliance_violations {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  violation_id     String            @unique
  operation_id     String?           @db.Uuid
  type             String
  severity         String
  description      String?
  remediation      String?
  resolved         Boolean?          @default(false)
  resolved_at      DateTime?         @db.Timestamptz(6)
  resolved_by      String?           @db.Uuid
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            public_users?     @relation(fields: [resolved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation_id], map: "idx_compliance_violations_operation")
  @@schema("public")
}

model contract_master_versions {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contract_type      String
  version            String
  abi                Json      @db.Json
  bytecode           String
  changes            String?
  breaking_changes   Boolean?  @default(false)
  migration_required Boolean?  @default(false)
  migration_guide    String?
  deployed_at        DateTime? @default(now()) @db.Timestamptz(6)
  deprecated_at      DateTime? @db.Timestamptz(6)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([contract_type, version])
  @@index([contract_type], map: "idx_contract_versions_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model contract_masters {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  network            String
  environment        String
  contract_type      String
  contract_address   String
  version            String        @default("1.0.0")
  abi_version        String        @default("1.0.0")
  abi                Json          @db.Json
  abi_hash           String?
  deployed_at        DateTime?     @default(now()) @db.Timestamptz(6)
  deployed_by        String?       @db.Uuid
  deployment_tx_hash String?
  is_active          Boolean?      @default(true)
  deprecated_at      DateTime?     @db.Timestamptz(6)
  deployment_data    Json?         @default("{}")
  created_at         DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?     @default(now()) @db.Timestamptz(6)
  contract_details   Json?
  initial_owner      String?
  users              public_users? @relation(fields: [deployed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([network, environment, contract_type, version])
  @@index([contract_address], map: "idx_contract_masters_address")
  @@index([contract_type, is_active], map: "idx_contract_masters_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model corporate_actions {
  id                            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  equity_product_id             String          @db.Uuid
  ticker_symbol                 String          @db.VarChar(20)
  action_type                   String          @db.VarChar(50)
  effective_date                DateTime        @db.Timestamptz(6)
  announcement_date             DateTime?       @db.Timestamptz(6)
  ex_date                       DateTime?       @db.Timestamptz(6)
  record_date                   DateTime?       @db.Timestamptz(6)
  ratio_from                    Int?
  ratio_to                      Int?
  exchange_ratio                Decimal?        @db.Decimal(20, 6)
  acquiring_company             String?         @db.VarChar(255)
  target_company                String?         @db.VarChar(255)
  new_ticker_symbol             String?         @db.VarChar(20)
  cash_consideration            Decimal?        @db.Decimal(20, 2)
  stock_consideration           Decimal?        @db.Decimal(20, 6)
  description                   String?
  impact_on_holdings            Json?
  status                        String?         @default("announced") @db.VarChar(20)
  regulatory_approvals_required Boolean?        @default(false)
  created_at                    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?       @default(now()) @db.Timestamptz(6)
  equity_products               equity_products @relation(fields: [equity_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([effective_date], map: "idx_corporate_actions_effective_date")
  @@index([equity_product_id], map: "idx_corporate_actions_equity_product")
  @@index([ticker_symbol], map: "idx_corporate_actions_ticker")
  @@index([action_type], map: "idx_corporate_actions_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model critical_alerts {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                  String
  severity              String?   @default("critical")
  message               String
  details               Json?
  timestamp             DateTime  @db.Timestamptz(6)
  escalated             Boolean?  @default(false)
  escalation_level      Int?      @default(0)
  notification_channels String[]
  acknowledged          Boolean?  @default(false)
  acknowledged_by       String?   @db.Uuid
  acknowledged_at       DateTime? @db.Timestamptz(6)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([escalated, escalation_level], map: "idx_critical_alerts_escalated")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model dashboard_updates {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id      String?   @db.Uuid
  compliance_status Json?
  violations        Int?
  timestamp         DateTime? @db.Timestamptz(6)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model data_source_mappings {
  mapping_id                String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  source_id                 String?                    @db.Uuid
  source_field              String                     @db.VarChar(255)
  target_field              String                     @db.VarChar(255)
  data_transform            String?                    @default("")
  validation_rules          Json?                      @default("{}")
  created_at                DateTime?                  @default(now()) @db.Timestamptz(6)
  climate_user_data_sources climate_user_data_sources? @relation(fields: [source_id], references: [source_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([source_id], map: "idx_data_source_mappings_source")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_policy_approval_decisions {
  id                    String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  approval_id           String?                @db.Uuid
  dfns_approval_id      String
  user_id               String
  decision_value        String
  reason                String?
  date_actioned         DateTime?              @default(now()) @db.Timestamptz(6)
  organization_id       String?
  created_at            DateTime?              @default(now()) @db.Timestamptz(6)
  dfns_policy_approvals dfns_policy_approvals? @relation(fields: [approval_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([approval_id], map: "idx_dfns_policy_approval_decisions_approval")
  @@index([dfns_approval_id], map: "idx_dfns_policy_approval_decisions_dfns_approval")
  @@index([user_id], map: "idx_dfns_policy_approval_decisions_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_policy_approval_groups {
  id             String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  policy_id      String?        @db.Uuid
  dfns_policy_id String
  group_name     String?
  quorum         Int            @default(1)
  approvers      Json
  created_at     DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?      @default(now()) @db.Timestamptz(6)
  dfns_policies  dfns_policies? @relation(fields: [policy_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([dfns_policy_id], map: "idx_dfns_policy_approval_groups_dfns_policy")
  @@index([policy_id], map: "idx_dfns_policy_approval_groups_policy")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_policy_change_requests {
  id                     String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  dfns_change_request_id String    @unique
  kind                   String    @default("Policy")
  operation_kind         String
  status                 String    @default("Pending")
  requester_user_id      String
  entity_id              String
  dfns_approval_id       String?
  request_body           Json
  organization_id        String?
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)

  @@index([dfns_change_request_id], map: "idx_dfns_policy_change_requests_dfns_id")
  @@index([entity_id], map: "idx_dfns_policy_change_requests_entity")
  @@index([status], map: "idx_dfns_policy_change_requests_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dfns_policy_evaluations {
  id                   String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  dfns_policy_id       String
  activity_id          String
  trigger_status       String
  reason               String?
  evaluation_timestamp DateTime? @default(now()) @db.Timestamptz(6)
  activity_kind        String
  activity_details     Json?
  organization_id      String?
  created_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([activity_id], map: "idx_dfns_policy_evaluations_activity")
  @@index([dfns_policy_id], map: "idx_dfns_policy_evaluations_policy")
  @@index([evaluation_timestamp], map: "idx_dfns_policy_evaluations_timestamp")
  @@index([trigger_status], map: "idx_dfns_policy_evaluations_trigger_status")
  @@schema("public")
}

model digital_tokenised_funds {
  id                         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                 String    @unique @db.Uuid
  asset_name                 String?   @db.VarChar(255)
  asset_symbol               String?   @db.VarChar(50)
  asset_type                 String?   @db.VarChar(100)
  issuer                     String?   @db.VarChar(255)
  blockchain_network         String?   @db.VarChar(100)
  smart_contract_address     String?   @db.VarChar(255)
  issuance_date              DateTime? @db.Timestamptz(6)
  total_supply               Decimal?  @db.Decimal(18, 8)
  circulating_supply         Decimal?  @db.Decimal(18, 8)
  peg_value                  Decimal?  @db.Decimal(10, 4)
  nav                        Decimal?  @db.Decimal(18, 8)
  fractionalization_enabled  Boolean?  @default(true)
  management_fee             Decimal?  @db.Decimal(5, 2)
  performance_fee            Decimal?  @db.Decimal(5, 2)
  redemption_terms           String?
  compliance_rules           String?
  permission_controls        String?
  embedded_rights            String?
  provenance_history_enabled Boolean?  @default(true)
  status                     String?   @db.VarChar(50)
  target_raise               Decimal?  @db.Decimal
  created_at                 DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime? @default(now()) @db.Timestamptz(6)
  projects                   projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_digital_tokenised_funds_project")

  @@index([asset_symbol], map: "idx_digital_tokenised_funds_asset_symbol")
  @@schema("public")
}

model digital_tokenized_fund_products {
  id                         String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                 String                    @unique @db.Uuid
  asset_name                 String?                   @db.VarChar
  asset_symbol               String?                   @db.VarChar
  asset_type                 String?                   @db.VarChar
  issuer                     String?                   @db.VarChar
  blockchain_network         String?                   @db.VarChar
  smart_contract_address     String?                   @db.VarChar
  issuance_date              DateTime?                 @db.Timestamptz(6)
  total_supply               Decimal?                  @db.Decimal
  circulating_supply         Decimal?                  @db.Decimal
  nav                        Decimal?                  @db.Decimal
  fractionalization_enabled  Boolean?
  compliance_rules           String?
  permission_controls        String?
  embedded_rights            String?
  provenance_history_enabled Boolean?
  status                     String?                   @db.VarChar
  target_raise               Decimal?                  @db.Decimal
  token_economics            String?                   @db.VarChar
  custody_arrangements       String?                   @db.VarChar
  upgrade_governance         String?                   @db.VarChar
  created_at                 DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                 @default(now()) @db.Timestamptz(6)
  projects                   projects                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  dtf_blockchain_events      dtf_blockchain_events[]
  dtf_minting_history        dtf_minting_history[]
  dtf_nav_snapshots          dtf_nav_snapshots[]
  dtf_redemption_requests    dtf_redemption_requests[]
  dtf_token_metadata         dtf_token_metadata[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dtf_blockchain_events {
  id                                String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  digital_tokenized_fund_product_id String                          @db.Uuid
  dtf_token_metadata_id             String                          @db.Uuid
  event_timestamp                   DateTime                        @db.Timestamptz(6)
  transaction_hash                  String                          @db.VarChar(255)
  block_number                      Int
  block_timestamp                   DateTime                        @db.Timestamptz(6)
  event_type                        String                          @db.VarChar(50)
  event_name                        String?                         @db.VarChar(100)
  from_address                      String?                         @db.VarChar(255)
  to_address                        String?                         @db.VarChar(255)
  value                             Decimal?                        @db.Decimal(30, 8)
  token_id                          String?                         @db.VarChar(100)
  event_data                        Json?
  log_index                         Int?
  transaction_index                 Int?
  gas_used                          Int?
  gas_price_gwei                    Decimal?                        @db.Decimal(10, 2)
  gas_cost                          Decimal?                        @db.Decimal(20, 8)
  status                            String?                         @default("confirmed") @db.VarChar(20)
  is_internal_transaction           Boolean?                        @default(false)
  contract_method_called            String?                         @db.VarChar(100)
  input_data                        String?
  error_message                     String?
  decoded_event_data                Json?
  related_events                    Json?
  compliance_checked                Boolean?                        @default(false)
  compliance_status                 String?                         @db.VarChar(20)
  risk_score                        Int?
  aml_screening_result              String?                         @db.VarChar(20)
  sanctioned_address                Boolean?                        @default(false)
  event_category                    String?                         @db.VarChar(50)
  is_suspicious                     Boolean?                        @default(false)
  investigation_required            Boolean?                        @default(false)
  notes                             String?
  created_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  digital_tokenized_fund_products   digital_tokenized_fund_products @relation(fields: [digital_tokenized_fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dtf_token_metadata                dtf_token_metadata              @relation(fields: [dtf_token_metadata_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([digital_tokenized_fund_product_id], map: "idx_dtf_blockchain_events_dtf_product")
  @@index([from_address], map: "idx_dtf_blockchain_events_from")
  @@index([event_timestamp], map: "idx_dtf_blockchain_events_timestamp")
  @@index([to_address], map: "idx_dtf_blockchain_events_to")
  @@index([dtf_token_metadata_id], map: "idx_dtf_blockchain_events_token")
  @@index([transaction_hash], map: "idx_dtf_blockchain_events_tx_hash")
  @@index([event_type], map: "idx_dtf_blockchain_events_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dtf_minting_history {
  id                                String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  digital_tokenized_fund_product_id String                          @db.Uuid
  dtf_token_metadata_id             String                          @db.Uuid
  mint_timestamp                    DateTime                        @db.Timestamptz(6)
  transaction_hash                  String                          @unique @db.VarChar(255)
  block_number                      Int
  recipient_address                 String                          @db.VarChar(255)
  amount_minted                     Decimal                         @db.Decimal(30, 8)
  mint_price                        Decimal?                        @db.Decimal(20, 8)
  total_value                       Decimal?                        @db.Decimal(20, 2)
  currency                          String?                         @default("USD") @db.VarChar(3)
  payment_method                    String?                         @db.VarChar(50)
  payment_currency                  String?                         @db.VarChar(10)
  payment_amount                    Decimal?                        @db.Decimal(20, 2)
  payment_tx_hash                   String?                         @db.VarChar(255)
  subscription_agreement_signed     Boolean?                        @default(true)
  kyc_aml_completed                 Boolean?                        @default(true)
  accredited_investor_verified      Boolean?                        @default(true)
  minting_reason                    String?                         @db.VarChar(100)
  associated_assets                 Json?
  nav_at_mint                       Decimal?                        @db.Decimal(20, 8)
  gas_used                          Int?
  gas_price_gwei                    Decimal?                        @db.Decimal(10, 2)
  gas_cost                          Decimal?                        @db.Decimal(20, 8)
  issuer_address                    String?                         @db.VarChar(255)
  custody_arrangement               String?
  lock_up_period_months             Int?
  lock_up_end_date                  DateTime?                       @db.Timestamptz(6)
  vesting_schedule                  Json?
  regulatory_filing_reference       String?                         @db.VarChar(100)
  notes                             String?
  created_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  digital_tokenized_fund_products   digital_tokenized_fund_products @relation(fields: [digital_tokenized_fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dtf_token_metadata                dtf_token_metadata              @relation(fields: [dtf_token_metadata_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([digital_tokenized_fund_product_id], map: "idx_dtf_minting_history_dtf_product")
  @@index([recipient_address], map: "idx_dtf_minting_history_recipient")
  @@index([mint_timestamp], map: "idx_dtf_minting_history_timestamp")
  @@index([dtf_token_metadata_id], map: "idx_dtf_minting_history_token")
  @@index([transaction_hash], map: "idx_dtf_minting_history_tx_hash")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dtf_nav_snapshots {
  id                                String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  digital_tokenized_fund_product_id String                          @db.Uuid
  dtf_token_metadata_id             String                          @db.Uuid
  snapshot_timestamp                DateTime                        @db.Timestamptz(6)
  valuation_date                    DateTime                        @db.Timestamptz(6)
  total_fund_nav                    Decimal                         @db.Decimal(20, 2)
  nav_per_token                     Decimal                         @db.Decimal(20, 8)
  currency                          String?                         @default("USD") @db.VarChar(3)
  tokens_outstanding                Decimal                         @db.Decimal(30, 8)
  total_assets                      Decimal                         @db.Decimal(20, 2)
  total_liabilities                 Decimal                         @db.Decimal(20, 2)
  net_assets                        Decimal                         @db.Decimal(20, 2)
  asset_breakdown                   Json?
  published_on_chain                Boolean?                        @default(false)
  oracle_transaction_hash           String?                         @db.VarChar(255)
  oracle_block_number               Int?
  oracle_gas_cost                   Decimal?                        @db.Decimal(20, 8)
  data_hash                         String?                         @db.VarChar(255)
  attestation_signature             String?                         @db.VarChar(500)
  administrator_name                String?                         @db.VarChar(255)
  auditor_verification              Boolean?                        @default(false)
  auditor_name                      String?                         @db.VarChar(255)
  price_change_from_previous        Decimal?                        @db.Decimal(5, 2)
  daily_return                      Decimal?                        @db.Decimal(5, 4)
  inception_to_date_return          Decimal?                        @db.Decimal(5, 2)
  benchmark_nav                     Decimal?                        @db.Decimal(20, 8)
  benchmark_index                   String?                         @db.VarChar(50)
  tracking_difference               Decimal?                        @db.Decimal(5, 4)
  discount_premium_to_market        Decimal?                        @db.Decimal(5, 2)
  trading_volume_24h                Decimal?                        @db.Decimal(20, 2)
  number_of_transactions_24h        Int?
  methodology_reference             String?
  calculation_inputs                Json?
  is_final                          Boolean?                        @default(true)
  revision_number                   Int?                            @default(1)
  previous_snapshot_id              String?                         @db.Uuid
  notes                             String?
  created_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  digital_tokenized_fund_products   digital_tokenized_fund_products @relation(fields: [digital_tokenized_fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dtf_token_metadata                dtf_token_metadata              @relation(fields: [dtf_token_metadata_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([digital_tokenized_fund_product_id], map: "idx_dtf_nav_snapshots_dtf_product")
  @@index([snapshot_timestamp], map: "idx_dtf_nav_snapshots_timestamp")
  @@index([dtf_token_metadata_id], map: "idx_dtf_nav_snapshots_token")
  @@index([valuation_date], map: "idx_dtf_nav_snapshots_valuation_date")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dtf_redemption_requests {
  id                                String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  digital_tokenized_fund_product_id String                          @db.Uuid
  dtf_token_metadata_id             String                          @db.Uuid
  request_id                        String                          @unique @db.VarChar(100)
  request_timestamp                 DateTime                        @db.Timestamptz(6)
  requester_address                 String                          @db.VarChar(255)
  amount_requested                  Decimal                         @db.Decimal(30, 8)
  redemption_nav                    Decimal?                        @db.Decimal(20, 8)
  redemption_value                  Decimal?                        @db.Decimal(20, 2)
  currency                          String?                         @default("USD") @db.VarChar(3)
  redemption_fee                    Decimal?                        @db.Decimal(20, 2)
  fee_percentage                    Decimal?                        @db.Decimal(5, 2)
  net_redemption_value              Decimal?                        @db.Decimal(20, 2)
  redemption_method                 String?                         @db.VarChar(50)
  settlement_currency               String?                         @db.VarChar(10)
  settlement_address                String?                         @db.VarChar(255)
  notice_period_days                Int?
  earliest_settlement_date          DateTime?                       @db.Timestamptz(6)
  actual_settlement_date            DateTime?                       @db.Timestamptz(6)
  lock_up_check                     Boolean?
  is_lock_up_compliant              Boolean?                        @default(true)
  minimum_redemption_check          Boolean?
  is_minimum_met                    Boolean?                        @default(true)
  liquidity_gate_check              Boolean?
  is_within_gate_limits             Boolean?                        @default(true)
  pro_rata_redemption               Boolean?                        @default(false)
  processing_time_business_days     Int?
  burn_transaction_hash             String?                         @db.VarChar(255)
  burn_block_number                 Int?
  burn_timestamp                    DateTime?                       @db.Timestamptz(6)
  amount_burned                     Decimal?                        @db.Decimal(30, 8)
  assets_liquidated                 Json?
  liquidation_costs                 Decimal?                        @db.Decimal(20, 2)
  market_impact                     Decimal?                        @db.Decimal(20, 2)
  redemption_settlement_tx_hash     String?                         @db.VarChar(255)
  status                            String?                         @default("pending") @db.VarChar(20)
  failure_reason                    String?
  gate_reason                       String?
  deferred_to_date                  DateTime?                       @db.Timestamptz(6)
  regulatory_reporting_required     Boolean?                        @default(true)
  tax_reporting_generated           Boolean?                        @default(false)
  notes                             String?
  created_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  digital_tokenized_fund_products   digital_tokenized_fund_products @relation(fields: [digital_tokenized_fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dtf_token_metadata                dtf_token_metadata              @relation(fields: [dtf_token_metadata_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([digital_tokenized_fund_product_id], map: "idx_dtf_redemption_requests_dtf_product")
  @@index([request_id], map: "idx_dtf_redemption_requests_id")
  @@index([requester_address], map: "idx_dtf_redemption_requests_requester")
  @@index([status], map: "idx_dtf_redemption_requests_status")
  @@index([request_timestamp], map: "idx_dtf_redemption_requests_timestamp")
  @@index([dtf_token_metadata_id], map: "idx_dtf_redemption_requests_token")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dtf_token_metadata {
  id                                String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  digital_tokenized_fund_product_id String                          @db.Uuid
  token_name                        String                          @db.VarChar(100)
  token_symbol                      String                          @db.VarChar(20)
  token_standard                    String                          @db.VarChar(20)
  blockchain_network                String                          @db.VarChar(50)
  chain_id                          Int?
  contract_address                  String                          @unique @db.VarChar(255)
  contract_deployment_date          DateTime                        @db.Timestamptz(6)
  contract_deployment_tx_hash       String?                         @db.VarChar(255)
  deployer_address                  String?                         @db.VarChar(255)
  total_supply                      Decimal                         @db.Decimal(30, 8)
  max_supply                        Decimal?                        @db.Decimal(30, 8)
  circulating_supply                Decimal?                        @db.Decimal(30, 8)
  decimals                          Int?                            @default(18)
  is_mintable                       Boolean?                        @default(false)
  is_burnable                       Boolean?                        @default(false)
  is_pausable                       Boolean?                        @default(false)
  is_upgradeable                    Boolean?                        @default(false)
  proxy_contract_address            String?                         @db.VarChar(255)
  implementation_contract_address   String?                         @db.VarChar(255)
  token_price                       Decimal?                        @db.Decimal(20, 8)
  token_nav                         Decimal?                        @db.Decimal(20, 8)
  currency                          String?                         @default("USD") @db.VarChar(3)
  price_premium_discount            Decimal?                        @db.Decimal(5, 2)
  market_capitalization             Decimal?                        @db.Decimal(20, 2)
  fully_diluted_valuation           Decimal?                        @db.Decimal(20, 2)
  number_of_holders                 Int?
  unique_wallet_count               Int?
  transfer_restrictions             Json?
  compliance_modules                Json?
  dividend_distribution_mechanism   String?
  voting_rights                     Boolean?                        @default(false)
  governance_token                  Boolean?                        @default(false)
  utility_features                  String?
  redemption_mechanism              String?
  oracle_price_feed                 String?                         @db.VarChar(255)
  audit_reports                     String[]
  verified_on_etherscan             Boolean?                        @default(false)
  etherscan_url                     String?
  metadata_uri                      String?
  whitepaper_url                    String?
  regulatory_framework              String?
  securities_classification         String?                         @db.VarChar(50)
  issuer_info                       Json?
  notes                             String?
  created_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime?                       @default(now()) @db.Timestamptz(6)
  dtf_blockchain_events             dtf_blockchain_events[]
  dtf_minting_history               dtf_minting_history[]
  dtf_nav_snapshots                 dtf_nav_snapshots[]
  dtf_redemption_requests           dtf_redemption_requests[]
  digital_tokenized_fund_products   digital_tokenized_fund_products @relation(fields: [digital_tokenized_fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([contract_address], map: "idx_dtf_token_metadata_contract")
  @@index([digital_tokenized_fund_product_id], map: "idx_dtf_token_metadata_dtf_product")
  @@index([blockchain_network], map: "idx_dtf_token_metadata_network")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model energy_assets {
  asset_id                        String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                            String                       @db.VarChar(255)
  type                            String                       @db.VarChar(50)
  location                        String                       @db.VarChar(255)
  capacity                        Decimal                      @db.Decimal(10, 2)
  owner_id                        String?                      @db.Uuid
  created_at                      DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?                    @default(now()) @db.Timestamptz(6)
  lcoe_calculated                 Decimal?                     @db.Decimal(10, 4)
  lcoe_industry_benchmark         Decimal?                     @db.Decimal(10, 4)
  lcoe_competitiveness_ratio      Decimal?                     @db.Decimal(6, 4)
  lcoe_last_calculated            DateTime?                    @db.Timestamptz(6)
  capacity_factor_actual          Decimal?                     @db.Decimal(6, 4)
  capacity_factor_theoretical     Decimal?                     @db.Decimal(6, 4)
  capacity_factor_industry_avg    Decimal?                     @db.Decimal(6, 4)
  capacity_factor_percentile      Int?
  capacity_factor_last_calculated DateTime?                    @db.Timestamptz(6)
  project_id                      String?                      @db.Uuid
  geolocation_details             Json?
  climate_incentives              climate_incentives[]
  climate_nav_calculations        climate_nav_calculations[]
  climate_policy_impacts          climate_policy_impacts[]
  climate_pool_energy_assets      climate_pool_energy_assets[]
  climate_receivables             climate_receivables[]
  users                           public_users?                @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  production_data                 production_data[]
  renewable_energy_credits        renewable_energy_credits[]

  @@unique([name, type, location, capacity], map: "unique_energy_asset_combination")
  @@index([capacity_factor_actual], map: "idx_energy_assets_capacity_factor")
  @@index([lcoe_competitiveness_ratio], map: "idx_energy_assets_competitiveness")
  @@index([name, type, location, capacity], map: "idx_energy_assets_duplicate_check")
  @@index([lcoe_calculated], map: "idx_energy_assets_lcoe_calculated")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model energy_futures_contracts {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  commodity      String
  contract_month Int
  price          Decimal   @db.Decimal
  contract_date  DateTime  @db.Date
  exchange       String?
  volume         Decimal?  @db.Decimal
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([commodity, contract_month, contract_date])
  @@index([commodity], map: "idx_energy_futures_commodity")
  @@index([contract_month], map: "idx_energy_futures_contract_month")
  @@schema("public")
}

model energy_products {
  id                        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                String    @unique @db.Uuid
  project_identifier        String?   @db.VarChar(50)
  project_name              String?
  project_type              String?   @db.VarChar(100)
  capacity                  Decimal?  @db.Decimal
  project_status            String?   @db.VarChar(50)
  site_id                   String?   @db.VarChar(50)
  site_location             String?
  owner                     String?
  electricity_purchaser     String?
  land_type                 String?   @db.VarChar(100)
  expected_online_date      DateTime? @db.Timestamptz(6)
  financial_data            Json?
  regulatory_compliance     String?
  timeline_data             Json?
  field_service_logs        String?
  performance_metrics       Json?
  receivable_amount         Decimal?  @db.Decimal
  decommission_date         DateTime? @db.Timestamptz(6)
  project_capacity_mw       Decimal?  @db.Decimal
  power_purchase_agreements String?
  regulatory_approvals      String[]
  carbon_offset_potential   Decimal?  @db.Decimal
  status                    String?   @db.VarChar(50)
  target_raise              Decimal?  @db.Decimal
  created_at                DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)
  projects                  projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_energy_products_project")

  @@index([project_id], map: "idx_energy_products_project_id")
  @@index([project_identifier], map: "idx_energy_products_project_identifier")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model environmental_certifications {
  id                                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  real_estate_product_id              String               @db.Uuid
  certification_type                  String               @db.VarChar(50)
  certification_level                 String?              @db.VarChar(50)
  certification_number                String?              @db.VarChar(100)
  certifying_body                     String               @db.VarChar(255)
  certified_date                      DateTime             @db.Timestamptz(6)
  expiration_date                     DateTime?            @db.Timestamptz(6)
  recertification_date                DateTime?            @db.Timestamptz(6)
  score_or_rating                     String?              @db.VarChar(50)
  energy_efficiency_rating            String?              @db.VarChar(10)
  water_efficiency_rating             String?              @db.VarChar(10)
  indoor_environmental_quality_rating String?              @db.VarChar(10)
  materials_resources_rating          String?              @db.VarChar(10)
  certification_cost                  Decimal?             @db.Decimal(20, 2)
  annual_savings_estimate             Decimal?             @db.Decimal(20, 2)
  carbon_footprint_reduction          Decimal?             @db.Decimal(10, 2)
  certification_criteria_met          Json?
  audit_report_url                    String?
  verification_status                 String?              @default("verified") @db.VarChar(20)
  market_value_premium                Decimal?             @db.Decimal(5, 2)
  status                              String?              @default("active") @db.VarChar(20)
  notes                               String?
  created_at                          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at                          DateTime?            @default(now()) @db.Timestamptz(6)
  real_estate_products                real_estate_products @relation(fields: [real_estate_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([certified_date], map: "idx_env_certifications_date")
  @@index([certification_level], map: "idx_env_certifications_level")
  @@index([real_estate_product_id], map: "idx_env_certifications_re_product")
  @@index([certification_type], map: "idx_env_certifications_type")
  @@schema("public")
}

model equity_products {
  id                        String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                String              @unique @db.Uuid
  ticker_symbol             String?             @db.VarChar(20)
  company_name              String?
  exchange                  String?             @db.VarChar(50)
  sector_industry           String?             @db.VarChar(100)
  market_capitalization     Decimal?            @db.Decimal
  authorized_shares         Int?
  shares_outstanding        Decimal?            @db.Decimal
  dividend_yield            Decimal?            @db.Decimal
  earnings_per_share        Decimal?            @db.Decimal
  price_earnings_ratio      Decimal?            @db.Decimal
  currency                  String?             @db.VarChar(10)
  ipo_date                  DateTime?           @db.Timestamptz(6)
  delisting_date            DateTime?           @db.Timestamptz(6)
  status                    String?             @db.VarChar(50)
  corporate_actions_history Json?
  dividend_payment_dates    DateTime[]          @db.Timestamptz
  acquisition_disposal_date DateTime?           @db.Timestamptz(6)
  voting_rights             String?             @db.VarChar(100)
  dividend_policy           String?
  dilution_protection       String[]
  exit_strategy             String?             @db.VarChar(100)
  target_raise              Decimal?            @db.Decimal
  created_at                DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?           @default(now()) @db.Timestamptz(6)
  corporate_actions         corporate_actions[]
  projects                  projects            @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_equity_products_project")
  stock_dividends           stock_dividends[]

  @@index([project_id], map: "idx_equity_products_project_id")
  @@index([status], map: "idx_equity_products_status")
  @@index([ticker_symbol], map: "idx_equity_products_ticker_symbol")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model external_api_cache {
  cache_id      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cache_key     String    @unique @db.VarChar(255)
  data          Json
  timestamp     DateTime? @default(now()) @db.Timestamptz(6)
  expires_at    DateTime  @db.Timestamptz(6)
  api_source    String?   @db.VarChar(100)
  request_count Int?      @default(1)
  last_accessed DateTime? @default(now()) @db.Timestamptz(6)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_external_api_cache_expires")
  @@index([cache_key], map: "idx_external_api_cache_key")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model fund_products {
  id                          String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                  String                  @unique @db.Uuid
  fund_ticker                 String?                 @db.VarChar(20)
  fund_name                   String?
  fund_type                   String?                 @db.VarChar(50)
  net_asset_value             Decimal?                @db.Decimal
  assets_under_management     Decimal?                @db.Decimal
  expense_ratio               Decimal?                @db.Decimal
  benchmark_index             String?
  holdings                    Json?
  distribution_frequency      String?                 @db.VarChar(50)
  tracking_error              Decimal?                @db.Decimal
  currency                    String?                 @db.VarChar(10)
  inception_date              DateTime?               @db.Timestamptz(6)
  closure_liquidation_date    DateTime?               @db.Timestamptz(6)
  status                      String?                 @db.VarChar(50)
  creation_redemption_history Json?
  performance_history         Json?
  flow_data                   Json?
  fund_vintage_year           Int?
  investment_stage            String?                 @db.VarChar(100)
  sector_focus                String[]
  geographic_focus            String[]
  target_raise                Decimal?                @db.Decimal
  created_at                  DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?               @default(now()) @db.Timestamptz(6)
  asset_allocation            Json?
  concentration_limits        Json?
  projects                    projects                @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_fund_products_project")
  mmf_holdings                mmf_holdings[]
  mmf_liquidity_buckets       mmf_liquidity_buckets[]
  mmf_nav_history             mmf_nav_history[]
  mmf_transactions            mmf_transactions[]

  @@index([fund_ticker], map: "idx_fund_products_fund_ticker")
  @@index([project_id], map: "idx_fund_products_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model futures_prices {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  instrument_key   String
  contract_month   String
  delivery_month   String
  price            Decimal  @db.Decimal
  days_to_maturity Int
  open_interest    Int?
  volume           Int?
  currency         String   @default("USD")
  exchange         String?
  price_date       DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  metadata         Json?    @default("{}")
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  updated_at       DateTime @default(now()) @db.Timestamptz(6)

  @@index([price_date(sort: Desc)], map: "idx_futures_prices_date")
  @@index([instrument_key], map: "idx_futures_prices_instrument")
  @@index([days_to_maturity], map: "idx_futures_prices_maturity")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model individual_documents {
  id                                            String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entity_id                                     String                   @db.Uuid
  entity_type                                   String
  document_type                                 individual_document_type
  document_name                                 String
  document_url                                  String?
  document_hash                                 String?
  file_size                                     BigInt?
  mime_type                                     String?
  status                                        String?                  @default("pending")
  uploaded_by                                   String?                  @db.Uuid
  reviewed_by                                   String?                  @db.Uuid
  reviewed_at                                   DateTime?                @db.Timestamptz(6)
  metadata                                      Json?                    @default("{}")
  created_at                                    DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime?                @default(now()) @db.Timestamptz(6)
  users_individual_documents_reviewed_byTousers auth_users?              @relation("individual_documents_reviewed_byTousers", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_individual_documents_uploaded_byTousers auth_users?              @relation("individual_documents_uploaded_byTousers", fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([entity_id], map: "idx_individual_documents_entity_id")
  @@index([entity_type], map: "idx_individual_documents_entity_type")
  @@index([status], map: "idx_individual_documents_status")
  @@index([document_type], map: "idx_individual_documents_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infra_capex_schedule {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  infrastructure_product_id String                  @db.Uuid
  project_id                String                  @db.Uuid
  capex_name                String                  @db.VarChar(255)
  capex_category            String                  @db.VarChar(100)
  description               String?
  planned_start_date        DateTime                @db.Timestamptz(6)
  planned_completion_date   DateTime                @db.Timestamptz(6)
  actual_start_date         DateTime?               @db.Timestamptz(6)
  actual_completion_date    DateTime?               @db.Timestamptz(6)
  budgeted_amount           Decimal                 @db.Decimal(20, 2)
  committed_amount          Decimal?                @db.Decimal(20, 2)
  spent_to_date             Decimal?                @db.Decimal(20, 2)
  currency                  String                  @default("USD") @db.VarChar(3)
  funding_source            String?                 @db.VarChar(100)
  is_discretionary          Boolean?                @default(true)
  is_regulatory_required    Boolean?                @default(false)
  expected_benefit          String?
  expected_roi              Decimal?                @db.Decimal(5, 2)
  payback_period_years      Decimal?                @db.Decimal(5, 2)
  impact_on_capacity        Decimal?                @db.Decimal(10, 2)
  impact_on_revenue         Decimal?                @db.Decimal(20, 2)
  impact_on_opex            Decimal?                @db.Decimal(20, 2)
  approval_status           String?                 @default("pending") @db.VarChar(20)
  approval_date             DateTime?               @db.Timestamptz(6)
  contractor_name           String?                 @db.VarChar(255)
  contract_reference        String?                 @db.VarChar(100)
  milestone_schedule        Json?
  risk_factors              Json?
  status                    String?                 @default("planned") @db.VarChar(20)
  completion_percentage     Decimal?                @db.Decimal(5, 2)
  notes                     String?
  created_at                DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?               @default(now()) @db.Timestamptz(6)
  infrastructure_products   infrastructure_products @relation(fields: [infrastructure_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([capex_category], map: "idx_infra_capex_schedule_category")
  @@index([infrastructure_product_id], map: "idx_infra_capex_schedule_infra_product")
  @@index([project_id], map: "idx_infra_capex_schedule_project")
  @@index([planned_start_date], map: "idx_infra_capex_schedule_start_date")
  @@index([status], map: "idx_infra_capex_schedule_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infra_concessions {
  id                               String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  infrastructure_product_id        String                  @db.Uuid
  project_id                       String                  @db.Uuid
  concession_name                  String                  @db.VarChar(255)
  grantor                          String                  @db.VarChar(255)
  concessionaire                   String                  @db.VarChar(255)
  concession_type                  String?                 @db.VarChar(50)
  contract_reference               String?                 @unique @db.VarChar(100)
  signing_date                     DateTime                @db.Timestamptz(6)
  effective_date                   DateTime                @db.Timestamptz(6)
  expiration_date                  DateTime                @db.Timestamptz(6)
  concession_term_years            Int
  remaining_term_years             Int?
  extension_options                Json?
  handback_requirements            String?
  performance_standards            Json?
  revenue_rights                   Json?
  revenue_sharing_terms            Json?
  tariff_setting_mechanism         String?
  tariff_review_frequency          String?                 @db.VarChar(20)
  minimum_service_requirements     String?
  penalty_regime                   Json?
  termination_clauses              Json?
  termination_compensation_formula String?
  refinancing_restrictions         String?
  change_in_law_provisions         String?
  force_majeure_provisions         String?
  dispute_resolution_mechanism     String?                 @db.VarChar(100)
  governing_law                    String?                 @db.VarChar(100)
  status                           String?                 @default("active") @db.VarChar(20)
  notes                            String?
  created_at                       DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                       DateTime?               @default(now()) @db.Timestamptz(6)
  infrastructure_products          infrastructure_products @relation(fields: [infrastructure_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([expiration_date], map: "idx_infra_concessions_expiration")
  @@index([infrastructure_product_id], map: "idx_infra_concessions_infra_product")
  @@index([project_id], map: "idx_infra_concessions_project")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infra_operating_expenses {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  infrastructure_product_id String                  @db.Uuid
  project_id                String                  @db.Uuid
  expense_date              DateTime                @db.Timestamptz(6)
  expense_category          String                  @db.VarChar(100)
  expense_subcategory       String?                 @db.VarChar(100)
  description               String?
  amount                    Decimal                 @db.Decimal(20, 2)
  currency                  String                  @default("USD") @db.VarChar(3)
  is_fixed_cost             Boolean?                @default(false)
  is_variable_cost          Boolean?                @default(false)
  variable_cost_per_unit    Decimal?                @db.Decimal(20, 6)
  frequency                 String?                 @db.VarChar(20)
  escalation_rate           Decimal?                @db.Decimal(5, 4)
  vendor_name               String?                 @db.VarChar(255)
  contract_reference        String?                 @db.VarChar(100)
  budget_category           String?                 @db.VarChar(100)
  budget_variance           Decimal?                @db.Decimal(20, 2)
  lifecycle_stage           String?                 @db.VarChar(50)
  is_major_maintenance      Boolean?                @default(false)
  maintenance_cycle_years   Int?
  payment_status            String?                 @default("pending") @db.VarChar(20)
  approval_status           String?                 @default("approved") @db.VarChar(20)
  notes                     String?
  created_at                DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?               @default(now()) @db.Timestamptz(6)
  infrastructure_products   infrastructure_products @relation(fields: [infrastructure_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([expense_category], map: "idx_infra_operating_expenses_category")
  @@index([expense_date], map: "idx_infra_operating_expenses_date")
  @@index([infrastructure_product_id], map: "idx_infra_operating_expenses_infra_product")
  @@index([project_id], map: "idx_infra_operating_expenses_project")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infra_regulatory_filings {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  infrastructure_product_id String                  @db.Uuid
  project_id                String                  @db.Uuid
  filing_type               String                  @db.VarChar(100)
  regulatory_body           String                  @db.VarChar(255)
  filing_date               DateTime                @db.Timestamptz(6)
  due_date                  DateTime                @db.Timestamptz(6)
  filing_frequency          String?                 @db.VarChar(20)
  next_filing_due           DateTime?               @db.Timestamptz(6)
  filing_reference          String?                 @db.VarChar(100)
  description               String?
  compliance_status         String?                 @default("pending") @db.VarChar(20)
  submission_document_url   String?
  approval_document_url     String?
  approval_date             DateTime?               @db.Timestamptz(6)
  conditions_imposed        Json?
  violations_cited          Json?
  remediation_required      Boolean?                @default(false)
  remediation_deadline      DateTime?               @db.Timestamptz(6)
  remediation_cost_estimate Decimal?                @db.Decimal(20, 2)
  penalties_assessed        Decimal?                @db.Decimal(20, 2)
  currency                  String?                 @default("USD") @db.VarChar(3)
  is_material_event         Boolean?                @default(false)
  impact_on_operations      String?
  notes                     String?
  created_at                DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?               @default(now()) @db.Timestamptz(6)
  infrastructure_products   infrastructure_products @relation(fields: [infrastructure_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([due_date], map: "idx_infra_regulatory_filings_due_date")
  @@index([infrastructure_product_id], map: "idx_infra_regulatory_filings_infra_product")
  @@index([project_id], map: "idx_infra_regulatory_filings_project")
  @@index([compliance_status], map: "idx_infra_regulatory_filings_status")
  @@index([filing_type], map: "idx_infra_regulatory_filings_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infra_revenue_streams {
  id                          String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  infrastructure_product_id   String                  @db.Uuid
  project_id                  String                  @db.Uuid
  stream_name                 String                  @db.VarChar(255)
  stream_type                 String                  @db.VarChar(50)
  revenue_source              String?                 @db.VarChar(100)
  contract_reference          String?                 @db.VarChar(100)
  start_date                  DateTime                @db.Timestamptz(6)
  end_date                    DateTime?               @db.Timestamptz(6)
  billing_frequency           String?                 @db.VarChar(20)
  revenue_amount              Decimal                 @db.Decimal(20, 2)
  currency                    String                  @default("USD") @db.VarChar(3)
  escalation_rate             Decimal?                @db.Decimal(5, 4)
  escalation_index            String?                 @db.VarChar(50)
  volume_based                Boolean?                @default(false)
  usage_units                 String?                 @db.VarChar(50)
  actual_usage                Decimal?                @db.Decimal(20, 2)
  tariff_per_unit             Decimal?                @db.Decimal(20, 6)
  minimum_revenue_guarantee   Decimal?                @db.Decimal(20, 2)
  maximum_revenue_cap         Decimal?                @db.Decimal(20, 2)
  revenue_sharing_percentage  Decimal?                @db.Decimal(5, 2)
  payment_terms               String?                 @db.VarChar(100)
  credit_quality              String?                 @db.VarChar(20)
  is_regulated                Boolean?                @default(false)
  regulatory_review_frequency String?                 @db.VarChar(20)
  historical_growth_rate      Decimal?                @db.Decimal(5, 2)
  seasonality_factors         Json?
  status                      String?                 @default("active") @db.VarChar(20)
  notes                       String?
  created_at                  DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?               @default(now()) @db.Timestamptz(6)
  infrastructure_products     infrastructure_products @relation(fields: [infrastructure_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([infrastructure_product_id], map: "idx_infra_revenue_streams_infra_product")
  @@index([project_id], map: "idx_infra_revenue_streams_project")
  @@index([stream_type], map: "idx_infra_revenue_streams_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model infra_usage_metrics {
  id                         String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  infrastructure_product_id  String                  @db.Uuid
  project_id                 String                  @db.Uuid
  metric_date                DateTime                @db.Timestamptz(6)
  metric_type                String                  @db.VarChar(50)
  metric_unit                String                  @db.VarChar(50)
  actual_value               Decimal                 @db.Decimal(20, 2)
  budgeted_value             Decimal?                @db.Decimal(20, 2)
  variance                   Decimal?                @db.Decimal(20, 2)
  variance_percentage        Decimal?                @db.Decimal(5, 2)
  peak_value                 Decimal?                @db.Decimal(20, 2)
  peak_time                  DateTime?               @db.Timestamptz(6)
  off_peak_value             Decimal?                @db.Decimal(20, 2)
  capacity                   Decimal?                @db.Decimal(20, 2)
  utilization_rate           Decimal?                @db.Decimal(5, 2)
  availability_rate          Decimal?                @db.Decimal(5, 2)
  downtime_hours             Decimal?                @db.Decimal(10, 2)
  planned_downtime_hours     Decimal?                @db.Decimal(10, 2)
  unplanned_downtime_hours   Decimal?                @db.Decimal(10, 2)
  downtime_reasons           Json?
  weather_impact             Json?
  seasonal_adjustment_factor Decimal?                @db.Decimal(5, 4)
  growth_rate_mom            Decimal?                @db.Decimal(5, 2)
  growth_rate_yoy            Decimal?                @db.Decimal(5, 2)
  data_source                String?                 @db.VarChar(100)
  data_quality_score         Int?
  is_estimated               Boolean?                @default(false)
  notes                      String?
  created_at                 DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?               @default(now()) @db.Timestamptz(6)
  infrastructure_products    infrastructure_products @relation(fields: [infrastructure_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([metric_date], map: "idx_infra_usage_metrics_date")
  @@index([infrastructure_product_id], map: "idx_infra_usage_metrics_infra_product")
  @@index([project_id], map: "idx_infra_usage_metrics_project")
  @@index([metric_type], map: "idx_infra_usage_metrics_type")
  @@schema("public")
}

model infrastructure_products {
  id                        String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                String                     @unique(map: "idx_infrastructure_products_project_id_unique") @db.Uuid
  asset_id                  String?                    @db.VarChar(50)
  asset_type                String?                    @db.VarChar(100)
  design_date               DateTime?                  @db.Timestamptz(6)
  procurement_date          DateTime?                  @db.Timestamptz(6)
  condition_score           Int?
  age                       Int?
  maintenance_backlog       Int?
  performance_metrics       Json?
  mean_time_between_failure Decimal?                   @db.Decimal
  rehabilitation_date       DateTime?                  @db.Timestamptz(6)
  replacement_date          DateTime?                  @db.Timestamptz(6)
  cost_of_replacement       Decimal?                   @db.Decimal
  inspection_date           DateTime?                  @db.Timestamptz(6)
  safety_incidents          Int?
  status                    String?                    @db.VarChar(50)
  target_raise              Decimal?                   @db.Decimal
  created_at                DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                  @default(now()) @db.Timestamptz(6)
  infra_capex_schedule      infra_capex_schedule[]
  infra_concessions         infra_concessions[]
  infra_operating_expenses  infra_operating_expenses[]
  infra_regulatory_filings  infra_regulatory_filings[]
  infra_revenue_streams     infra_revenue_streams[]
  infra_usage_metrics       infra_usage_metrics[]
  projects                  projects                   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_infrastructure_products_project")

  @@index([asset_id], map: "idx_infrastructure_products_asset_id")
  @@index([project_id], map: "idx_infrastructure_products_project_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model invoice_aging_buckets {
  id                         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                 String    @db.Uuid
  as_of_date                 DateTime  @db.Timestamptz(6)
  bucket_name                String    @db.VarChar(50)
  bucket_min_days            Int
  bucket_max_days            Int?
  number_of_invoices         Int
  total_amount               Decimal   @db.Decimal(20, 2)
  currency                   String?   @default("USD") @db.VarChar(3)
  percentage_of_total        Decimal?  @db.Decimal(5, 2)
  reserve_percentage         Decimal?  @db.Decimal(5, 2)
  reserve_amount             Decimal?  @db.Decimal(20, 2)
  expected_collection_rate   Decimal?  @db.Decimal(5, 2)
  expected_collection_amount Decimal?  @db.Decimal(20, 2)
  expected_loss_rate         Decimal?  @db.Decimal(5, 2)
  expected_loss_amount       Decimal?  @db.Decimal(20, 2)
  average_days_outstanding   Decimal?  @db.Decimal(5, 1)
  largest_invoice_amount     Decimal?  @db.Decimal(20, 2)
  concentration_risk         String?   @db.VarChar(20)
  historical_collection_rate Json?
  notes                      String?
  created_at                 DateTime? @default(now()) @db.Timestamptz(6)
  projects                   projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([as_of_date], map: "idx_invoice_aging_buckets_date")
  @@index([bucket_name], map: "idx_invoice_aging_buckets_name")
  @@index([project_id], map: "idx_invoice_aging_buckets_project")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model invoice_collection_history {
  id                             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                     String    @db.Uuid
  period_start_date              DateTime  @db.Timestamptz(6)
  period_end_date                DateTime  @db.Timestamptz(6)
  total_invoices_issued          Int
  total_invoices_amount          Decimal   @db.Decimal(20, 2)
  total_collected                Decimal   @db.Decimal(20, 2)
  collection_rate                Decimal?  @db.Decimal(5, 2)
  currency                       String?   @default("USD") @db.VarChar(3)
  average_days_to_collect        Decimal?  @db.Decimal(5, 1)
  invoices_current               Int?
  invoices_1_30_days             Int?
  invoices_31_60_days            Int?
  invoices_61_90_days            Int?
  invoices_90_plus_days          Int?
  invoices_written_off           Int?
  amount_written_off             Decimal?  @db.Decimal(20, 2)
  write_off_rate                 Decimal?  @db.Decimal(5, 2)
  disputed_invoices              Int?
  disputed_amount                Decimal?  @db.Decimal(20, 2)
  resolved_disputes              Int?
  resolved_dispute_amount        Decimal?  @db.Decimal(20, 2)
  collection_costs               Decimal?  @db.Decimal(20, 2)
  legal_costs                    Decimal?  @db.Decimal(20, 2)
  net_collections                Decimal?  @db.Decimal(20, 2)
  dilution_amount                Decimal?  @db.Decimal(20, 2)
  dilution_rate                  Decimal?  @db.Decimal(5, 2)
  concentration_by_debtor        Json?
  concentration_by_industry      Json?
  roll_rate_analysis             Json?
  collection_effectiveness_index Decimal?  @db.Decimal(5, 2)
  days_sales_outstanding         Decimal?  @db.Decimal(5, 1)
  best_possible_dso              Decimal?  @db.Decimal(5, 1)
  notes                          String?
  created_at                     DateTime? @default(now()) @db.Timestamptz(6)
  projects                       projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([period_start_date, period_end_date], map: "idx_invoice_collection_history_period")
  @@index([project_id], map: "idx_invoice_collection_history_project")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model invoice_debtor_ratings {
  id                          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  debtor_name                 String    @db.VarChar(255)
  debtor_id                   String?   @db.Uuid
  rating_date                 DateTime  @db.Timestamptz(6)
  internal_rating             String    @db.VarChar(10)
  external_rating             String?   @db.VarChar(10)
  rating_agency               String?   @db.VarChar(50)
  payment_behavior_score      Int?
  days_beyond_terms_average   Decimal?  @db.Decimal(5, 1)
  payment_default_probability Decimal?  @db.Decimal(5, 4)
  expected_recovery_rate      Decimal?  @db.Decimal(5, 2)
  credit_limit                Decimal?  @db.Decimal(20, 2)
  current_exposure            Decimal?  @db.Decimal(20, 2)
  concentration_percentage    Decimal?  @db.Decimal(5, 2)
  is_within_limit             Boolean?  @default(true)
  financial_strength          String?   @db.VarChar(20)
  industry                    String?   @db.VarChar(100)
  years_in_business           Int?
  number_of_employees         Int?
  annual_revenue              Decimal?  @db.Decimal(20, 2)
  profitability               String?   @db.VarChar(20)
  liquidity_ratio             Decimal?  @db.Decimal(5, 2)
  leverage_ratio              Decimal?  @db.Decimal(5, 2)
  payment_history_months      Int?
  average_days_to_pay         Decimal?  @db.Decimal(5, 1)
  disputed_invoices_count     Int?
  disputed_amount             Decimal?  @db.Decimal(20, 2)
  is_approved_debtor          Boolean?  @default(true)
  approval_date               DateTime? @db.Timestamptz(6)
  review_frequency            String?   @db.VarChar(20)
  next_review_date            DateTime? @db.Timestamptz(6)
  watch_list_status           Boolean?  @default(false)
  watch_list_reason           String?
  notes                       String?
  created_at                  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([is_approved_debtor], map: "idx_invoice_debtor_ratings_approved")
  @@index([rating_date], map: "idx_invoice_debtor_ratings_date")
  @@index([debtor_name], map: "idx_invoice_debtor_ratings_debtor")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model invoice_payments {
  id                    String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_receivable_id String              @db.Uuid
  payment_date          DateTime            @db.Timestamptz(6)
  payment_amount        Decimal             @db.Decimal(20, 2)
  currency              String?             @default("USD") @db.VarChar(3)
  payment_method        String?             @db.VarChar(50)
  transaction_reference String?             @db.VarChar(100)
  days_late             Int?                @default(0)
  late_fee_charged      Decimal?            @db.Decimal(20, 2)
  discount_taken        Decimal?            @db.Decimal(20, 2)
  payment_type          String?             @db.VarChar(50)
  is_early_payment      Boolean?            @default(false)
  remaining_balance     Decimal?            @db.Decimal(20, 2)
  reconciliation_status String?             @default("matched") @db.VarChar(20)
  applied_to_principal  Decimal?            @db.Decimal(20, 2)
  applied_to_fees       Decimal?            @db.Decimal(20, 2)
  applied_to_interest   Decimal?            @db.Decimal(20, 2)
  notes                 String?
  created_at            DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?           @default(now()) @db.Timestamptz(6)
  invoice_receivables   invoice_receivables @relation(fields: [invoice_receivable_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([payment_date], map: "idx_invoice_payments_date")
  @@index([invoice_receivable_id], map: "idx_invoice_payments_invoice")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model invoice_receivables {
  id                        String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                String             @db.Uuid
  invoice_number            String             @unique @db.VarChar(100)
  debtor_name               String             @db.VarChar(255)
  debtor_id                 String?            @db.Uuid
  creditor_name             String             @db.VarChar(255)
  creditor_id               String?            @db.Uuid
  invoice_date              DateTime           @db.Timestamptz(6)
  due_date                  DateTime           @db.Timestamptz(6)
  invoice_amount            Decimal            @db.Decimal(20, 2)
  currency                  String?            @default("USD") @db.VarChar(3)
  advance_rate              Decimal?           @db.Decimal(5, 2)
  advance_amount            Decimal?           @db.Decimal(20, 2)
  discount_rate             Decimal?           @db.Decimal(5, 4)
  discount_amount           Decimal?           @db.Decimal(20, 2)
  fee_percentage            Decimal?           @db.Decimal(5, 2)
  fees_charged              Decimal?           @db.Decimal(20, 2)
  net_advance               Decimal?           @db.Decimal(20, 2)
  invoice_type              String?            @db.VarChar(50)
  invoice_category          String?            @db.VarChar(50)
  payment_terms             String?            @db.VarChar(50)
  is_recourse               Boolean?           @default(true)
  dilution_risk             Decimal?           @db.Decimal(5, 2)
  credit_insurance_covered  Boolean?           @default(false)
  insurance_policy_number   String?            @db.VarChar(100)
  insurance_coverage_amount Decimal?           @db.Decimal(20, 2)
  goods_delivered           Boolean?           @default(true)
  services_completed        Boolean?           @default(true)
  dispute_risk              String?            @db.VarChar(20)
  concentration_risk        String?            @db.VarChar(20)
  debtor_relationship_years Int?
  payment_history_score     Int?
  days_outstanding          Int?
  aging_bucket              String?            @db.VarChar(20)
  status                    String?            @default("outstanding") @db.VarChar(20)
  notes                     String?
  created_at                DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?          @default(now()) @db.Timestamptz(6)
  invoice_payments          invoice_payments[]
  projects                  projects           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([debtor_name], map: "idx_invoice_receivables_debtor")
  @@index([due_date], map: "idx_invoice_receivables_due_date")
  @@index([invoice_number], map: "idx_invoice_receivables_number")
  @@index([project_id], map: "idx_invoice_receivables_project")
  @@index([status], map: "idx_invoice_receivables_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lease_agreements {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  real_estate_product_id String               @db.Uuid
  tenant_name            String               @db.VarChar(255)
  tenant_type            String?              @db.VarChar(50)
  unit_number            String?              @db.VarChar(50)
  floor_number           String?              @db.VarChar(20)
  leased_square_feet     Decimal?             @db.Decimal(10, 2)
  lease_start_date       DateTime             @db.Timestamptz(6)
  lease_end_date         DateTime             @db.Timestamptz(6)
  lease_term_months      Int?
  monthly_rent           Decimal              @db.Decimal(20, 2)
  annual_rent            Decimal              @db.Decimal(20, 2)
  currency               String               @default("USD") @db.VarChar(3)
  rent_per_sqft          Decimal?             @db.Decimal(10, 2)
  security_deposit       Decimal?             @db.Decimal(20, 2)
  escalation_rate        Decimal?             @db.Decimal(5, 4)
  escalation_frequency   String?              @db.VarChar(20)
  rent_free_periods      Json?
  tenant_improvements    Decimal?             @db.Decimal(20, 2)
  lease_type             String?              @db.VarChar(50)
  renewal_options        Json?
  termination_clauses    Json?
  rent_payment_schedule  Json?
  late_payment_penalty   Decimal?             @db.Decimal(20, 2)
  tenant_credit_rating   String?              @db.VarChar(10)
  guarantor_info         Json?
  status                 String?              @default("active") @db.VarChar(20)
  is_anchor_tenant       Boolean?             @default(false)
  created_at             DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?            @default(now()) @db.Timestamptz(6)
  real_estate_products   real_estate_products @relation(fields: [real_estate_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([lease_end_date], map: "idx_lease_agreements_end_date")
  @@index([real_estate_product_id], map: "idx_lease_agreements_re_product")
  @@index([lease_start_date], map: "idx_lease_agreements_start_date")
  @@index([status], map: "idx_lease_agreements_status")
  @@index([tenant_name], map: "idx_lease_agreements_tenant")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model market_data_snapshots {
  snapshot_id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  snapshot_date        DateTime? @default(now()) @db.Timestamptz(6)
  treasury_rates       Json?
  credit_spreads       Json?
  energy_prices        Json?
  policy_changes_count Int?      @default(0)
  api_call_count       Int?      @default(0)
  cache_hit_rate       Decimal?  @default(0) @db.Decimal(5, 4)
  data_sources_used    Json?     @default("[]")
  created_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([snapshot_date], map: "idx_market_data_snapshots_date")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model market_indices {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  index_symbol          String    @unique @db.VarChar(20)
  index_name            String    @db.VarChar(255)
  index_provider        String?   @db.VarChar(100)
  description           String?
  asset_class           String?   @db.VarChar(50)
  geographic_focus      String?   @db.VarChar(50)
  sector_focus          String?   @db.VarChar(50)
  market_cap_segment    String?   @db.VarChar(50)
  methodology           String?
  base_date             DateTime? @db.Timestamptz(6)
  base_value            Decimal?  @db.Decimal(20, 4)
  currency              String    @db.VarChar(3)
  rebalancing_frequency String?   @db.VarChar(50)
  constituent_count     Int?
  constituents          Json?
  calculation_method    String?   @db.VarChar(50)
  is_active             Boolean?  @default(true)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([asset_class], map: "idx_market_indices_asset_class")
  @@index([index_symbol], map: "idx_market_indices_symbol")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model market_rent_data {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  property_type         String    @db.VarChar(50)
  property_subtype      String?   @db.VarChar(50)
  location              String    @db.VarChar(255)
  city                  String    @db.VarChar(100)
  state_province        String?   @db.VarChar(100)
  country               String    @db.VarChar(3)
  postal_code           String?   @db.VarChar(20)
  market_rent_per_sqft  Decimal   @db.Decimal(10, 2)
  market_rent_per_unit  Decimal?  @db.Decimal(20, 2)
  currency              String    @default("USD") @db.VarChar(3)
  square_footage_range  Json?
  building_class        String?   @db.VarChar(10)
  as_of_date            DateTime  @db.Timestamptz(6)
  source                String?   @db.VarChar(255)
  vacancy_rate          Decimal?  @db.Decimal(5, 2)
  absorption_rate       Decimal?  @db.Decimal(10, 2)
  market_trends         String?
  comparable_properties Json?
  data_quality_score    Int?
  is_verified           Boolean?  @default(false)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([as_of_date], map: "idx_market_rent_data_date")
  @@index([city, state_province, country], map: "idx_market_rent_data_location")
  @@index([property_type], map: "idx_market_rent_data_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ml_baseline_statistics {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operator   String    @unique
  statistics Json
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mmf_credit_ratings {
  id                             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issuer_name                    String    @db.VarChar(255)
  issuer_id                      String?   @db.VarChar(100)
  rating_date                    DateTime  @db.Timestamptz(6)
  short_term_rating              String    @db.VarChar(10)
  long_term_rating               String?   @db.VarChar(10)
  rating_agency                  String    @db.VarChar(50)
  rating_outlook                 String?   @db.VarChar(20)
  previous_rating                String?   @db.VarChar(10)
  rating_action                  String?   @db.VarChar(50)
  is_tier_1                      Boolean?  @default(true)
  is_second_tier                 Boolean?  @default(false)
  is_eligible_mmf_holding        Boolean?  @default(true)
  downgrade_watch                Boolean?  @default(false)
  credit_watch_status            String?   @db.VarChar(50)
  probability_of_default         Decimal?  @db.Decimal(5, 4)
  rating_report_url              String?
  internal_credit_assessment     String?
  concentration_limits           Json?
  current_exposure               Decimal?  @db.Decimal(20, 2)
  exposure_percentage            Decimal?  @db.Decimal(5, 2)
  is_within_concentration_limits Boolean?  @default(true)
  notes                          String?
  created_at                     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([rating_agency], map: "idx_mmf_credit_ratings_agency")
  @@index([rating_date], map: "idx_mmf_credit_ratings_date")
  @@index([is_eligible_mmf_holding], map: "idx_mmf_credit_ratings_eligible")
  @@index([issuer_name], map: "idx_mmf_credit_ratings_issuer")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mmf_holdings {
  id                             String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fund_product_id                String             @db.Uuid
  holding_type                   String             @db.VarChar(50)
  issuer_name                    String             @db.VarChar(255)
  issuer_id                      String?            @db.VarChar(100)
  security_description           String
  cusip                          String?            @db.VarChar(9)
  isin                           String?            @db.VarChar(12)
  par_value                      Decimal            @db.Decimal(20, 2)
  purchase_price                 Decimal?           @db.Decimal(20, 8)
  current_price                  Decimal            @db.Decimal(20, 8)
  amortized_cost                 Decimal            @db.Decimal(20, 2)
  market_value                   Decimal            @db.Decimal(20, 2)
  currency                       String?            @default("USD") @db.VarChar(3)
  quantity                       Decimal?           @db.Decimal(20, 2)
  yield_to_maturity              Decimal?           @db.Decimal(5, 4)
  coupon_rate                    Decimal?           @db.Decimal(5, 4)
  effective_maturity_date        DateTime           @db.Timestamptz(6)
  final_maturity_date            DateTime           @db.Timestamptz(6)
  weighted_average_maturity_days Int?
  weighted_average_life_days     Int?
  days_to_maturity               Int?
  credit_rating                  String             @db.VarChar(10)
  rating_agency                  String?            @db.VarChar(50)
  is_government_security         Boolean?           @default(false)
  is_daily_liquid                Boolean?           @default(false)
  is_weekly_liquid               Boolean?           @default(false)
  liquidity_classification       String?            @db.VarChar(20)
  acquisition_date               DateTime           @db.Timestamptz(6)
  settlement_date                DateTime?          @db.Timestamptz(6)
  accrued_interest               Decimal?           @db.Decimal(20, 6)
  amortization_adjustment        Decimal?           @db.Decimal(20, 6)
  shadow_nav_impact              Decimal?           @db.Decimal(20, 8)
  stress_test_value              Decimal?           @db.Decimal(20, 2)
  counterparty                   String?            @db.VarChar(255)
  collateral_description         String?
  is_affiliated_issuer           Boolean?           @default(false)
  concentration_percentage       Decimal?           @db.Decimal(5, 2)
  status                         String?            @default("active") @db.VarChar(20)
  notes                          String?
  created_at                     DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime?          @default(now()) @db.Timestamptz(6)
  fund_products                  fund_products      @relation(fields: [fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mmf_transactions               mmf_transactions[]

  @@index([fund_product_id], map: "idx_mmf_holdings_fund")
  @@index([issuer_name], map: "idx_mmf_holdings_issuer")
  @@index([effective_maturity_date], map: "idx_mmf_holdings_maturity")
  @@index([credit_rating], map: "idx_mmf_holdings_rating")
  @@index([holding_type], map: "idx_mmf_holdings_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mmf_liquidity_buckets {
  id                            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fund_product_id               String        @db.Uuid
  as_of_date                    DateTime      @db.Timestamptz(6)
  bucket_type                   String        @db.VarChar(50)
  total_value                   Decimal       @db.Decimal(20, 2)
  percentage_of_nav             Decimal       @db.Decimal(5, 2)
  currency                      String?       @default("USD") @db.VarChar(3)
  number_of_holdings            Int?
  holdings_detail               Json?
  regulatory_minimum            Decimal?      @db.Decimal(5, 2)
  is_compliant                  Boolean?      @default(true)
  cushion                       Decimal?      @db.Decimal(5, 2)
  stress_scenario               String?       @db.VarChar(50)
  stressed_liquidity_percentage Decimal?      @db.Decimal(5, 2)
  can_meet_redemptions          Boolean?      @default(true)
  projected_redemption_rate     Decimal?      @db.Decimal(5, 2)
  liquidity_coverage_ratio      Decimal?      @db.Decimal(5, 2)
  time_to_liquidate_days        Int?
  liquidation_cost_estimate     Decimal?      @db.Decimal(20, 2)
  contingency_liquidity_sources Json?
  notes                         String?
  created_at                    DateTime?     @default(now()) @db.Timestamptz(6)
  fund_products                 fund_products @relation(fields: [fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([as_of_date], map: "idx_mmf_liquidity_buckets_date")
  @@index([fund_product_id], map: "idx_mmf_liquidity_buckets_fund")
  @@index([bucket_type], map: "idx_mmf_liquidity_buckets_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mmf_nav_history {
  id                              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fund_product_id                 String        @db.Uuid
  valuation_date                  DateTime      @db.Timestamptz(6)
  stable_nav                      Decimal?      @default(1.00) @db.Decimal(20, 8)
  market_based_nav                Decimal       @db.Decimal(20, 8)
  deviation_from_stable           Decimal?      @db.Decimal(10, 8)
  deviation_bps                   Int?
  total_net_assets                Decimal       @db.Decimal(20, 2)
  shares_outstanding              Decimal       @db.Decimal(20, 2)
  currency                        String?       @default("USD") @db.VarChar(3)
  daily_yield                     Decimal?      @db.Decimal(5, 4)
  seven_day_yield                 Decimal?      @db.Decimal(5, 4)
  thirty_day_yield                Decimal?      @db.Decimal(5, 4)
  effective_yield                 Decimal?      @db.Decimal(5, 4)
  expense_ratio                   Decimal?      @db.Decimal(5, 4)
  weighted_average_maturity_days  Int
  weighted_average_life_days      Int
  daily_liquid_assets_percentage  Decimal       @db.Decimal(5, 2)
  weekly_liquid_assets_percentage Decimal       @db.Decimal(5, 2)
  is_wam_compliant                Boolean?      @default(true)
  is_wal_compliant                Boolean?      @default(true)
  is_liquidity_compliant          Boolean?      @default(true)
  is_breaking_the_buck            Boolean?      @default(false)
  stress_test_result              String?       @db.VarChar(20)
  gate_status                     String?       @default("open") @db.VarChar(20)
  redemption_fee_imposed          Boolean?      @default(false)
  total_subscriptions             Decimal?      @db.Decimal(20, 2)
  total_redemptions               Decimal?      @db.Decimal(20, 2)
  net_flows                       Decimal?      @db.Decimal(20, 2)
  portfolio_manager_notes         String?
  regulatory_filing_reference     String?       @db.VarChar(100)
  notes                           String?
  created_at                      DateTime?     @default(now()) @db.Timestamptz(6)
  fund_products                   fund_products @relation(fields: [fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([is_breaking_the_buck], map: "idx_mmf_nav_history_breaking_buck")
  @@index([valuation_date], map: "idx_mmf_nav_history_date")
  @@index([fund_product_id], map: "idx_mmf_nav_history_fund")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mmf_transactions {
  id                        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fund_product_id           String        @db.Uuid
  transaction_date          DateTime      @db.Timestamptz(6)
  settlement_date           DateTime?     @db.Timestamptz(6)
  transaction_type          String        @db.VarChar(50)
  holding_id                String?       @db.Uuid
  security_description      String?
  cusip                     String?       @db.VarChar(9)
  quantity                  Decimal?      @db.Decimal(20, 2)
  price                     Decimal?      @db.Decimal(20, 8)
  gross_amount              Decimal       @db.Decimal(20, 2)
  net_amount                Decimal       @db.Decimal(20, 2)
  currency                  String?       @default("USD") @db.VarChar(3)
  accrued_interest          Decimal?      @db.Decimal(20, 6)
  fees                      Decimal?      @db.Decimal(20, 2)
  realized_gain_loss        Decimal?      @db.Decimal(20, 2)
  yield                     Decimal?      @db.Decimal(5, 4)
  counterparty              String?       @db.VarChar(255)
  broker_dealer             String?       @db.VarChar(255)
  trade_confirmation_number String?       @db.VarChar(100)
  impact_on_wam             Int?
  impact_on_wal             Int?
  impact_on_liquidity       Json?
  transaction_purpose       String?
  is_stress_test_compliant  Boolean?      @default(true)
  is_regulatory_compliant   Boolean?      @default(true)
  compliance_notes          String?
  status                    String?       @default("settled") @db.VarChar(20)
  notes                     String?
  created_at                DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?     @default(now()) @db.Timestamptz(6)
  fund_products             fund_products @relation(fields: [fund_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mmf_holdings              mmf_holdings? @relation(fields: [holding_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([transaction_date], map: "idx_mmf_transactions_date")
  @@index([fund_product_id], map: "idx_mmf_transactions_fund")
  @@index([holding_id], map: "idx_mmf_transactions_holding")
  @@index([transaction_type], map: "idx_mmf_transactions_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model multi_sig_audit_log {
  id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id           String?              @db.Uuid
  proposal_id         String?              @db.Uuid
  action              String
  actor               String?              @db.Uuid
  actor_address       String?
  details             Json?                @default("{}")
  ip_address          String?              @db.Inet
  user_agent          String?
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  users               auth_users?          @relation(fields: [actor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  multi_sig_proposals multi_sig_proposals? @relation(fields: [proposal_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  multi_sig_wallets   multi_sig_wallets?   @relation(fields: [wallet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([actor], map: "idx_audit_actor")
  @@index([created_at(sort: Desc)], map: "idx_audit_created_at")
  @@index([proposal_id], map: "idx_audit_proposal_id")
  @@index([wallet_id], map: "idx_audit_wallet_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model multi_sig_configurations {
  id                     String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id              String?            @unique @db.Uuid
  min_confirmation_time  Int?               @default(0)
  max_daily_limit        Decimal?           @db.Decimal
  max_transaction_limit  Decimal?           @db.Decimal
  require_all_signatures Boolean?           @default(false)
  auto_execute           Boolean?           @default(true)
  notification_webhook   String?
  metadata               Json?              @default("{}")
  created_at             DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?          @default(now()) @db.Timestamptz(6)
  multi_sig_wallets      multi_sig_wallets? @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([wallet_id], map: "idx_config_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model multi_sig_proposals {
  id                   String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  wallet_id            String?               @db.Uuid
  transaction_hash     String
  raw_transaction      Json
  chain_type           String
  status               String?               @default("pending")
  signatures_collected Int?                  @default(0)
  signatures_required  Int
  expires_at           DateTime              @db.Timestamptz(6)
  executed_at          DateTime?             @db.Timestamptz(6)
  execution_hash       String?
  created_by           String?               @db.Uuid
  created_at           DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?             @default(now()) @db.Timestamptz(6)
  multi_sig_audit_log  multi_sig_audit_log[]
  users                auth_users?           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  multi_sig_wallets    multi_sig_wallets?    @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  proposal_signatures  proposal_signatures[]

  @@index([chain_type], map: "idx_multi_sig_proposals_chain_type")
  @@index([created_by], map: "idx_proposals_created_by")
  @@index([expires_at], map: "idx_proposals_expires_at")
  @@index([status], map: "idx_proposals_status")
  @@index([wallet_id], map: "idx_proposals_wallet_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_approvals {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  run_id               String               @db.Uuid
  status               String               @default("draft")
  requested_by         String               @db.Uuid
  validated_by         String?              @db.Uuid
  approved_by          String?              @db.Uuid
  approved_at          DateTime?            @db.Timestamptz(6)
  comments             String?
  created_at           DateTime?            @default(now()) @db.Timestamptz(6)
  nav_calculation_runs nav_calculation_runs @relation(fields: [run_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([requested_by], map: "idx_nav_approvals_requested_by")
  @@index([run_id, status], map: "idx_nav_approvals_run_status")
  @@index([status], map: "idx_nav_approvals_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_asset_type_adjustments {
  id                        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type                String
  mark_to_market_multiplier Decimal  @db.Decimal
  description               String?
  as_of_date                DateTime @default(now()) @db.Timestamptz(6)
  source                    String   @default("manual")
  created_at                DateTime @default(now()) @db.Timestamptz(6)
  updated_at                DateTime @default(now()) @db.Timestamptz(6)

  @@unique([asset_type, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_asset_type_adj_as_of")
  @@index([asset_type], map: "idx_nav_asset_type_adj_asset_type")
  @@schema("public")
}

model nav_calculation_history {
  id                 BigInt    @id @default(autoincrement())
  run_id             String
  asset_id           String
  product_type       String
  calculation_step   String
  step_order         Int
  input_data         Json
  output_data        Json
  processing_time_ms Int
  data_sources       Json?
  validation_results Json?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([asset_id], map: "idx_nav_history_asset")
  @@index([run_id], map: "idx_nav_history_run")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_calculation_runs {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_id               String                   @db.Uuid
  product_type           String
  project_id             String?                  @db.Uuid
  valuation_date         DateTime                 @db.Date
  started_at             DateTime?                @default(now()) @db.Timestamptz(6)
  completed_at           DateTime?                @db.Timestamptz(6)
  status                 String                   @default("queued")
  inputs_json            Json?
  result_nav_value       Decimal?                 @db.Decimal(18, 6)
  nav_per_share          Decimal?                 @db.Decimal(18, 6)
  fx_rate_used           Decimal?                 @db.Decimal(18, 6)
  pricing_sources        Json?
  error_message          String?
  created_by             String?                  @db.Uuid
  created_at             DateTime?                @default(now()) @db.Timestamptz(6)
  nav_approvals          nav_approvals[]
  projects               projects?                @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  nav_validation_results nav_validation_results[]

  @@index([asset_id, valuation_date], map: "idx_nav_calc_runs_asset_date")
  @@index([created_at], map: "idx_nav_calc_runs_created_at")
  @@index([project_id, valuation_date], map: "idx_nav_calc_runs_project_date")
  @@index([status], map: "idx_nav_calc_runs_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_calculator_parameters {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  calculator_type String
  parameter_key   String
  parameter_value String
  asset_subtype   String?
  description     String?
  unit            String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([calculator_type, parameter_key, asset_subtype])
  @@index([calculator_type, asset_subtype], map: "idx_nav_calc_params_subtype")
  @@index([calculator_type, parameter_key], map: "idx_nav_calc_params_type_key")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_credit_quality_multipliers {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_quality String
  multiplier     Decimal  @db.Decimal
  description    String?
  as_of_date     DateTime @default(now()) @db.Timestamptz(6)
  source         String   @default("manual")
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  updated_at     DateTime @default(now()) @db.Timestamptz(6)

  @@unique([credit_quality, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_credit_qual_mult_as_of")
  @@index([credit_quality], map: "idx_nav_credit_qual_mult_quality")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_credit_spreads {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_rating String
  asset_class   String
  spread_bps    Decimal  @db.Decimal
  description   String?
  as_of_date    DateTime @default(now()) @db.Timestamptz(6)
  source        String   @default("manual")
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@unique([credit_rating, asset_class, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_credit_spreads_as_of")
  @@index([asset_class], map: "idx_nav_credit_spreads_class")
  @@index([credit_rating], map: "idx_nav_credit_spreads_rating")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_default_rates {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type    String
  credit_rating String
  monthly_rate  Decimal  @db.Decimal
  annual_rate   Decimal? @db.Decimal
  description   String?
  as_of_date    DateTime @default(now()) @db.Timestamptz(6)
  source        String   @default("manual")
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@unique([asset_type, credit_rating, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_default_rates_as_of")
  @@index([asset_type], map: "idx_nav_default_rates_asset_type")
  @@index([credit_rating], map: "idx_nav_default_rates_rating")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_delinquency_adjustments {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  days_past_due   Int
  adjustment_rate Decimal  @db.Decimal
  description     String?
  as_of_date      DateTime @default(now()) @db.Timestamptz(6)
  source          String   @default("manual")
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  updated_at      DateTime @default(now()) @db.Timestamptz(6)

  @@unique([days_past_due, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_delinq_adj_as_of")
  @@index([days_past_due], map: "idx_nav_delinq_adj_days")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_economic_capital {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_rating    String
  capital_rate     Decimal  @db.Decimal
  confidence_level Decimal  @default(0.999) @db.Decimal
  description      String?
  as_of_date       DateTime @default(now()) @db.Timestamptz(6)
  source           String   @default("manual")
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  updated_at       DateTime @default(now()) @db.Timestamptz(6)

  @@unique([credit_rating, confidence_level, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_ec_as_of")
  @@index([credit_rating], map: "idx_nav_ec_rating")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_fx_rates {
  base_ccy  String
  quote_ccy String
  rate      Decimal  @db.Decimal(18, 8)
  as_of     DateTime @db.Timestamptz(6)
  source    String   @default("chainlink")

  @@id([base_ccy, quote_ccy, as_of])
  @@index([base_ccy, quote_ccy, as_of(sort: Desc)], map: "idx_nav_fx_pair_asof")
  @@index([as_of], map: "idx_nav_fx_rates_as_of")
  @@index([base_ccy, quote_ccy], map: "idx_nav_fx_rates_currencies")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_liquidity_discounts {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_rating String
  asset_class   String
  discount_rate Decimal  @db.Decimal
  description   String?
  as_of_date    DateTime @default(now()) @db.Timestamptz(6)
  source        String   @default("manual")
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@unique([credit_rating, asset_class, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_liq_disc_as_of")
  @@index([asset_class], map: "idx_nav_liq_disc_class")
  @@index([credit_rating], map: "idx_nav_liq_disc_rating")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_loss_given_default {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type  String
  lgd_rate    Decimal  @db.Decimal
  description String?
  as_of_date  DateTime @default(now()) @db.Timestamptz(6)
  source      String   @default("manual")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)

  @@unique([asset_type, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_lgd_as_of")
  @@index([asset_type], map: "idx_nav_lgd_asset_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_prepayment_rates {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type   String
  monthly_rate Decimal  @db.Decimal
  description  String?
  as_of_date   DateTime @default(now()) @db.Timestamptz(6)
  source       String   @default("manual")
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  updated_at   DateTime @default(now()) @db.Timestamptz(6)

  @@unique([asset_type, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_prepay_rates_as_of")
  @@index([asset_type], map: "idx_nav_prepay_rates_asset_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_price_cache {
  instrument_key String
  price          Decimal  @db.Decimal(18, 6)
  currency       String   @default("USD")
  as_of          DateTime @db.Timestamptz(6)
  source         String

  @@id([instrument_key, source, as_of])
  @@index([as_of], map: "idx_nav_price_cache_as_of")
  @@index([instrument_key], map: "idx_nav_price_cache_instrument")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_probability_of_default {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_rating      String
  annual_pd          Decimal  @db.Decimal
  time_horizon_years Int      @default(1)
  description        String?
  as_of_date         DateTime @default(now()) @db.Timestamptz(6)
  source             String   @default("manual")
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  updated_at         DateTime @default(now()) @db.Timestamptz(6)

  @@unique([credit_rating, time_horizon_years, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_pd_as_of")
  @@index([credit_rating], map: "idx_nav_pd_rating")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_recovery_rates {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_type    String
  recovery_rate Decimal  @db.Decimal
  description   String?
  as_of_date    DateTime @default(now()) @db.Timestamptz(6)
  source        String   @default("manual")
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@unique([asset_type, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_recovery_rates_as_of")
  @@index([asset_type], map: "idx_nav_recovery_rates_asset_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_redemptions {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_id        String    @db.Uuid
  product_type    String
  as_of_date      DateTime  @db.Date
  shares_redeemed Decimal   @default(0) @db.Decimal(78, 18)
  value_redeemed  Decimal   @default(0) @db.Decimal(78, 18)
  redemption_rate Decimal   @default(0) @db.Decimal(18, 6)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([asset_id, as_of_date])
  @@index([asset_id, as_of_date], map: "idx_nav_redemptions_asset_date")
  @@index([product_type], map: "idx_nav_redemptions_product_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_unexpected_loss {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credit_rating String
  ul_rate       Decimal  @db.Decimal
  description   String?
  as_of_date    DateTime @default(now()) @db.Timestamptz(6)
  source        String   @default("manual")
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@unique([credit_rating, as_of_date])
  @@index([as_of_date(sort: Desc)], map: "idx_nav_ul_as_of")
  @@index([credit_rating], map: "idx_nav_ul_rating")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nav_validation_results {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  run_id               String               @db.Uuid
  rule_code            String
  severity             String
  passed               Boolean
  details_json         Json?
  created_at           DateTime?            @default(now()) @db.Timestamptz(6)
  nav_calculation_runs nav_calculation_runs @relation(fields: [run_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([rule_code, severity], map: "idx_nav_validation_rule_severity")
  @@index([run_id], map: "idx_nav_validation_run")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification_settings {
  id                    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String     @db.Uuid
  project_id            String?    @db.Uuid
  event_types           String[]
  notification_channels String[]
  email_recipients      String[]
  email_template        String?    @default("default")
  advance_notice_days   Int[]      @default([1, 7, 30])
  disabled              Boolean?   @default(false)
  created_at            DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?  @default(now()) @db.Timestamptz(6)
  projects              projects?  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                 auth_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([project_id], map: "idx_notification_settings_project_id")
  @@index([user_id], map: "idx_notification_settings_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model operation_metadata {
  id                  String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id        String?           @unique @db.Uuid
  gas_estimate        Json?
  simulation_result   Json?
  execution_context   Json?
  performance_metrics Json?
  created_at          DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations    token_operations? @relation(fields: [operation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([operation_id], map: "idx_operation_metadata_operation")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model operation_validations {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id      String?           @db.Uuid
  policy_id         String?           @db.Uuid
  rule_evaluations  Json?
  validation_status String
  rejection_reasons String[]
  validated_by      String?           @db.Uuid
  validated_at      DateTime?         @db.Timestamptz(6)
  created_at        DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations  token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rules             rules?            @relation(fields: [policy_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)
  users             public_users?     @relation(fields: [validated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation_id], map: "idx_operation_validations_op")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model operator_status {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operator       String    @unique
  status         String?
  blocked_reason String?
  blocked_at     DateTime? @db.Timestamptz(6)
  blocked_until  DateTime? @db.Timestamptz(6)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([operator, status], map: "idx_operator_status_operator")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model organization_details {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  registration_number String?
  jurisdiction        String?
  address             Json?
  contact             Json?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model paymaster_policies {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  policy_name           String
  paymaster_address     String
  chain_id              Int
  policy_type           String
  policy_config         Json      @default("{}")
  is_active             Boolean?  @default(true)
  daily_limit           BigInt?
  monthly_limit         BigInt?
  whitelisted_addresses Json?     @default("[]")
  blacklisted_addresses Json?     @default("[]")
  allowed_functions     Json?     @default("[]")
  time_restrictions     Json?     @default("{}")
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([is_active], map: "idx_paymaster_policies_active")
  @@index([chain_id, is_active], map: "idx_paymaster_policies_chain_active")
  @@index([chain_id], map: "idx_paymaster_policies_chain_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pd_collateral {
  id                         String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_debt_product_id    String                @db.Uuid
  loan_id                    String                @db.Uuid
  collateral_type            String                @db.VarChar(50)
  collateral_description     String
  collateral_location        String?               @db.VarChar(255)
  original_value             Decimal               @db.Decimal(20, 2)
  current_value              Decimal               @db.Decimal(20, 2)
  currency                   String                @default("USD") @db.VarChar(3)
  valuation_date             DateTime              @db.Timestamptz(6)
  valuation_method           String?               @db.VarChar(50)
  loan_to_value_ratio        Decimal?              @db.Decimal(5, 2)
  advance_rate               Decimal?              @db.Decimal(5, 2)
  lien_position              String?               @db.VarChar(20)
  perfection_status          String?               @db.VarChar(50)
  ucc_filing_number          String?               @db.VarChar(100)
  insurance_coverage         Decimal?              @db.Decimal(20, 2)
  insurance_provider         String?               @db.VarChar(255)
  last_inspection_date       DateTime?             @db.Timestamptz(6)
  inspection_report_url      String?
  depreciation_rate          Decimal?              @db.Decimal(5, 2)
  liquidation_timeframe_days Int?
  estimated_recovery_value   Decimal?              @db.Decimal(20, 2)
  status                     String?               @default("active") @db.VarChar(20)
  notes                      String?
  created_at                 DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?             @default(now()) @db.Timestamptz(6)
  private_debt_products      private_debt_products @relation(fields: [private_debt_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([loan_id], map: "idx_pd_collateral_loan")
  @@index([private_debt_product_id], map: "idx_pd_collateral_pd_product")
  @@index([status], map: "idx_pd_collateral_status")
  @@index([collateral_type], map: "idx_pd_collateral_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pd_covenants {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_debt_product_id String                @db.Uuid
  loan_id                 String                @db.Uuid
  covenant_type           String                @db.VarChar(50)
  covenant_category       String?               @db.VarChar(50)
  covenant_description    String
  measurement_frequency   String?               @db.VarChar(20)
  test_date               DateTime              @db.Timestamptz(6)
  next_test_date          DateTime?             @db.Timestamptz(6)
  threshold_value         Decimal?              @db.Decimal(20, 6)
  actual_value            Decimal?              @db.Decimal(20, 6)
  threshold_operator      String?               @db.VarChar(10)
  is_compliant            Boolean
  breach_severity         String?               @db.VarChar(20)
  grace_period_days       Int?
  waiver_obtained         Boolean?              @default(false)
  waiver_expiration_date  DateTime?             @db.Timestamptz(6)
  cure_actions            Json?
  cure_deadline           DateTime?             @db.Timestamptz(6)
  consequences_of_breach  String?
  notification_required   Boolean?              @default(true)
  notification_sent       Boolean?              @default(false)
  historical_compliance   Json?
  status                  String?               @default("active") @db.VarChar(20)
  notes                   String?
  created_at              DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?             @default(now()) @db.Timestamptz(6)
  private_debt_products   private_debt_products @relation(fields: [private_debt_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  pd_default_events       pd_default_events[]

  @@index([is_compliant], map: "idx_pd_covenants_compliance")
  @@index([loan_id], map: "idx_pd_covenants_loan")
  @@index([private_debt_product_id], map: "idx_pd_covenants_pd_product")
  @@index([test_date], map: "idx_pd_covenants_test_date")
  @@index([covenant_type], map: "idx_pd_covenants_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pd_credit_ratings {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_debt_product_id String                @db.Uuid
  loan_id                 String                @db.Uuid
  borrower_id             String?               @db.Uuid
  rating_agency           String                @db.VarChar(50)
  rating_type             String?               @db.VarChar(50)
  rating                  String                @db.VarChar(10)
  rating_outlook          String?               @db.VarChar(20)
  rating_date             DateTime              @db.Timestamptz(6)
  previous_rating         String?               @db.VarChar(10)
  rating_action           String?               @db.VarChar(50)
  rating_methodology      String?
  key_rating_factors      Json?
  probability_of_default  Decimal?              @db.Decimal(5, 4)
  recovery_rate_estimate  Decimal?              @db.Decimal(5, 2)
  is_investment_grade     Boolean?
  rating_report_url       String?
  notes                   String?
  created_at              DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?             @default(now()) @db.Timestamptz(6)
  private_debt_products   private_debt_products @relation(fields: [private_debt_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([rating_agency], map: "idx_pd_credit_ratings_agency")
  @@index([rating_date], map: "idx_pd_credit_ratings_date")
  @@index([loan_id], map: "idx_pd_credit_ratings_loan")
  @@index([private_debt_product_id], map: "idx_pd_credit_ratings_pd_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pd_default_events {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_debt_product_id  String                @db.Uuid
  loan_id                  String                @db.Uuid
  event_type               String                @db.VarChar(50)
  event_date               DateTime              @db.Timestamptz(6)
  detection_date           DateTime              @db.Timestamptz(6)
  notification_date        DateTime?             @db.Timestamptz(6)
  days_past_due            Int?
  amount_in_default        Decimal?              @db.Decimal(20, 2)
  currency                 String                @default("USD") @db.VarChar(3)
  default_description      String
  covenant_breached_id     String?               @db.Uuid
  severity                 String                @db.VarChar(20)
  is_event_of_default      Boolean?              @default(false)
  cure_period_days         Int?
  cure_deadline            DateTime?             @db.Timestamptz(6)
  is_cured                 Boolean?              @default(false)
  cure_date                DateTime?             @db.Timestamptz(6)
  cure_actions_taken       Json?
  lender_actions           Json?
  forbearance_agreement    Json?
  restructuring_terms      Json?
  loss_mitigation_strategy String?
  expected_loss            Decimal?              @db.Decimal(20, 2)
  recovery_actions         Json?
  recovery_amount          Decimal?              @db.Decimal(20, 2)
  write_off_amount         Decimal?              @db.Decimal(20, 2)
  status                   String?               @default("active") @db.VarChar(20)
  notes                    String?
  created_at               DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?             @default(now()) @db.Timestamptz(6)
  pd_covenants             pd_covenants?         @relation(fields: [covenant_breached_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  private_debt_products    private_debt_products @relation(fields: [private_debt_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([event_date], map: "idx_pd_default_events_date")
  @@index([loan_id], map: "idx_pd_default_events_loan")
  @@index([private_debt_product_id], map: "idx_pd_default_events_pd_product")
  @@index([status], map: "idx_pd_default_events_status")
  @@index([event_type], map: "idx_pd_default_events_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pd_loan_schedules {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_debt_product_id String                @db.Uuid
  loan_id                 String                @db.Uuid
  payment_number          Int
  payment_date            DateTime              @db.Timestamptz(6)
  principal_amount        Decimal               @db.Decimal(20, 2)
  interest_amount         Decimal               @db.Decimal(20, 2)
  total_payment           Decimal               @db.Decimal(20, 2)
  currency                String                @default("USD") @db.VarChar(3)
  beginning_balance       Decimal               @db.Decimal(20, 2)
  ending_balance          Decimal               @db.Decimal(20, 2)
  payment_type            String?               @default("regular") @db.VarChar(50)
  interest_rate           Decimal               @db.Decimal(5, 4)
  days_in_period          Int?
  accrual_basis           String?               @db.VarChar(20)
  fees                    Decimal?              @default(0) @db.Decimal(20, 2)
  is_estimated            Boolean?              @default(false)
  notes                   String?
  created_at              DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?             @default(now()) @db.Timestamptz(6)
  private_debt_products   private_debt_products @relation(fields: [private_debt_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  pd_payment_history      pd_payment_history[]

  @@index([payment_date], map: "idx_pd_loan_schedules_date")
  @@index([loan_id], map: "idx_pd_loan_schedules_loan")
  @@index([private_debt_product_id], map: "idx_pd_loan_schedules_pd_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pd_payment_history {
  id                      String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_debt_product_id String                @db.Uuid
  loan_id                 String                @db.Uuid
  scheduled_payment_id    String?               @db.Uuid
  payment_date            DateTime              @db.Timestamptz(6)
  due_date                DateTime              @db.Timestamptz(6)
  principal_paid          Decimal               @db.Decimal(20, 2)
  interest_paid           Decimal               @db.Decimal(20, 2)
  fees_paid               Decimal?              @default(0) @db.Decimal(20, 2)
  penalties_paid          Decimal?              @default(0) @db.Decimal(20, 2)
  total_paid              Decimal               @db.Decimal(20, 2)
  currency                String                @default("USD") @db.VarChar(3)
  payment_method          String?               @db.VarChar(50)
  transaction_reference   String?               @db.VarChar(100)
  days_late               Int?                  @default(0)
  is_partial_payment      Boolean?              @default(false)
  is_prepayment           Boolean?              @default(false)
  prepayment_penalty      Decimal?              @db.Decimal(20, 2)
  remaining_balance       Decimal?              @db.Decimal(20, 2)
  status                  String?               @default("received") @db.VarChar(20)
  notes                   String?
  created_at              DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?             @default(now()) @db.Timestamptz(6)
  private_debt_products   private_debt_products @relation(fields: [private_debt_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  pd_loan_schedules       pd_loan_schedules?    @relation(fields: [scheduled_payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([payment_date], map: "idx_pd_payment_history_date")
  @@index([due_date], map: "idx_pd_payment_history_due_date")
  @@index([loan_id], map: "idx_pd_payment_history_loan")
  @@index([private_debt_product_id], map: "idx_pd_payment_history_pd_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pe_capital_calls {
  id                           String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_equity_product_id    String                  @db.Uuid
  fund_id                      String                  @db.Uuid
  call_number                  Int
  call_date                    DateTime                @db.Timestamptz(6)
  due_date                     DateTime                @db.Timestamptz(6)
  call_amount                  Decimal                 @db.Decimal(20, 2)
  currency                     String                  @default("USD") @db.VarChar(3)
  purpose                      String?
  target_investments           Json?
  call_percentage              Decimal?                @db.Decimal(5, 2)
  cumulative_called_percentage Decimal?                @db.Decimal(5, 2)
  notice_period_days           Int?
  payment_instructions         String?
  investor_allocations         Json?
  defaulted_investors          Json?
  total_received               Decimal?                @db.Decimal(20, 2)
  total_outstanding            Decimal?                @db.Decimal(20, 2)
  status                       String?                 @default("issued") @db.VarChar(20)
  is_emergency_call            Boolean?                @default(false)
  notes                        String?
  created_at                   DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?               @default(now()) @db.Timestamptz(6)
  private_equity_products      private_equity_products @relation(fields: [private_equity_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([call_date], map: "idx_pe_capital_calls_date")
  @@index([fund_id], map: "idx_pe_capital_calls_fund")
  @@index([private_equity_product_id], map: "idx_pe_capital_calls_pe_product")
  @@index([status], map: "idx_pe_capital_calls_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pe_distributions {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_equity_product_id String                  @db.Uuid
  fund_id                   String                  @db.Uuid
  distribution_number       Int
  distribution_date         DateTime                @db.Timestamptz(6)
  payment_date              DateTime                @db.Timestamptz(6)
  distribution_amount       Decimal                 @db.Decimal(20, 2)
  currency                  String                  @default("USD") @db.VarChar(3)
  distribution_type         String                  @db.VarChar(50)
  source_investment         String?                 @db.VarChar(255)
  source_event              String?                 @db.VarChar(100)
  investor_allocations      Json?
  tax_treatment             Json?
  withholding_taxes         Json?
  net_distribution          Decimal?                @db.Decimal(20, 2)
  payment_method            String?                 @db.VarChar(50)
  currency_hedging          Json?
  status                    String?                 @default("declared") @db.VarChar(20)
  notes                     String?
  created_at                DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?               @default(now()) @db.Timestamptz(6)
  private_equity_products   private_equity_products @relation(fields: [private_equity_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([distribution_date], map: "idx_pe_distributions_date")
  @@index([fund_id], map: "idx_pe_distributions_fund")
  @@index([private_equity_product_id], map: "idx_pe_distributions_pe_product")
  @@index([distribution_type], map: "idx_pe_distributions_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pe_performance_metrics {
  id                        String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_equity_product_id String                  @db.Uuid
  fund_id                   String                  @db.Uuid
  as_of_date                DateTime                @db.Timestamptz(6)
  calculation_date          DateTime                @default(now()) @db.Timestamptz(6)
  total_committed_capital   Decimal                 @db.Decimal(20, 2)
  total_called_capital      Decimal                 @db.Decimal(20, 2)
  total_distributed         Decimal                 @db.Decimal(20, 2)
  residual_value            Decimal                 @db.Decimal(20, 2)
  currency                  String                  @default("USD") @db.VarChar(3)
  irr                       Decimal?                @db.Decimal(5, 2)
  moic                      Decimal?                @db.Decimal(5, 2)
  tvpi                      Decimal?                @db.Decimal(5, 2)
  dpi                       Decimal?                @db.Decimal(5, 2)
  rvpi                      Decimal?                @db.Decimal(5, 2)
  pme                       Decimal?                @db.Decimal(5, 2)
  pme_benchmark             String?                 @db.VarChar(50)
  since_inception_irr       Decimal?                @db.Decimal(5, 2)
  vintage_year              Int?
  fund_age_years            Decimal?                @db.Decimal(5, 2)
  quartile_ranking          Int?
  peer_comparison           Json?
  j_curve_position          String?                 @db.VarChar(50)
  realized_investments      Int?
  unrealized_investments    Int?
  written_off_investments   Int?
  total_fees_paid           Decimal?                @db.Decimal(20, 2)
  carried_interest_accrued  Decimal?                @db.Decimal(20, 2)
  calculation_methodology   String?
  notes                     String?
  created_at                DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?               @default(now()) @db.Timestamptz(6)
  private_equity_products   private_equity_products @relation(fields: [private_equity_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([as_of_date], map: "idx_pe_performance_date")
  @@index([fund_id], map: "idx_pe_performance_fund")
  @@index([private_equity_product_id], map: "idx_pe_performance_pe_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pe_portfolio_companies {
  id                          String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  private_equity_product_id   String                  @db.Uuid
  fund_id                     String                  @db.Uuid
  company_name                String                  @db.VarChar(255)
  company_registration_number String?                 @db.VarChar(100)
  jurisdiction                String?                 @db.VarChar(100)
  industry_sector             String?                 @db.VarChar(100)
  initial_investment_date     DateTime                @db.Timestamptz(6)
  initial_cost_basis          Decimal                 @db.Decimal(20, 2)
  currency                    String                  @default("USD") @db.VarChar(3)
  ownership_percentage        Decimal?                @db.Decimal(5, 2)
  shares_owned                Decimal?                @db.Decimal(20, 2)
  total_shares_outstanding    Decimal?                @db.Decimal(20, 2)
  security_type               String?                 @db.VarChar(50)
  board_seats                 Int?
  investment_thesis           String?
  exit_strategy               String?                 @db.VarChar(100)
  target_hold_period_years    Int?
  target_return_multiple      Decimal?                @db.Decimal(5, 2)
  current_valuation           Decimal?                @db.Decimal(20, 2)
  unrealized_gain_loss        Decimal?                @db.Decimal(20, 2)
  total_capital_invested      Decimal?                @db.Decimal(20, 2)
  additional_investments      Json?
  partial_exits               Json?
  management_team             Json?
  key_metrics                 Json?
  investment_stage            String?                 @db.VarChar(50)
  status                      String?                 @default("active") @db.VarChar(20)
  exit_date                   DateTime?               @db.Timestamptz(6)
  exit_proceeds               Decimal?                @db.Decimal(20, 2)
  realized_gain_loss          Decimal?                @db.Decimal(20, 2)
  moic                        Decimal?                @db.Decimal(5, 2)
  irr                         Decimal?                @db.Decimal(5, 2)
  notes                       String?
  created_at                  DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?               @default(now()) @db.Timestamptz(6)
  private_equity_products     private_equity_products @relation(fields: [private_equity_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([fund_id], map: "idx_pe_portfolio_companies_fund")
  @@index([company_name], map: "idx_pe_portfolio_companies_name")
  @@index([private_equity_product_id], map: "idx_pe_portfolio_companies_pe_product")
  @@index([status], map: "idx_pe_portfolio_companies_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pe_valuations {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entity_id              String    @db.Uuid
  entity_type            String    @db.VarChar(50)
  valuation_date         DateTime  @db.Timestamptz(6)
  valuation_amount       Decimal   @db.Decimal(20, 2)
  currency               String    @default("USD") @db.VarChar(3)
  valuation_method       String    @db.VarChar(50)
  valuation_firm         String?   @db.VarChar(255)
  valuer_name            String?   @db.VarChar(255)
  ebitda                 Decimal?  @db.Decimal(20, 2)
  revenue                Decimal?  @db.Decimal(20, 2)
  valuation_multiple     Decimal?  @db.Decimal(10, 2)
  multiple_type          String?   @db.VarChar(50)
  discount_rate          Decimal?  @db.Decimal(5, 4)
  terminal_growth_rate   Decimal?  @db.Decimal(5, 4)
  comparable_companies   Json?
  precedent_transactions Json?
  adjustments            Json?
  fair_value_estimate    Decimal?  @db.Decimal(20, 2)
  fair_value_range       Json?
  confidence_level       String?   @db.VarChar(20)
  valuation_report_url   String?
  audit_status           String?   @default("pending") @db.VarChar(20)
  notes                  String?
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)

  @@index([valuation_date], map: "idx_pe_valuations_date")
  @@index([entity_id], map: "idx_pe_valuations_entity")
  @@index([valuation_method], map: "idx_pe_valuations_method")
  @@index([entity_type], map: "idx_pe_valuations_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model policy_operation_mappings {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  policy_id      String?   @db.Uuid
  operation_type String
  chain_id       String?
  token_standard String?
  conditions     Json?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)
  rules          rules?    @relation(fields: [policy_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation_type, chain_id], map: "idx_policy_op_mappings")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model policy_violations {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id     String?           @db.Uuid
  policy_id        String?           @db.Uuid
  violation_type   String
  severity         String
  description      String?
  resolved         Boolean?          @default(false)
  resolved_by      String?           @db.Uuid
  resolved_at      DateTime?         @db.Timestamptz(6)
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rules            rules?            @relation(fields: [policy_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)
  users            public_users?     @relation(fields: [resolved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model private_debt_products {
  id                            String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                    String               @unique(map: "idx_private_debt_products_project_id_unique") @db.Uuid
  deal_id                       String?              @db.VarChar(50)
  opportunity_source            String?              @db.VarChar(100)
  industry_sector               String?              @db.VarChar(100)
  company_name                  String?
  deal_size                     Decimal?             @db.Decimal
  screening_status              String?              @db.VarChar(50)
  due_diligence_status          String?              @db.VarChar(50)
  financial_metrics             Json?
  risk_profile                  String?              @db.VarChar(100)
  valuation_amount              Decimal?             @db.Decimal
  deal_structure_details        String?
  transaction_status            String?              @db.VarChar(50)
  execution_date                DateTime?            @db.Timestamptz(6)
  portfolio_performance_metrics Json?
  compliance_status             String?              @db.VarChar(50)
  monitoring_frequency          Int?
  advisory_service_type         String?              @db.VarChar(100)
  exit_strategy_status          String?              @db.VarChar(50)
  outcome                       String?
  debtor_credit_quality         String?              @db.VarChar(100)
  collection_period_days        Int?
  recovery_rate_percentage      Decimal?             @db.Decimal
  diversification_metrics       Json?
  status                        String?              @db.VarChar(50)
  target_raise                  Decimal?             @db.Decimal
  created_at                    DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?            @default(now()) @db.Timestamptz(6)
  pd_collateral                 pd_collateral[]
  pd_covenants                  pd_covenants[]
  pd_credit_ratings             pd_credit_ratings[]
  pd_default_events             pd_default_events[]
  pd_loan_schedules             pd_loan_schedules[]
  pd_payment_history            pd_payment_history[]
  projects                      projects             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_private_debt_products_project")

  @@index([deal_id], map: "idx_private_debt_products_deal_id")
  @@index([project_id], map: "idx_private_debt_products_project_id")
  @@schema("public")
}

model private_equity_products {
  id                        String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                String                   @unique(map: "idx_private_equity_products_project_id_unique") @db.Uuid
  fund_id                   String?                  @db.VarChar(50)
  fund_name                 String?
  fund_type                 String?                  @db.VarChar(50)
  fund_size                 Decimal?                 @db.Decimal
  formation_date            DateTime?                @db.Timestamptz(6)
  commitment_period         Int?
  capital_commitment        Decimal?                 @db.Decimal
  capital_call              Decimal?                 @db.Decimal
  invested_capital          Decimal?                 @db.Decimal
  management_fee            Decimal?                 @db.Decimal
  carried_interest          Decimal?                 @db.Decimal
  hurdle_rate               Decimal?                 @db.Decimal
  internal_rate_of_return   Decimal?                 @db.Decimal
  net_asset_value           Decimal?                 @db.Decimal
  distributed_to_paid_in    Decimal?                 @db.Decimal
  residual_value_to_paid_in Decimal?                 @db.Decimal
  investment_date           DateTime?                @db.Timestamptz(6)
  exit_date                 DateTime?                @db.Timestamptz(6)
  exit_mechanism            String?                  @db.VarChar(100)
  portfolio_company_id      String?                  @db.VarChar(50)
  stage_of_development      String?                  @db.VarChar(100)
  financing_round           String?                  @db.VarChar(50)
  investment_amount         Decimal?                 @db.Decimal
  valuation_pre_money       Decimal?                 @db.Decimal
  valuation_post_money      Decimal?                 @db.Decimal
  ownership_percentage      Decimal?                 @db.Decimal
  investor_type             String?                  @db.VarChar(100)
  status                    String?                  @db.VarChar(50)
  target_raise              Decimal?                 @db.Decimal
  created_at                DateTime?                @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?                @default(now()) @db.Timestamptz(6)
  fund_vintage_year         String?                  @db.VarChar
  investment_stage          String?                  @db.VarChar
  sector_focus              String?                  @db.VarChar
  geographic_focus          String?                  @db.VarChar
  pe_capital_calls          pe_capital_calls[]
  pe_distributions          pe_distributions[]
  pe_performance_metrics    pe_performance_metrics[]
  pe_portfolio_companies    pe_portfolio_companies[]
  projects                  projects                 @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_private_equity_products_project")

  @@index([fund_id], map: "idx_private_equity_products_fund_id")
  @@index([project_id], map: "idx_private_equity_products_project_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_lifecycle_events {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id       String    @db.Uuid
  product_type     String?   @db.VarChar(100)
  event_type       String?   @db.VarChar(100)
  event_date       DateTime? @db.Timestamptz(6)
  quantity         Decimal?  @db.Decimal(18, 8)
  transaction_hash String?   @db.VarChar(255)
  actor            String?   @db.VarChar(255)
  details          String?
  status           String?   @db.VarChar(50)
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([product_id], map: "idx_lifecycle_events_product_id")
  @@index([event_date], map: "idx_product_lifecycle_events_event_date")
  @@index([event_type], map: "idx_product_lifecycle_events_event_type")
  @@index([product_id], map: "idx_product_lifecycle_events_product_id")
  @@index([product_type], map: "idx_product_lifecycle_events_product_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model production_data {
  production_id        String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_id             String?        @db.Uuid
  production_date      DateTime       @db.Date
  output_mwh           Decimal        @db.Decimal(10, 2)
  weather_condition_id String?        @db.Uuid
  created_at           DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?      @default(now()) @db.Timestamptz(6)
  energy_assets        energy_assets? @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction)
  weather_data         weather_data?  @relation(fields: [weather_condition_id], references: [weather_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([asset_id, production_date], map: "idx_production_asset_date")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model profiles {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?       @db.Uuid
  profile_type profile_type?
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime      @default(now()) @db.Timestamptz(6)
  authUsers        auth_users    @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  publicUsers        public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([profile_type])
  @@index([user_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model project_organization_assignments {
  id                String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id        String        @db.Uuid
  organization_id   String        @db.Uuid
  relationship_type String
  notes             String?
  is_active         Boolean?      @default(true)
  assigned_by       String?       @db.Uuid
  assigned_at       DateTime?     @default(now()) @db.Timestamptz(6)
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?     @default(now()) @db.Timestamptz(6)
  users             auth_users?   @relation(fields: [assigned_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations     organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  projects          projects      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([project_id, organization_id, relationship_type], map: "unique_project_organization_relationship")
  @@index([organization_id], map: "idx_project_organization_assignments_organization_id")
  @@index([project_id], map: "idx_project_organization_assignments_project_id")
  @@index([relationship_type], map: "idx_project_organization_assignments_relationship_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model project_wallets {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  project_id         String               @db.Uuid
  wallet_type        String
  wallet_address     String               @unique(map: "uq_project_wallets_wallet_address")
  public_key         String
  private_key        String?
  mnemonic           String?
  key_vault_id       String?
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  chain_id           String?
  net                String?
  projects           projects             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  wallet_access_logs wallet_access_logs[]

  @@index([project_id], map: "idx_project_wallets_project_id")
  @@index([wallet_type], map: "idx_project_wallets_wallet_type")
  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model projects_backup {
  id                            String?           @db.Uuid
  name                          String?
  description                   String?
  created_at                    DateTime?         @db.Timestamptz(6)
  updated_at                    DateTime?         @db.Timestamptz(6)
  project_type                  String?
  token_symbol                  String?
  target_raise                  Decimal?          @db.Decimal
  authorized_shares             Int?
  share_price                   Decimal?          @db.Decimal
  company_valuation             Decimal?          @db.Decimal
  legal_entity                  String?
  jurisdiction                  String?
  tax_id                        String?
  status                        String?
  is_primary                    Boolean?
  investment_status             String?
  estimated_yield_percentage    Decimal?          @db.Decimal
  duration                      project_duration?
  subscription_start_date       DateTime?         @db.Timestamptz(6)
  subscription_end_date         DateTime?         @db.Timestamptz(6)
  transaction_start_date        DateTime?         @db.Timestamptz(6)
  maturity_date                 DateTime?         @db.Timestamptz(6)
  currency                      String?           @db.VarChar(3)
  minimum_investment            Decimal?          @db.Decimal
  total_notional                Decimal?          @db.Decimal
  sustainability_classification String?           @db.VarChar(50)
  esg_risk_rating               String?           @db.VarChar(20)
  principal_adverse_impacts     String?           @db.VarChar(20)
  taxonomy_alignment_percentage Decimal?          @db.Decimal(5, 2)
  risk_profile                  String?           @db.VarChar(20)
  governance_structure          String?
  compliance_framework          String[]
  third_party_custodian         Boolean?
  custodian_name                String?
  target_investor_type          String?           @db.VarChar(20)
  complexity_indicator          String?           @db.VarChar(20)
  liquidity_terms               String?           @db.VarChar(50)
  fee_structure_summary         String?
  capital_protection_level      Decimal?          @db.Decimal(5, 2)
  underlying_assets             String[]
  barrier_level                 Decimal?          @db.Decimal(10, 2)
  payoff_structure              String?           @db.VarChar(50)
  voting_rights                 String?           @db.VarChar(50)
  dividend_policy               String?
  dilution_protection           String[]
  exit_strategy                 String?           @db.VarChar(50)
  credit_rating                 String?           @db.VarChar(10)
  coupon_frequency              String?           @db.VarChar(20)
  callable_features             Boolean?
  call_date                     DateTime?         @db.Timestamptz(6)
  call_price                    Decimal?          @db.Decimal(10, 2)
  security_collateral           String?
  fund_vintage_year             Int?
  investment_stage              String?           @db.VarChar(50)
  sector_focus                  String[]
  geographic_focus              String[]
  property_type                 String?           @db.VarChar(50)
  geographic_location           String?
  development_stage             String?           @db.VarChar(50)
  environmental_certifications  String[]
  debtor_credit_quality         String?           @db.VarChar(20)
  collection_period_days        Int?
  recovery_rate_percentage      Decimal?          @db.Decimal(5, 2)
  diversification_metrics       Json?
  project_capacity_mw           Decimal?          @db.Decimal(10, 2)
  power_purchase_agreements     String?
  regulatory_approvals          String[]
  carbon_offset_potential       Decimal?          @db.Decimal(10, 2)
  blockchain_network            String?           @db.VarChar(50)
  smart_contract_audit_status   String?           @db.VarChar(20)
  consensus_mechanism           String?           @db.VarChar(50)
  gas_fee_structure             String?
  oracle_dependencies           String[]
  collateral_type               String?           @db.VarChar(20)
  reserve_management_policy     String?
  audit_frequency               String?           @db.VarChar(20)
  redemption_mechanism          String?
  depeg_risk_mitigation         String[]
  token_economics               String?
  custody_arrangements          String?
  smart_contract_address        String?           @db.VarChar(42)
  upgrade_governance            String?
  data_processing_basis         String?           @db.VarChar(30)
  privacy_policy_link           String?
  data_retention_policy         String?
  business_continuity_plan      Boolean?
  cybersecurity_framework       String[]
  disaster_recovery_procedures  String?
  tax_reporting_obligations     String[]
  regulatory_permissions        String[]
  cross_border_implications     String?

  @@ignore
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model property_expenses {
  id                         String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  real_estate_product_id     String               @db.Uuid
  expense_date               DateTime             @db.Timestamptz(6)
  expense_type               String               @db.VarChar(50)
  expense_category           String               @db.VarChar(100)
  description                String?
  amount                     Decimal              @db.Decimal(20, 2)
  currency                   String               @default("USD") @db.VarChar(3)
  frequency                  String?              @db.VarChar(20)
  is_recurring               Boolean?             @default(false)
  vendor_name                String?              @db.VarChar(255)
  invoice_number             String?              @db.VarChar(100)
  payment_date               DateTime?            @db.Timestamptz(6)
  payment_status             String?              @default("pending") @db.VarChar(20)
  allocation_method          String?              @db.VarChar(50)
  allocated_to_units         Json?
  is_capital_expenditure     Boolean?             @default(false)
  amortization_period_months Int?
  budget_category            String?              @db.VarChar(100)
  budget_variance            Decimal?             @db.Decimal(20, 2)
  approval_status            String?              @default("approved") @db.VarChar(20)
  notes                      String?
  created_at                 DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?            @default(now()) @db.Timestamptz(6)
  real_estate_products       real_estate_products @relation(fields: [real_estate_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([expense_category], map: "idx_property_expenses_category")
  @@index([expense_date], map: "idx_property_expenses_date")
  @@index([real_estate_product_id], map: "idx_property_expenses_re_product")
  @@index([expense_type], map: "idx_property_expenses_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model property_insurance {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  real_estate_product_id String               @db.Uuid
  property_type          String               @db.VarChar(50)
  insurance_type         String               @db.VarChar(50)
  policy_number          String               @db.VarChar(100)
  insurance_provider     String               @db.VarChar(255)
  coverage_amount        Decimal              @db.Decimal(20, 2)
  currency               String               @default("USD") @db.VarChar(3)
  premium_amount         Decimal              @db.Decimal(20, 2)
  premium_frequency      String               @db.VarChar(20)
  deductible             Decimal?             @db.Decimal(20, 2)
  policy_start_date      DateTime             @db.Timestamptz(6)
  policy_end_date        DateTime             @db.Timestamptz(6)
  effective_date         DateTime             @db.Timestamptz(6)
  covered_perils         Json?
  exclusions             Json?
  additional_insureds    Json?
  loss_payee             String?              @db.VarChar(255)
  claims_history         Json?
  risk_assessment        Json?
  inspection_date        DateTime?            @db.Timestamptz(6)
  inspection_report_url  String?
  renewal_options        Json?
  cancellation_terms     String?
  status                 String?              @default("active") @db.VarChar(20)
  is_adequate_coverage   Boolean?             @default(true)
  notes                  String?
  created_at             DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?            @default(now()) @db.Timestamptz(6)
  real_estate_products   real_estate_products @relation(fields: [real_estate_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([policy_end_date], map: "idx_property_insurance_end_date")
  @@index([policy_number], map: "idx_property_insurance_policy")
  @@index([real_estate_product_id], map: "idx_property_insurance_re_product")
  @@index([policy_start_date], map: "idx_property_insurance_start_date")
  @@index([insurance_type], map: "idx_property_insurance_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model property_tax_rates {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  jurisdiction         String    @db.VarChar(255)
  city                 String?   @db.VarChar(100)
  state_province       String    @db.VarChar(100)
  country              String    @db.VarChar(3)
  property_type        String    @db.VarChar(50)
  tax_rate             Decimal   @db.Decimal(5, 4)
  assessment_ratio     Decimal?  @db.Decimal(5, 4)
  effective_date       DateTime  @db.Timestamptz(6)
  expiration_date      DateTime? @db.Timestamptz(6)
  tax_year             Int
  millage_rate         Decimal?  @db.Decimal(10, 4)
  exemptions           Json?
  special_assessments  Json?
  calculation_method   String?
  payment_schedule     String?   @db.VarChar(50)
  due_dates            Json?
  late_payment_penalty Decimal?  @db.Decimal(5, 2)
  source               String?   @db.VarChar(255)
  is_current           Boolean?  @default(true)
  notes                String?
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([jurisdiction], map: "idx_property_tax_rates_jurisdiction")
  @@index([state_province, country], map: "idx_property_tax_rates_location")
  @@index([property_type], map: "idx_property_tax_rates_type")
  @@index([tax_year], map: "idx_property_tax_rates_year")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model property_valuations {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  real_estate_product_id String               @db.Uuid
  valuation_date         DateTime             @db.Timestamptz(6)
  valuation_amount       Decimal              @db.Decimal(20, 2)
  currency               String               @default("USD") @db.VarChar(3)
  valuation_method       String               @db.VarChar(50)
  appraiser_name         String?              @db.VarChar(255)
  appraiser_license      String?              @db.VarChar(100)
  appraiser_firm         String?              @db.VarChar(255)
  cap_rate               Decimal?             @db.Decimal(5, 4)
  discount_rate          Decimal?             @db.Decimal(5, 4)
  noi                    Decimal?             @db.Decimal(20, 2)
  gross_rental_income    Decimal?             @db.Decimal(20, 2)
  operating_expenses     Decimal?             @db.Decimal(20, 2)
  comparable_sales       Json?
  adjustments_made       Json?
  market_conditions      String?
  highest_best_use       String?
  valuation_report_url   String?
  confidence_level       String?              @db.VarChar(20)
  purpose                String?              @db.VarChar(100)
  is_certified           Boolean?             @default(false)
  notes                  String?
  created_at             DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?            @default(now()) @db.Timestamptz(6)
  real_estate_products   real_estate_products @relation(fields: [real_estate_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([valuation_date], map: "idx_property_valuations_date")
  @@index([valuation_method], map: "idx_property_valuations_method")
  @@index([real_estate_product_id], map: "idx_property_valuations_re_product")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model proposal_signatures {
  id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  proposal_id         String?              @db.Uuid
  signer_address      String
  signature           String
  signature_type      String
  signed_at           DateTime?            @default(now()) @db.Timestamptz(6)
  is_valid            Boolean?             @default(true)
  validation_error    String?
  multi_sig_proposals multi_sig_proposals? @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([proposal_id, signer_address])
  @@index([proposal_id], map: "idx_signatures_proposal_id")
  @@index([signer_address], map: "idx_signatures_signer")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quant_backtests {
  id                                            String                                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantitative_investment_strategies_product_id String                                      @db.Uuid
  backtest_name                                 String                                      @db.VarChar(255)
  backtest_date                                 DateTime                                    @db.Timestamptz(6)
  start_date                                    DateTime                                    @db.Timestamptz(6)
  end_date                                      DateTime                                    @db.Timestamptz(6)
  strategy_version                              String?                                     @db.VarChar(50)
  universe_definition                           String?
  initial_capital                               Decimal                                     @db.Decimal(20, 2)
  final_value                                   Decimal                                     @db.Decimal(20, 2)
  currency                                      String?                                     @default("USD") @db.VarChar(3)
  total_return                                  Decimal?                                    @db.Decimal(5, 2)
  annualized_return                             Decimal?                                    @db.Decimal(5, 2)
  annualized_volatility                         Decimal?                                    @db.Decimal(5, 2)
  sharpe_ratio                                  Decimal?                                    @db.Decimal(5, 2)
  sortino_ratio                                 Decimal?                                    @db.Decimal(5, 2)
  max_drawdown                                  Decimal?                                    @db.Decimal(5, 2)
  max_drawdown_duration_days                    Int?
  calmar_ratio                                  Decimal?                                    @db.Decimal(5, 2)
  win_rate                                      Decimal?                                    @db.Decimal(5, 2)
  profit_factor                                 Decimal?                                    @db.Decimal(5, 2)
  number_of_trades                              Int?
  average_trade_return                          Decimal?                                    @db.Decimal(5, 2)
  average_win                                   Decimal?                                    @db.Decimal(5, 2)
  average_loss                                  Decimal?                                    @db.Decimal(5, 2)
  largest_win                                   Decimal?                                    @db.Decimal(5, 2)
  largest_loss                                  Decimal?                                    @db.Decimal(5, 2)
  turnover_rate                                 Decimal?                                    @db.Decimal(5, 2)
  transaction_costs                             Decimal?                                    @db.Decimal(20, 2)
  slippage_costs                                Decimal?                                    @db.Decimal(20, 2)
  benchmark_return                              Decimal?                                    @db.Decimal(5, 2)
  benchmark_index                               String?                                     @db.VarChar(50)
  excess_return                                 Decimal?                                    @db.Decimal(5, 2)
  alpha                                         Decimal?                                    @db.Decimal(5, 2)
  beta                                          Decimal?                                    @db.Decimal(5, 4)
  tracking_error                                Decimal?                                    @db.Decimal(5, 2)
  information_ratio                             Decimal?                                    @db.Decimal(5, 2)
  factor_loadings                               Json?
  monthly_returns                               Json?
  daily_returns                                 Json?
  equity_curve                                  Json?
  drawdown_curve                                Json?
  out_of_sample_performance                     Json?
  stress_test_results                           Json?
  robustness_checks                             Json?
  data_quality_issues                           String?
  assumptions                                   String?
  limitations                                   String?
  notes                                         String?
  created_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  quantitative_investment_strategies_products   quantitative_investment_strategies_products @relation(fields: [quantitative_investment_strategies_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([backtest_date], map: "idx_quant_backtests_date")
  @@index([quantitative_investment_strategies_product_id], map: "idx_quant_backtests_quant_product")
  @@index([start_date], map: "idx_quant_backtests_start_date")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quant_factors {
  id                                            String                                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantitative_investment_strategies_product_id String                                      @db.Uuid
  factor_name                                   String                                      @db.VarChar(100)
  factor_category                               String?                                     @db.VarChar(50)
  factor_definition                             String
  calculation_methodology                       String
  data_frequency                                String?                                     @db.VarChar(20)
  rebalancing_frequency                         String?                                     @db.VarChar(20)
  target_exposure                               Decimal?                                    @db.Decimal(5, 2)
  current_exposure                              Decimal?                                    @db.Decimal(5, 2)
  exposure_range                                Json?
  historical_return                             Decimal?                                    @db.Decimal(5, 2)
  historical_volatility                         Decimal?                                    @db.Decimal(5, 2)
  sharpe_ratio                                  Decimal?                                    @db.Decimal(5, 2)
  information_ratio                             Decimal?                                    @db.Decimal(5, 2)
  turnover_rate                                 Decimal?                                    @db.Decimal(5, 2)
  transaction_costs_bps                         Int?
  capacity_estimate                             Decimal?                                    @db.Decimal(20, 2)
  correlation_to_other_factors                  Json?
  factor_timing_rules                           String?
  risk_controls                                 Json?
  academic_references                           String?
  is_active                                     Boolean?                                    @default(true)
  inception_date                                DateTime?                                   @db.Timestamptz(6)
  notes                                         String?
  created_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  quantitative_investment_strategies_products   quantitative_investment_strategies_products @relation(fields: [quantitative_investment_strategies_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([factor_category], map: "idx_quant_factors_category")
  @@index([factor_name], map: "idx_quant_factors_name")
  @@index([quantitative_investment_strategies_product_id], map: "idx_quant_factors_quant_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quant_performance_attribution {
  id                                            String                                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantitative_investment_strategies_product_id String                                      @db.Uuid
  period_start_date                             DateTime                                    @db.Timestamptz(6)
  period_end_date                               DateTime                                    @db.Timestamptz(6)
  total_return                                  Decimal                                     @db.Decimal(5, 2)
  currency                                      String?                                     @default("USD") @db.VarChar(3)
  factor_returns                                Json
  alpha                                         Decimal?                                    @db.Decimal(5, 2)
  beta_adjusted_return                          Decimal?                                    @db.Decimal(5, 2)
  benchmark_return                              Decimal?                                    @db.Decimal(5, 2)
  excess_return                                 Decimal?                                    @db.Decimal(5, 2)
  transaction_costs                             Decimal?                                    @db.Decimal(5, 2)
  management_fees                               Decimal?                                    @db.Decimal(5, 2)
  net_return                                    Decimal?                                    @db.Decimal(5, 2)
  value_factor_return                           Decimal?                                    @db.Decimal(5, 2)
  momentum_factor_return                        Decimal?                                    @db.Decimal(5, 2)
  quality_factor_return                         Decimal?                                    @db.Decimal(5, 2)
  size_factor_return                            Decimal?                                    @db.Decimal(5, 2)
  volatility_factor_return                      Decimal?                                    @db.Decimal(5, 2)
  carry_factor_return                           Decimal?                                    @db.Decimal(5, 2)
  other_factor_returns                          Json?
  sector_attribution                            Json?
  geographic_attribution                        Json?
  security_selection_effect                     Decimal?                                    @db.Decimal(5, 2)
  allocation_effect                             Decimal?                                    @db.Decimal(5, 2)
  interaction_effect                            Decimal?                                    @db.Decimal(5, 2)
  timing_effect                                 Decimal?                                    @db.Decimal(5, 2)
  top_contributors                              Json?
  top_detractors                                Json?
  turnover                                      Decimal?                                    @db.Decimal(5, 2)
  gross_leverage                                Decimal?                                    @db.Decimal(5, 2)
  net_leverage                                  Decimal?                                    @db.Decimal(5, 2)
  var_95                                        Decimal?                                    @db.Decimal(5, 2)
  expected_shortfall                            Decimal?                                    @db.Decimal(5, 2)
  notes                                         String?
  created_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  quantitative_investment_strategies_products   quantitative_investment_strategies_products @relation(fields: [quantitative_investment_strategies_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([period_start_date, period_end_date], map: "idx_quant_performance_attribution_period")
  @@index([quantitative_investment_strategies_product_id], map: "idx_quant_performance_attribution_quant_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quant_risk_metrics {
  id                                            String                                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantitative_investment_strategies_product_id String                                      @db.Uuid
  calculation_date                              DateTime                                    @db.Timestamptz(6)
  portfolio_value                               Decimal                                     @db.Decimal(20, 2)
  currency                                      String?                                     @default("USD") @db.VarChar(3)
  gross_leverage                                Decimal?                                    @db.Decimal(5, 2)
  net_leverage                                  Decimal?                                    @db.Decimal(5, 2)
  long_exposure                                 Decimal?                                    @db.Decimal(5, 2)
  short_exposure                                Decimal?                                    @db.Decimal(5, 2)
  net_exposure                                  Decimal?                                    @db.Decimal(5, 2)
  var_95_1day                                   Decimal?                                    @db.Decimal(20, 2)
  var_99_1day                                   Decimal?                                    @db.Decimal(20, 2)
  expected_shortfall_95                         Decimal?                                    @db.Decimal(20, 2)
  volatility_20day                              Decimal?                                    @db.Decimal(5, 2)
  volatility_60day                              Decimal?                                    @db.Decimal(5, 2)
  beta_to_market                                Decimal?                                    @db.Decimal(5, 4)
  correlation_to_market                         Decimal?                                    @db.Decimal(5, 4)
  tracking_error                                Decimal?                                    @db.Decimal(5, 2)
  max_drawdown_current                          Decimal?                                    @db.Decimal(5, 2)
  days_in_drawdown                              Int?
  concentration_risk                            Json?
  factor_exposures                              Json?
  sector_exposures                              Json?
  geographic_exposures                          Json?
  currency_exposures                            Json?
  liquidity_score                               Int?
  estimated_liquidation_time_days               Int?
  stress_test_scenarios                         Json?
  position_limits_breached                      Json?
  risk_budget_utilization                       Json?
  correlation_breakdown                         Boolean?                                    @default(false)
  regime_detection                              String?                                     @db.VarChar(50)
  tail_risk_indicators                          Json?
  notes                                         String?
  created_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  quantitative_investment_strategies_products   quantitative_investment_strategies_products @relation(fields: [quantitative_investment_strategies_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([calculation_date], map: "idx_quant_risk_metrics_date")
  @@index([quantitative_investment_strategies_product_id], map: "idx_quant_risk_metrics_quant_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model quant_signals {
  id                                            String                                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantitative_investment_strategies_product_id String                                      @db.Uuid
  signal_timestamp                              DateTime                                    @db.Timestamptz(6)
  signal_type                                   String                                      @db.VarChar(50)
  asset_class                                   String?                                     @db.VarChar(50)
  security_ticker                               String?                                     @db.VarChar(50)
  security_name                                 String?                                     @db.VarChar(255)
  signal_strength                               Decimal?                                    @db.Decimal(5, 2)
  confidence_level                              Decimal?                                    @db.Decimal(5, 2)
  recommended_action                            String?                                     @db.VarChar(50)
  recommended_position_size                     Decimal?                                    @db.Decimal(20, 2)
  recommended_weight                            Decimal?                                    @db.Decimal(5, 2)
  current_position_size                         Decimal?                                    @db.Decimal(20, 2)
  current_weight                                Decimal?                                    @db.Decimal(5, 2)
  target_price                                  Decimal?                                    @db.Decimal(20, 8)
  stop_loss_price                               Decimal?                                    @db.Decimal(20, 8)
  take_profit_price                             Decimal?                                    @db.Decimal(20, 8)
  time_horizon                                  String?                                     @db.VarChar(20)
  factor_contribution                           Json?
  model_inputs                                  Json?
  model_outputs                                 Json?
  risk_metrics                                  Json?
  execution_priority                            String?                                     @db.VarChar(20)
  execution_deadline                            DateTime?                                   @db.Timestamptz(6)
  was_executed                                  Boolean?                                    @default(false)
  execution_timestamp                           DateTime?                                   @db.Timestamptz(6)
  execution_price                               Decimal?                                    @db.Decimal(20, 8)
  execution_size                                Decimal?                                    @db.Decimal(20, 2)
  slippage                                      Decimal?                                    @db.Decimal(20, 8)
  signal_performance                            Decimal?                                    @db.Decimal(5, 2)
  signal_status                                 String?                                     @default("active") @db.VarChar(20)
  notes                                         String?
  created_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime?                                   @default(now()) @db.Timestamptz(6)
  quantitative_investment_strategies_products   quantitative_investment_strategies_products @relation(fields: [quantitative_investment_strategies_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([quantitative_investment_strategies_product_id], map: "idx_quant_signals_quant_product")
  @@index([signal_status], map: "idx_quant_signals_status")
  @@index([security_ticker], map: "idx_quant_signals_ticker")
  @@index([signal_timestamp], map: "idx_quant_signals_timestamp")
  @@index([signal_type], map: "idx_quant_signals_type")
  @@schema("public")
}

model quantitative_investment_strategies_products {
  id                            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                    String                          @unique @db.Uuid
  strategy_id                   String?                         @db.VarChar
  strategy_name                 String?                         @db.VarChar
  strategy_type                 String?                         @db.VarChar
  parameters                    Json?
  underlying_assets             String[]
  risk_metrics                  Decimal?                        @db.Decimal
  benchmark                     String?                         @db.VarChar
  data_sources                  String[]
  machine_learning_flags        Boolean?
  currency                      String?                         @db.VarChar
  inception_date                DateTime?                       @db.Timestamptz(6)
  termination_date              DateTime?                       @db.Timestamptz(6)
  status                        String?                         @db.VarChar
  backtest_history              Json?
  adjustment_history            Json?
  performance_attribution       Json?
  target_raise                  Decimal?                        @db.Decimal
  created_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  quant_backtests               quant_backtests[]
  quant_factors                 quant_factors[]
  quant_performance_attribution quant_performance_attribution[]
  quant_risk_metrics            quant_risk_metrics[]
  quant_signals                 quant_signals[]
  projects                      projects                        @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model quantitative_strategies {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id              String    @unique(map: "idx_quantitative_strategies_project_id_unique") @db.Uuid
  strategy_id             String?   @db.VarChar(50)
  strategy_name           String?
  strategy_type           String?   @db.VarChar(100)
  parameters              Json?
  underlying_assets       String[]
  risk_metrics            Json?
  benchmark               String?
  data_sources            String[]
  machine_learning_flags  Boolean?
  currency                String?   @db.VarChar(10)
  inception_date          DateTime? @db.Timestamptz(6)
  termination_date        DateTime? @db.Timestamptz(6)
  status                  String?   @db.VarChar(50)
  backtest_history        Json?
  adjustment_history      Json?
  performance_attribution Json?
  target_raise            Decimal?  @db.Decimal
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)
  projects                projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_quantitative_strategies_project")

  @@index([strategy_id], map: "idx_quantitative_strategies_strategy_id")
  @@schema("public")
}

model real_estate_products {
  id                           String                         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                   String                         @unique(map: "idx_real_estate_products_project_id_unique") @db.Uuid
  property_id                  String?                        @db.VarChar(50)
  property_name                String?
  property_address             String?
  property_type                String?                        @db.VarChar(100)
  acquisition_date             DateTime?                      @db.Timestamptz(6)
  building                     String?
  unit                         String?
  area_type                    String?                        @db.VarChar(50)
  units                        Decimal?                       @db.Decimal
  lease_number                 String?                        @db.VarChar(50)
  tenant                       String?
  lease_begin_date             DateTime?                      @db.Timestamptz(6)
  lease_end_date               DateTime?                      @db.Timestamptz(6)
  lease_manager                String?
  lease_classification         String?                        @db.VarChar(50)
  borrowing_rate               Decimal?                       @db.Decimal
  asset_number                 String?                        @db.VarChar(50)
  gross_amount                 Decimal?                       @db.Decimal
  taxable_amount               Decimal?                       @db.Decimal
  billing_frequency            String?                        @db.VarChar(50)
  starting_date                DateTime?                      @db.Timestamptz(6)
  ending_date                  DateTime?                      @db.Timestamptz(6)
  status                       String?                        @db.VarChar(50)
  disposition_date             DateTime?                      @db.Timestamptz(6)
  geographic_location          String?
  development_stage            String?                        @db.VarChar(100)
  environmental_certs          String[]
  target_raise                 Decimal?                       @db.Decimal
  created_at                   DateTime?                      @default(now()) @db.Timestamptz(6)
  updated_at                   DateTime?                      @default(now()) @db.Timestamptz(6)
  environmental_certifications environmental_certifications[]
  lease_agreements             lease_agreements[]
  property_expenses            property_expenses[]
  property_insurance           property_insurance[]
  property_valuations          property_valuations[]
  projects                     projects                       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_real_estate_products_project")

  @@index([project_id], map: "idx_real_estate_products_project_id")
  @@index([property_id], map: "idx_real_estate_products_property_id")
  @@schema("public")
}

model rec_price_cache {
  cache_id    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date        DateTime  @db.Date
  price       Decimal   @db.Decimal
  market_type String    @db.VarChar(50)
  region      String    @db.VarChar(50)
  source      String    @db.VarChar(100)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@index([date], map: "idx_rec_price_cache_date")
  @@index([market_type], map: "idx_rec_price_cache_market_type")
  @@index([region], map: "idx_rec_price_cache_region")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_analytics {
  id                      String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  redemption_window_id    String                   @db.Uuid
  total_eligible_tokens   Decimal?                 @default(0) @db.Decimal(78, 18)
  total_requested_tokens  Decimal?                 @default(0) @db.Decimal(78, 18)
  total_approved_tokens   Decimal?                 @default(0) @db.Decimal(78, 18)
  total_processed_tokens  Decimal?                 @default(0) @db.Decimal(78, 18)
  eligible_investors      Int?                     @default(0)
  participating_investors Int?                     @default(0)
  average_request_size    Decimal?                 @default(0) @db.Decimal(78, 18)
  median_request_size     Decimal?                 @default(0) @db.Decimal(78, 18)
  average_processing_time Unsupported("interval")?
  pro_rata_factor_applied Decimal?                 @default(1.0000) @db.Decimal(5, 4)
  total_fees_collected    Decimal?                 @default(0) @db.Decimal(78, 18)
  calculated_at           DateTime?                @default(now()) @db.Timestamptz(6)
  redemption_windows      redemption_windows       @relation(fields: [redemption_window_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_analytics_window")

  @@index([redemption_window_id], map: "idx_redemption_analytics_window_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_notifications {
  id                   String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  redemption_window_id String             @db.Uuid
  user_id              String             @db.Uuid
  notification_type    String
  title                String
  message              String
  is_read              Boolean?           @default(false)
  sent_at              DateTime?          @default(now()) @db.Timestamptz(6)
  read_at              DateTime?          @db.Timestamptz(6)
  users                auth_users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_notifications_user")
  redemption_windows   redemption_windows @relation(fields: [redemption_window_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_notifications_window")

  @@index([is_read], map: "idx_redemption_notifications_is_read")
  @@index([notification_type], map: "idx_redemption_notifications_type")
  @@index([user_id], map: "idx_redemption_notifications_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model redemption_window_templates {
  id                                   String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                                 String
  description                          String?
  submission_date_mode                 String      @default("fixed")
  processing_date_mode                 String      @default("fixed")
  lockup_days                          Int?        @default(0)
  processing_offset_days               Int         @default(1)
  default_nav_source                   String?     @default("manual")
  default_enable_pro_rata_distribution Boolean?    @default(true)
  default_auto_process                 Boolean?    @default(false)
  is_active                            Boolean?    @default(true)
  created_by                           String?     @db.Uuid
  project_id                           String?     @db.Uuid
  organization_id                      String?     @db.Uuid
  created_at                           DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at                           DateTime?   @default(now()) @db.Timestamptz(6)
  users                                auth_users? @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_templates_created_by")
  projects                             projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_templates_project")

  @@index([is_active], map: "idx_redemption_templates_is_active")
  @@index([project_id], map: "idx_redemption_templates_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model regulatory_exemptions {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  region         String
  country        String
  exemption_type String
  explanation    String
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  updated_at     DateTime @default(now()) @db.Timestamptz(6)

  @@unique([region, country, exemption_type], map: "unique_region_country_exemption_type")
  @@index([country], map: "idx_regulatory_exemptions_country")
  @@index([exemption_type], map: "idx_regulatory_exemptions_exemption_type")
  @@index([region], map: "idx_regulatory_exemptions_region")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model regulatory_registrations {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                String
  registration_number String?   @unique
  issued_by           String?
  issued_at           DateTime? @db.Timestamptz(6)
  expires_at          DateTime? @db.Timestamptz(6)
  status              String?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model regulatory_reports {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                   String
  jurisdiction           String
  reporting_period_start DateTime  @db.Timestamptz(6)
  reporting_period_end   DateTime  @db.Timestamptz(6)
  compliance_status      Json?
  violations             Json[]
  remediation_actions    Json[]
  attestation            Json?
  submission_details     Json?
  created_at             DateTime? @default(now()) @db.Timestamptz(6)

  @@index([reporting_period_start, reporting_period_end], map: "idx_regulatory_reports_period")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model remediation_actions {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  violation_id       String
  action_description String
  status             String?
  completion_date    DateTime? @db.Timestamptz(6)
  responsible_party  String?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model renewable_energy_credits {
  rec_id              String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  asset_id            String?              @db.Uuid
  quantity            Int
  vintage_year        Int
  market_type         String               @db.VarChar(50)
  price_per_rec       Decimal              @db.Decimal(10, 2)
  total_value         Decimal              @db.Decimal(15, 2)
  certification       String?              @db.VarChar(100)
  status              String               @db.VarChar(50)
  created_at          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?            @default(now()) @db.Timestamptz(6)
  receivable_id       String?              @db.Uuid
  incentive_id        String?              @db.Uuid
  project_id          String?              @db.Uuid
  climate_pool_recs   climate_pool_recs[]
  climate_incentives  climate_incentives?  @relation(fields: [incentive_id], references: [incentive_id], onUpdate: NoAction, map: "fk_renewable_energy_credits_incentive_id")
  projects            projects?            @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "fk_renewable_energy_credits_project_id")
  energy_assets       energy_assets?       @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction)
  climate_receivables climate_receivables? @relation(fields: [receivable_id], references: [receivable_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([incentive_id], map: "idx_renewable_energy_credits_incentive_id")
  @@index([project_id], map: "idx_renewable_energy_credits_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_dex_orders {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account          String      @db.VarChar(50)
  sequence         Int
  taker_pays       Json
  taker_gets       Json
  quality          Decimal?    @db.Decimal(30, 15)
  expiration       Int?
  book_node        String?     @db.VarChar(64)
  owner_node       String?     @db.VarChar(64)
  previous_txn_id  String?     @db.VarChar(64)
  previous_txn_lgr Int?
  status           String?     @default("open") @db.VarChar(20)
  filled_amount    Decimal?    @default(0) @db.Decimal(30, 15)
  network_type     String      @db.VarChar(20)
  owner_id         String?     @db.Uuid
  metadata         Json?       @default("{}")
  created_at       DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?   @default(now()) @db.Timestamptz(6)
  users            auth_users? @relation(fields: [owner_id], references: [id], onUpdate: NoAction)

  @@unique([account, sequence, network_type])
  @@index([account], map: "idx_ripple_dex_account")
  @@index([created_at], map: "idx_ripple_dex_created")
  @@index([network_type], map: "idx_ripple_dex_network")
  @@index([owner_id], map: "idx_ripple_dex_owner")
  @@index([status], map: "idx_ripple_dex_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_escrows {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account         String      @db.VarChar(50)
  destination     String      @db.VarChar(50)
  amount          Decimal     @db.Decimal(30, 15)
  condition       String?     @db.VarChar(255)
  cancel_after    Int?
  finish_after    Int?
  destination_tag Int?
  source_tag      Int?
  owner           String      @db.VarChar(50)
  escrow_id       String?     @unique @db.VarChar(64)
  prev_txn_id     String?     @db.VarChar(64)
  status          String?     @default("created") @db.VarChar(20)
  network_type    String      @db.VarChar(20)
  owner_id        String?     @db.Uuid
  metadata        Json?       @default("{}")
  created_at      DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?   @default(now()) @db.Timestamptz(6)
  users           auth_users? @relation(fields: [owner_id], references: [id], onUpdate: NoAction)

  @@index([account], map: "idx_ripple_escrow_account")
  @@index([destination], map: "idx_ripple_escrow_destination")
  @@index([network_type], map: "idx_ripple_escrow_network")
  @@index([owner_id], map: "idx_ripple_escrow_owner")
  @@index([status], map: "idx_ripple_escrow_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_issuers {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address      String    @db.VarChar(50)
  name         String?   @db.VarChar(100)
  domain       String?   @db.VarChar(255)
  email_hash   String?   @db.VarChar(64)
  verified     Boolean?  @default(false)
  trust_level  Int?      @default(0)
  network_type String    @db.VarChar(20)
  metadata     Json?     @default("{}")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([address, network_type])
  @@index([address], map: "idx_ripple_issuers_address")
  @@index([domain], map: "idx_ripple_issuers_domain")
  @@index([network_type], map: "idx_ripple_issuers_network")
  @@index([verified], map: "idx_ripple_issuers_verified")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_multisig_accounts {
  id                  String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address             String      @db.VarChar(50)
  signer_list         Json
  quorum              Int
  signers             String[]
  regular_key         String?     @db.VarChar(50)
  master_key_disabled Boolean?    @default(false)
  sequence            Int?        @default(0)
  network_type        String      @db.VarChar(20)
  owner_id            String?     @db.Uuid
  metadata            Json?       @default("{}")
  created_at          DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?   @default(now()) @db.Timestamptz(6)
  users               auth_users? @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([address, network_type])
  @@index([address], map: "idx_ripple_multisig_address")
  @@index([network_type], map: "idx_ripple_multisig_network")
  @@index([owner_id], map: "idx_ripple_multisig_owner")
  @@index([signers], map: "idx_ripple_multisig_signers", type: Gin)
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_multisig_proposals {
  id                  String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account             String      @db.VarChar(50)
  transaction         Json
  signatures          Json?       @default("[]")
  status              String?     @default("pending") @db.VarChar(20)
  expires_at          DateTime    @db.Timestamptz(6)
  execution_hash      String?     @db.VarChar(64)
  execution_ledger    Int?
  cancellation_reason String?
  network_type        String      @db.VarChar(20)
  created_by          String?     @db.Uuid
  metadata            Json?       @default("{}")
  created_at          DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?   @default(now()) @db.Timestamptz(6)
  executed_at         DateTime?   @db.Timestamptz(6)
  cancelled_at        DateTime?   @db.Timestamptz(6)
  users               auth_users? @relation(fields: [created_by], references: [id], onUpdate: NoAction)

  @@index([account], map: "idx_ripple_proposals_account")
  @@index([created_by], map: "idx_ripple_proposals_created_by")
  @@index([execution_hash], map: "idx_ripple_proposals_execution_hash")
  @@index([expires_at], map: "idx_ripple_proposals_expires")
  @@index([network_type], map: "idx_ripple_proposals_network")
  @@index([status], map: "idx_ripple_proposals_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_tokens {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  currency     String    @db.VarChar(40)
  issuer       String    @db.VarChar(50)
  name         String?   @db.VarChar(100)
  symbol       String?   @db.VarChar(20)
  decimals     Int?      @default(15)
  logo_url     String?
  verified     Boolean?  @default(false)
  network_type String    @db.VarChar(20)
  metadata     Json?     @default("{}")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([currency, issuer, network_type])
  @@index([currency], map: "idx_ripple_tokens_currency")
  @@index([issuer], map: "idx_ripple_tokens_issuer")
  @@index([network_type], map: "idx_ripple_tokens_network")
  @@index([verified], map: "idx_ripple_tokens_verified")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ripple_trust_lines {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account      String      @db.VarChar(50)
  currency     String      @db.VarChar(40)
  issuer       String      @db.VarChar(50)
  trust_limit  Decimal     @db.Decimal(30, 15)
  balance      Decimal?    @default(0) @db.Decimal(30, 15)
  quality_in   Int?
  quality_out  Int?
  no_ripple    Boolean?    @default(false)
  freeze       Boolean?    @default(false)
  authorized   Boolean?    @default(false)
  network_type String      @db.VarChar(20)
  owner_id     String?     @db.Uuid
  metadata     Json?       @default("{}")
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?   @default(now()) @db.Timestamptz(6)
  users        auth_users? @relation(fields: [owner_id], references: [id], onUpdate: NoAction)

  @@unique([account, currency, issuer, network_type])
  @@index([account], map: "idx_ripple_trust_account")
  @@index([currency], map: "idx_ripple_trust_currency")
  @@index([issuer], map: "idx_ripple_trust_issuer")
  @@index([network_type], map: "idx_ripple_trust_network")
  @@index([owner_id], map: "idx_ripple_trust_owner")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model risk_thresholds {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount_high        Decimal?  @db.Decimal
  amount_critical    Decimal?  @db.Decimal
  frequency_high     Int?
  frequency_critical Int?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model rule_conflicts {
  id                                   String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id                         String?           @db.Uuid
  rule1_id                             String?           @db.Uuid
  rule2_id                             String?           @db.Uuid
  conflict_type                        String?
  resolution                           Json?
  created_at                           DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations                     token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rules_rule_conflicts_rule1_idTorules rules?            @relation("rule_conflicts_rule1_idTorules", fields: [rule1_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)
  rules_rule_conflicts_rule2_idTorules rules?            @relation("rule_conflicts_rule2_idTorules", fields: [rule2_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation_id], map: "idx_rule_conflicts_operation")
  @@schema("public")
}

model rule_evaluations {
  id                 String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id       String?           @db.Uuid
  rule_id            String?           @db.Uuid
  passed             Boolean
  score              Decimal?          @db.Decimal
  conditions         Json?
  evaluation_time_ms Int?
  created_at         DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations   token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rules              rules?            @relation(fields: [rule_id], references: [rule_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_rule_evaluations_created")
  @@index([operation_id], map: "idx_rule_evaluations_operation")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sc_algorithm_parameters {
  id                              String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stablecoin_product_id           String              @db.Uuid
  effective_timestamp             DateTime            @db.Timestamptz(6)
  expiration_timestamp            DateTime?           @db.Timestamptz(6)
  parameter_set_name              String?             @db.VarChar(100)
  algorithm_version               String?             @db.VarChar(20)
  target_peg                      Decimal             @db.Decimal(20, 8)
  rebase_frequency                String?             @db.VarChar(20)
  rebase_lag                      Int?
  rebase_threshold_bps            Int?
  max_rebase_percentage           Decimal?            @db.Decimal(5, 2)
  expansion_coefficient           Decimal?            @db.Decimal(5, 4)
  contraction_coefficient         Decimal?            @db.Decimal(5, 4)
  smoothing_factor                Decimal?            @db.Decimal(5, 4)
  oracle_source                   String?             @db.VarChar(100)
  oracle_update_frequency_seconds Int?
  oracle_deviation_threshold_bps  Int?
  stability_fee_rate              Decimal?            @db.Decimal(5, 4)
  liquidation_ratio               Decimal?            @db.Decimal(5, 2)
  liquidation_penalty             Decimal?            @db.Decimal(5, 2)
  minimum_collateral_ratio        Decimal?            @db.Decimal(5, 2)
  debt_ceiling                    Decimal?            @db.Decimal(20, 2)
  governance_parameters           Json?
  circuit_breaker_rules           Json?
  coupon_issuance_rules           Json?
  bonding_curve_parameters        Json?
  is_active                       Boolean?            @default(true)
  change_reason                   String?
  proposed_by                     String?             @db.VarChar(255)
  approval_date                   DateTime?           @db.Timestamptz(6)
  notes                           String?
  created_at                      DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?           @default(now()) @db.Timestamptz(6)
  stablecoin_products             stablecoin_products @relation(fields: [stablecoin_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([is_active], map: "idx_sc_algorithm_parameters_active")
  @@index([effective_timestamp], map: "idx_sc_algorithm_parameters_effective")
  @@index([stablecoin_product_id], map: "idx_sc_algorithm_parameters_stablecoin")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sc_minting_events {
  id                            String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stablecoin_product_id         String              @db.Uuid
  mint_id                       String              @unique @db.VarChar(100)
  minter_address                String              @db.VarChar(255)
  mint_timestamp                DateTime            @db.Timestamptz(6)
  minted_amount                 Decimal             @db.Decimal(30, 8)
  collateral_deposited          Json
  collateral_value              Decimal             @db.Decimal(20, 2)
  currency                      String?             @default("USD") @db.VarChar(3)
  minting_fee                   Decimal?            @db.Decimal(20, 8)
  fee_percentage                Decimal?            @db.Decimal(5, 4)
  exchange_rate                 Decimal?            @db.Decimal(20, 8)
  source_address                String?             @db.VarChar(255)
  destination_address           String?             @db.VarChar(255)
  transaction_hash              String              @db.VarChar(255)
  block_number                  Int?
  gas_used                      Int?
  gas_price_gwei                Decimal?            @db.Decimal(10, 2)
  total_gas_cost                Decimal?            @db.Decimal(20, 8)
  status                        String?             @default("confirmed") @db.VarChar(20)
  failure_reason                String?
  kyc_aml_status                String?             @db.VarChar(20)
  risk_score                    Int?
  is_large_mint                 Boolean?            @default(false)
  collateralization_ratio_after Decimal?            @db.Decimal(5, 2)
  triggered_rebalancing         Boolean?            @default(false)
  related_redemption_id         String?             @db.VarChar(100)
  notes                         String?
  created_at                    DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?           @default(now()) @db.Timestamptz(6)
  stablecoin_products           stablecoin_products @relation(fields: [stablecoin_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([mint_id], map: "idx_sc_minting_events_id")
  @@index([minter_address], map: "idx_sc_minting_events_minter")
  @@index([stablecoin_product_id], map: "idx_sc_minting_events_stablecoin")
  @@index([mint_timestamp], map: "idx_sc_minting_events_timestamp")
  @@index([transaction_hash], map: "idx_sc_minting_events_tx_hash")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sc_peg_history {
  id                         String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stablecoin_product_id      String              @db.Uuid
  timestamp                  DateTime            @db.Timestamptz(6)
  target_peg                 Decimal             @db.Decimal(20, 8)
  actual_price               Decimal             @db.Decimal(20, 8)
  deviation                  Decimal?            @db.Decimal(10, 6)
  deviation_percentage       Decimal?            @db.Decimal(5, 4)
  deviation_bps              Int?
  exchange                   String?             @db.VarChar(50)
  trading_volume_24h         Decimal?            @db.Decimal(20, 2)
  market_cap                 Decimal?            @db.Decimal(20, 2)
  currency                   String?             @default("USD") @db.VarChar(3)
  price_source               String?             @db.VarChar(100)
  data_provider              String?             @db.VarChar(100)
  bid_price                  Decimal?            @db.Decimal(20, 8)
  ask_price                  Decimal?            @db.Decimal(20, 8)
  spread_bps                 Int?
  liquidity_depth            Decimal?            @db.Decimal(20, 2)
  is_within_acceptable_range Boolean?
  acceptable_range_bps       Int?                @default(100)
  depeg_severity             String?             @db.VarChar(20)
  market_conditions          String?
  notes                      String?
  created_at                 DateTime?           @default(now()) @db.Timestamptz(6)
  stablecoin_products        stablecoin_products @relation(fields: [stablecoin_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([deviation_percentage], map: "idx_sc_peg_history_deviation")
  @@index([stablecoin_product_id], map: "idx_sc_peg_history_stablecoin")
  @@index([timestamp], map: "idx_sc_peg_history_timestamp")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sc_redemptions {
  id                       String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stablecoin_product_id    String              @db.Uuid
  redemption_id            String              @unique @db.VarChar(100)
  requester_address        String              @db.VarChar(255)
  request_timestamp        DateTime            @db.Timestamptz(6)
  requested_amount         Decimal             @db.Decimal(30, 8)
  redemption_currency      String?             @default("USD") @db.VarChar(3)
  redemption_method        String?             @db.VarChar(50)
  processing_time_hours    Int?
  completion_timestamp     DateTime?           @db.Timestamptz(6)
  redeemed_amount          Decimal?            @db.Decimal(30, 8)
  redemption_fee           Decimal?            @db.Decimal(20, 8)
  fee_percentage           Decimal?            @db.Decimal(5, 4)
  exchange_rate            Decimal?            @db.Decimal(20, 8)
  destination_address      String?             @db.VarChar(255)
  transaction_hash         String?             @db.VarChar(255)
  status                   String?             @default("pending") @db.VarChar(20)
  failure_reason           String?
  kyc_aml_status           String?             @db.VarChar(20)
  risk_score               Int?
  is_large_redemption      Boolean?            @default(false)
  triggered_reserve_action Boolean?            @default(false)
  collateral_released      Json?
  market_impact_estimate   Decimal?            @db.Decimal(5, 4)
  related_mint_id          String?             @db.VarChar(100)
  notes                    String?
  created_at               DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?           @default(now()) @db.Timestamptz(6)
  stablecoin_products      stablecoin_products @relation(fields: [stablecoin_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([redemption_id], map: "idx_sc_redemptions_id")
  @@index([requester_address], map: "idx_sc_redemptions_requester")
  @@index([stablecoin_product_id], map: "idx_sc_redemptions_stablecoin")
  @@index([status], map: "idx_sc_redemptions_status")
  @@index([request_timestamp], map: "idx_sc_redemptions_timestamp")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sc_reserve_audits {
  id                          String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stablecoin_product_id       String              @db.Uuid
  audit_date                  DateTime            @db.Timestamptz(6)
  audit_period_start          DateTime            @db.Timestamptz(6)
  audit_period_end            DateTime            @db.Timestamptz(6)
  auditor_name                String              @db.VarChar(255)
  auditor_type                String?             @db.VarChar(50)
  audit_type                  String              @db.VarChar(50)
  total_tokens_outstanding    Decimal             @db.Decimal(30, 8)
  total_reserve_value         Decimal             @db.Decimal(20, 2)
  currency                    String?             @default("USD") @db.VarChar(3)
  collateralization_ratio     Decimal             @db.Decimal(5, 2)
  reserve_breakdown           Json
  cash_and_equivalents        Decimal?            @db.Decimal(20, 2)
  short_term_deposits         Decimal?            @db.Decimal(20, 2)
  treasury_securities         Decimal?            @db.Decimal(20, 2)
  commercial_paper            Decimal?            @db.Decimal(20, 2)
  corporate_bonds             Decimal?            @db.Decimal(20, 2)
  crypto_assets               Decimal?            @db.Decimal(20, 2)
  other_assets                Decimal?            @db.Decimal(20, 2)
  custodian_breakdown         Json?
  geographic_breakdown        Json?
  credit_quality_breakdown    Json?
  maturity_breakdown          Json?
  liquidity_analysis          Json?
  discrepancies               Json?
  opinion                     String?             @db.VarChar(50)
  key_findings                String?
  audit_report_url            String?
  is_publicly_disclosed       Boolean?            @default(true)
  disclosure_date             DateTime?           @db.Timestamptz(6)
  regulatory_filing_reference String?             @db.VarChar(100)
  notes                       String?
  created_at                  DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?           @default(now()) @db.Timestamptz(6)
  stablecoin_products         stablecoin_products @relation(fields: [stablecoin_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([auditor_name], map: "idx_sc_reserve_audits_auditor")
  @@index([audit_date], map: "idx_sc_reserve_audits_date")
  @@index([stablecoin_product_id], map: "idx_sc_reserve_audits_stablecoin")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sidebar_configurations {
  id                                             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                           String         @db.VarChar(255)
  description                                    String?
  min_role_priority                              Int?
  organization_id                                String?        @db.Uuid
  configuration_data                             Json
  is_active                                      Boolean?       @default(true)
  is_default                                     Boolean?       @default(false)
  created_by                                     String?        @db.Uuid
  updated_by                                     String?        @db.Uuid
  created_at                                     DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime?      @default(now()) @db.Timestamptz(6)
  target_role_ids                                String[]       @db.Uuid
  target_profile_type_enums                      profile_type[]
  users_sidebar_configurations_created_byTousers auth_users?    @relation("sidebar_configurations_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  organizations                                  organizations? @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_sidebar_configurations_updated_byTousers auth_users?    @relation("sidebar_configurations_updated_byTousers", fields: [updated_by], references: [id], onUpdate: NoAction)

  @@unique([target_role_ids, target_profile_type_enums, is_default, organization_id], map: "unique_default_per_new_target")
  @@index([organization_id], map: "idx_sidebar_configs_org")
  @@index([target_profile_type_enums], map: "idx_sidebar_configs_profile_enums", type: Gin)
  @@index([target_role_ids], map: "idx_sidebar_configs_role_ids", type: Gin)
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sidebar_items {
  id                                    String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item_id                               String            @db.VarChar(100)
  section_id                            String?           @db.Uuid
  label                                 String            @db.VarChar(255)
  href                                  String            @db.VarChar(500)
  icon                                  String?           @db.VarChar(100)
  description                           String?
  display_order                         Int?              @default(0)
  required_permissions                  String[]
  required_roles                        String[]
  min_role_priority                     Int?
  profile_types                         String[]
  requires_project                      Boolean?          @default(false)
  is_visible                            Boolean?          @default(true)
  is_active                             Boolean?          @default(true)
  organization_id                       String?           @db.Uuid
  created_by                            String?           @db.Uuid
  updated_by                            String?           @db.Uuid
  created_at                            DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at                            DateTime?         @default(now()) @db.Timestamptz(6)
  users_sidebar_items_created_byTousers auth_users?       @relation("sidebar_items_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  organizations                         organizations?    @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sidebar_sections                      sidebar_sections? @relation(fields: [section_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_sidebar_items_updated_byTousers auth_users?       @relation("sidebar_items_updated_byTousers", fields: [updated_by], references: [id], onUpdate: NoAction)

  @@unique([item_id, section_id], map: "unique_item_per_section")
  @@index([display_order], map: "idx_sidebar_items_order")
  @@index([organization_id], map: "idx_sidebar_items_org")
  @@index([required_permissions], map: "idx_sidebar_items_permissions", type: Gin)
  @@index([required_roles], map: "idx_sidebar_items_roles", type: Gin)
  @@index([section_id], map: "idx_sidebar_items_section")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sidebar_sections {
  id                                       String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  section_id                               String          @db.VarChar(100)
  title                                    String          @db.VarChar(255)
  description                              String?
  display_order                            Int?            @default(0)
  required_permissions                     String[]
  required_roles                           String[]
  min_role_priority                        Int?
  profile_types                            String[]
  is_active                                Boolean?        @default(true)
  organization_id                          String?         @db.Uuid
  created_by                               String?         @db.Uuid
  updated_by                               String?         @db.Uuid
  created_at                               DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at                               DateTime?       @default(now()) @db.Timestamptz(6)
  sidebar_items                            sidebar_items[]
  users_sidebar_sections_created_byTousers auth_users?     @relation("sidebar_sections_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  organizations                            organizations?  @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_sidebar_sections_updated_byTousers auth_users?     @relation("sidebar_sections_updated_byTousers", fields: [updated_by], references: [id], onUpdate: NoAction)

  @@unique([section_id, organization_id], map: "unique_section_per_org")
  @@index([display_order], map: "idx_sidebar_sections_order")
  @@index([organization_id], map: "idx_sidebar_sections_org")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model signer_keys {
  id                 String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String?     @db.Uuid
  address            String
  chain_type         String
  key_id             String
  is_hardware_wallet Boolean?    @default(false)
  device_type        String?
  derivation_path    String?
  created_at         DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?   @default(now()) @db.Timestamptz(6)
  users              auth_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, address, chain_type])
  @@index([address], map: "idx_signer_keys_address")
  @@index([user_id], map: "idx_signer_keys_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sp_barrier_events {
  id                            String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  structured_product_id         String              @db.Uuid
  event_timestamp               DateTime            @db.Timestamptz(6)
  barrier_type                  String              @db.VarChar(50)
  barrier_level                 Decimal             @db.Decimal(20, 8)
  observed_level                Decimal             @db.Decimal(20, 8)
  underlying_asset              String?             @db.VarChar(100)
  breach_detected               Boolean
  breach_magnitude              Decimal?            @db.Decimal(20, 8)
  observation_method            String?             @db.VarChar(50)
  event_consequences            String?
  triggered_autocall            Boolean?            @default(false)
  triggered_coupon_cancellation Boolean?            @default(false)
  triggered_capital_loss        Boolean?            @default(false)
  payoff_impact                 Decimal?            @db.Decimal(20, 8)
  notification_required         Boolean?            @default(true)
  notification_sent             Boolean?            @default(false)
  investor_communication_sent   Boolean?            @default(false)
  regulatory_reporting_required Boolean?            @default(false)
  is_verified                   Boolean?            @default(false)
  verification_source           String?             @db.VarChar(100)
  notes                         String?
  created_at                    DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?           @default(now()) @db.Timestamptz(6)
  structured_products           structured_products @relation(fields: [structured_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([breach_detected], map: "idx_sp_barrier_events_breach")
  @@index([structured_product_id], map: "idx_sp_barrier_events_sp_product")
  @@index([event_timestamp], map: "idx_sp_barrier_events_timestamp")
  @@index([barrier_type], map: "idx_sp_barrier_events_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sp_components {
  id                              String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  structured_product_id           String              @db.Uuid
  component_name                  String              @db.VarChar(255)
  component_type                  String              @db.VarChar(50)
  underlying_ticker               String?             @db.VarChar(50)
  underlying_isin                 String?             @db.VarChar(50)
  underlying_cusip                String?             @db.VarChar(50)
  position_type                   String              @db.VarChar(20)
  notional_amount                 Decimal             @db.Decimal(20, 2)
  quantity                        Decimal?            @db.Decimal(20, 6)
  currency                        String?             @default("USD") @db.VarChar(3)
  initial_price                   Decimal?            @db.Decimal(20, 8)
  current_price                   Decimal?            @db.Decimal(20, 8)
  weight_percentage               Decimal?            @db.Decimal(5, 2)
  strike_price                    Decimal?            @db.Decimal(20, 8)
  option_expiry                   DateTime?           @db.Timestamptz(6)
  option_style                    String?             @db.VarChar(20)
  delta                           Decimal?            @db.Decimal(5, 4)
  gamma                           Decimal?            @db.Decimal(5, 4)
  vega                            Decimal?            @db.Decimal(5, 4)
  theta                           Decimal?            @db.Decimal(10, 6)
  implied_volatility              Decimal?            @db.Decimal(5, 2)
  correlation_to_other_components Json?
  performance_contribution        Decimal?            @db.Decimal(20, 8)
  last_rebalance_date             DateTime?           @db.Timestamptz(6)
  next_rebalance_date             DateTime?           @db.Timestamptz(6)
  is_path_dependent               Boolean?            @default(false)
  path_dependency_type            String?             @db.VarChar(50)
  status                          String?             @default("active") @db.VarChar(20)
  notes                           String?
  created_at                      DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?           @default(now()) @db.Timestamptz(6)
  structured_products             structured_products @relation(fields: [structured_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([structured_product_id], map: "idx_sp_components_sp_product")
  @@index([underlying_ticker], map: "idx_sp_components_ticker")
  @@index([component_type], map: "idx_sp_components_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sp_coupon_schedules {
  id                         String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  structured_product_id      String              @db.Uuid
  coupon_number              Int
  observation_date           DateTime            @db.Timestamptz(6)
  payment_date               DateTime            @db.Timestamptz(6)
  coupon_rate                Decimal             @db.Decimal(5, 4)
  notional_amount            Decimal             @db.Decimal(20, 2)
  coupon_amount              Decimal             @db.Decimal(20, 2)
  currency                   String?             @default("USD") @db.VarChar(3)
  barrier_level              Decimal?            @db.Decimal(5, 2)
  barrier_met                Boolean?
  barrier_observation_value  Decimal?            @db.Decimal(20, 8)
  is_conditional             Boolean?            @default(false)
  condition_description      String?
  memory_coupon              Boolean?            @default(false)
  accumulated_unpaid_coupons Decimal?            @db.Decimal(20, 2)
  payment_status             String?             @default("scheduled") @db.VarChar(20)
  actual_payment_date        DateTime?           @db.Timestamptz(6)
  actual_payment_amount      Decimal?            @db.Decimal(20, 2)
  withholding_tax            Decimal?            @db.Decimal(20, 2)
  net_payment                Decimal?            @db.Decimal(20, 2)
  payment_reference          String?             @db.VarChar(100)
  notes                      String?
  created_at                 DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?           @default(now()) @db.Timestamptz(6)
  structured_products        structured_products @relation(fields: [structured_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([observation_date], map: "idx_sp_coupon_schedules_observation_date")
  @@index([payment_date], map: "idx_sp_coupon_schedules_payment_date")
  @@index([structured_product_id], map: "idx_sp_coupon_schedules_sp_product")
  @@index([payment_status], map: "idx_sp_coupon_schedules_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sp_payoff_structures {
  id                        String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  structured_product_id     String              @db.Uuid
  structure_name            String              @db.VarChar(255)
  structure_type            String              @db.VarChar(50)
  payoff_formula            String
  participation_rate        Decimal?            @db.Decimal(5, 2)
  cap_rate                  Decimal?            @db.Decimal(5, 2)
  floor_rate                Decimal?            @db.Decimal(5, 2)
  coupon_rate               Decimal?            @db.Decimal(5, 2)
  coupon_frequency          String?             @db.VarChar(20)
  coupon_barrier_level      Decimal?            @db.Decimal(5, 2)
  downside_protection_level Decimal?            @db.Decimal(5, 2)
  knock_in_barrier          Decimal?            @db.Decimal(5, 2)
  knock_out_barrier         Decimal?            @db.Decimal(5, 2)
  observation_dates         DateTime[]          @db.Timestamptz
  observation_frequency     String?             @db.VarChar(20)
  memory_feature            Boolean?            @default(false)
  autocall_levels           Json?
  worst_of_basket           Json?
  averaging_method          String?             @db.VarChar(50)
  settlement_method         String?             @db.VarChar(20)
  payoff_scenarios          Json?
  is_principal_protected    Boolean?            @default(false)
  protection_percentage     Decimal?            @db.Decimal(5, 2)
  issuer_credit_spread      Decimal?            @db.Decimal(5, 2)
  notes                     String?
  created_at                DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?           @default(now()) @db.Timestamptz(6)
  structured_products       structured_products @relation(fields: [structured_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([structured_product_id], map: "idx_sp_payoff_structures_sp_product")
  @@index([structure_type], map: "idx_sp_payoff_structures_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sp_performance_tracking {
  id                           String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  structured_product_id        String              @db.Uuid
  valuation_date               DateTime            @db.Timestamptz(6)
  market_value                 Decimal             @db.Decimal(20, 2)
  par_value                    Decimal             @db.Decimal(20, 2)
  currency                     String?             @default("USD") @db.VarChar(3)
  percentage_of_par            Decimal?            @db.Decimal(5, 2)
  accrued_coupon               Decimal?            @db.Decimal(20, 2)
  clean_price                  Decimal?            @db.Decimal(20, 8)
  dirty_price                  Decimal?            @db.Decimal(20, 8)
  yield_to_maturity            Decimal?            @db.Decimal(5, 4)
  duration                     Decimal?            @db.Decimal(10, 4)
  convexity                    Decimal?            @db.Decimal(10, 4)
  delta                        Decimal?            @db.Decimal(5, 4)
  gamma                        Decimal?            @db.Decimal(5, 4)
  vega                         Decimal?            @db.Decimal(5, 4)
  theta                        Decimal?            @db.Decimal(10, 6)
  component_performance        Json?
  barrier_proximity            Json?
  autocall_probability         Decimal?            @db.Decimal(5, 2)
  expected_payoff              Decimal?            @db.Decimal(20, 2)
  value_at_risk                Decimal?            @db.Decimal(20, 2)
  credit_valuation_adjustment  Decimal?            @db.Decimal(20, 2)
  funding_valuation_adjustment Decimal?            @db.Decimal(20, 2)
  days_to_maturity             Int?
  pricing_model                String?             @db.VarChar(50)
  model_assumptions            Json?
  data_source                  String?             @db.VarChar(100)
  is_estimated                 Boolean?            @default(false)
  notes                        String?
  created_at                   DateTime?           @default(now()) @db.Timestamptz(6)
  structured_products          structured_products @relation(fields: [structured_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([valuation_date], map: "idx_sp_performance_tracking_date")
  @@index([structured_product_id], map: "idx_sp_performance_tracking_sp_product")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sp_redemption_features {
  id                         String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  structured_product_id      String              @db.Uuid
  feature_type               String              @db.VarChar(50)
  effective_date             DateTime            @db.Timestamptz(6)
  expiration_date            DateTime?           @db.Timestamptz(6)
  call_notice_days           Int?
  redemption_price           Decimal             @db.Decimal(20, 8)
  redemption_price_type      String?             @db.VarChar(50)
  trigger_condition          String?
  trigger_level              Decimal?            @db.Decimal(5, 2)
  is_callable                Boolean?            @default(false)
  is_puttable                Boolean?            @default(false)
  call_schedule              Json?
  call_protection_end_date   DateTime?           @db.Timestamptz(6)
  make_whole_provision       Boolean?            @default(false)
  make_whole_formula         String?
  redemption_fee             Decimal?            @db.Decimal(5, 2)
  partial_redemption_allowed Boolean?            @default(false)
  minimum_redemption_amount  Decimal?            @db.Decimal(20, 2)
  redemption_settlement_days Int?
  was_triggered              Boolean?            @default(false)
  trigger_date               DateTime?           @db.Timestamptz(6)
  redemption_status          String?             @default("inactive") @db.VarChar(20)
  notes                      String?
  created_at                 DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?           @default(now()) @db.Timestamptz(6)
  structured_products        structured_products @relation(fields: [structured_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([effective_date], map: "idx_sp_redemption_features_effective_date")
  @@index([structured_product_id], map: "idx_sp_redemption_features_sp_product")
  @@index([redemption_status], map: "idx_sp_redemption_features_status")
  @@index([feature_type], map: "idx_sp_redemption_features_type")
  @@schema("public")
}

model stablecoin_collateral {
  id                   String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stablecoin_id        String              @db.Uuid
  collateral_asset     String?             @db.VarChar(255)
  backing_amount       Decimal?            @db.Decimal(18, 8)
  custodian            String?             @db.VarChar(255)
  auditor              String?             @db.VarChar(255)
  last_audit_date      DateTime?           @db.Timestamptz(6)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)
  collateral_address   String?
  collateral_symbol    String?
  collateral_amount    Decimal?            @db.Decimal
  collateral_value_usd Decimal?            @db.Decimal
  liquidation_ratio    Decimal?            @db.Decimal
  stability_fee        Decimal?            @db.Decimal
  debt_ceiling         Decimal?            @db.Decimal
  risk_parameters      Json?
  oracle_price         Decimal?            @db.Decimal
  last_oracle_update   DateTime?           @db.Timestamptz(6)
  total_reserves       Decimal?            @db.Decimal
  backing_ratio        Decimal?            @db.Decimal
  stablecoin_products  stablecoin_products @relation(fields: [stablecoin_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_stablecoin_collateral_stablecoin")

  @@index([stablecoin_id], map: "idx_stablecoin_collateral_coin")
  @@index([stablecoin_id], map: "idx_stablecoin_collateral_stablecoin_id")
  @@index([stablecoin_id, collateral_value_usd(sort: Desc)], map: "idx_stablecoin_collateral_value")
  @@schema("public")
}

model stablecoin_products {
  id                              String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id                      String                    @unique(map: "idx_stablecoin_products_project_id_unique") @db.Uuid
  asset_name                      String?                   @db.VarChar(255)
  asset_symbol                    String?                   @db.VarChar(50)
  asset_type                      String?                   @db.VarChar(100)
  issuer                          String?                   @db.VarChar(255)
  blockchain_network              String?                   @db.VarChar(100)
  smart_contract_address          String?                   @db.VarChar(255)
  issuance_date                   DateTime?                 @db.Timestamptz(6)
  total_supply                    Decimal?                  @db.Decimal(18, 8)
  circulating_supply              Decimal?                  @db.Decimal(18, 8)
  peg_value                       Decimal?                  @db.Decimal(10, 4)
  fractionalization_enabled       Boolean?                  @default(true)
  compliance_rules                String?
  collateral_type                 String?                   @db.VarChar(50)
  collateral_ratio                Decimal?                  @db.Decimal(5, 2)
  overcollateralization_threshold Decimal?                  @db.Decimal(5, 2)
  liquidation_terms               String?
  stability_mechanism             String?
  rebase_frequency                String?                   @db.VarChar(50)
  algorithm_description           String?
  provenance_history_enabled      Boolean?                  @default(true)
  collateral_type_enum            String?                   @db.VarChar(50)
  reserve_management_policy       String?
  audit_frequency                 String?                   @db.VarChar(50)
  redemption_mechanism            String?
  depeg_risk_mitigation           String[]
  status                          String?                   @db.VarChar(50)
  target_raise                    Decimal?                  @db.Decimal
  created_at                      DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at                      DateTime?                 @default(now()) @db.Timestamptz(6)
  embedded_rights                 String?
  reserve_assets                  String[]
  reserve_audit_frequency         String?                   @db.VarChar
  reserve_custodian               String?                   @db.VarChar
  reserve_insurance               Boolean?
  collateral_assets               String[]
  minimum_collateralization_ratio Decimal?                  @db.Decimal
  liquidation_penalty             Decimal?                  @db.Decimal
  oracle_provider                 String?                   @db.VarChar
  interest_rate                   Decimal?                  @db.Decimal
  commodity_type                  String?                   @db.VarChar
  storage_provider                String?                   @db.VarChar
  physical_redemption             Boolean?
  redemption_fee                  Decimal?                  @db.Decimal
  audit_provider                  String?                   @db.VarChar
  algorithm_type                  String?                   @db.VarChar
  secondary_token_symbol          String?                   @db.VarChar
  expansion_mechanism             String?                   @db.VarChar
  contraction_mechanism           String?                   @db.VarChar
  governance_token                String?                   @db.VarChar
  rebase_oracle                   String?                   @db.VarChar
  positive_rebase_limit           Decimal?                  @db.Decimal
  negative_rebase_limit           Decimal?                  @db.Decimal
  rebase_governance               String?                   @db.VarChar
  sc_algorithm_parameters         sc_algorithm_parameters[]
  sc_minting_events               sc_minting_events[]
  sc_peg_history                  sc_peg_history[]
  sc_redemptions                  sc_redemptions[]
  sc_reserve_audits               sc_reserve_audits[]
  stablecoin_collateral           stablecoin_collateral[]
  projects                        projects                  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_stablecoin_products_project")

  @@index([asset_symbol], map: "idx_stablecoin_products_asset_symbol")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stock_dividends {
  id                  String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  equity_product_id   String          @db.Uuid
  ticker_symbol       String          @db.VarChar(20)
  ex_dividend_date    DateTime        @db.Timestamptz(6)
  payment_date        DateTime?       @db.Timestamptz(6)
  record_date         DateTime?       @db.Timestamptz(6)
  declaration_date    DateTime?       @db.Timestamptz(6)
  dividend_amount     Decimal         @db.Decimal(20, 6)
  currency            String          @default("USD") @db.VarChar(3)
  dividend_type       String?         @db.VarChar(50)
  frequency           String?         @db.VarChar(20)
  status              String?         @default("declared") @db.VarChar(20)
  tax_implications    Json?
  reinvestment_option Boolean?        @default(false)
  created_at          DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?       @default(now()) @db.Timestamptz(6)
  equity_products     equity_products @relation(fields: [equity_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([equity_product_id], map: "idx_stock_dividends_equity_product")
  @@index([ex_dividend_date], map: "idx_stock_dividends_ex_date")
  @@index([payment_date], map: "idx_stock_dividends_payment_date")
  @@index([ticker_symbol], map: "idx_stock_dividends_ticker")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model stock_exchanges {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  exchange_code          String    @unique @db.VarChar(10)
  exchange_name          String    @db.VarChar(255)
  country                String    @db.VarChar(3)
  region                 String?   @db.VarChar(50)
  timezone               String    @db.VarChar(50)
  trading_hours          Json?
  currency               String    @db.VarChar(3)
  market_identifier_code String?   @db.VarChar(4)
  website_url            String?
  regulatory_body        String?   @db.VarChar(255)
  trading_calendar       Json?
  circuit_breaker_rules  Json?
  tick_size_rules        Json?
  is_active              Boolean?  @default(true)
  created_at             DateTime? @default(now()) @db.Timestamptz(6)
  updated_at             DateTime? @default(now()) @db.Timestamptz(6)

  @@index([exchange_code], map: "idx_stock_exchanges_code")
  @@index([country], map: "idx_stock_exchanges_country")
  @@schema("public")
}

model structured_products {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id              String                    @unique(map: "idx_structured_products_project_id_unique") @db.Uuid
  product_id              String?
  product_name            String?
  issuer                  String?
  underlying_assets       String[]
  payoff_structure        String?                   @db.VarChar(100)
  barrier_level           Decimal?                  @db.Decimal
  coupon_rate             Decimal?                  @db.Decimal
  strike_price            Decimal?                  @db.Decimal
  protection_level        Decimal?                  @db.Decimal
  currency                String?                   @db.VarChar(10)
  nominal_amount          Decimal?                  @db.Decimal
  risk_indicators         Decimal?                  @db.Decimal
  issue_date              DateTime?                 @db.Timestamptz(6)
  maturity_date           DateTime?                 @db.Timestamptz(6)
  status                  String?                   @db.VarChar(50)
  event_history           Json?
  redemption_date         DateTime?                 @db.Timestamptz(6)
  valuation_history       Json?
  monitoring_triggers     Json?
  target_raise            Decimal?                  @db.Decimal
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  target_audience         String?                   @db.VarChar
  distribution_strategy   String?                   @db.VarChar
  risk_rating             Int?
  complex_features        Json?
  sp_barrier_events       sp_barrier_events[]
  sp_components           sp_components[]
  sp_coupon_schedules     sp_coupon_schedules[]
  sp_payoff_structures    sp_payoff_structures[]
  sp_performance_tracking sp_performance_tracking[]
  sp_redemption_features  sp_redemption_features[]
  projects                projects                  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_structured_products_project")

  @@index([maturity_date], map: "idx_structured_products_maturity_date")
  @@index([project_id], map: "idx_structured_products_project_id")
  @@index([status], map: "idx_structured_products_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model suspicious_activity_reports {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id        String?   @db.Uuid
  filing_date         DateTime  @db.Timestamptz(6)
  suspicious_activity Json
  involved_parties    Json[]
  transaction_details Json[]
  narrative           String?
  recommendations     String[]
  status              String?
  filed_at            DateTime? @db.Timestamptz(6)
  created_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@index([status, filed_at], map: "idx_suspicious_reports_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model threshold_breaches {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operation_id     String?           @db.Uuid
  breach_type      String
  threshold_value  Decimal?          @db.Decimal
  actual_value     Decimal?          @db.Decimal
  severity         String
  operator         String?
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  token_operations token_operations? @relation(fields: [operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model token_climate_properties {
  token_id                   String                      @id @db.Uuid
  pool_id                    String?                     @db.Uuid
  average_risk_score         Decimal?                    @db.Decimal(5, 2)
  discounted_value           Decimal?                    @db.Decimal(15, 2)
  discount_amount            Decimal?                    @db.Decimal(15, 2)
  average_discount_rate      Decimal?                    @db.Decimal(5, 2)
  security_interest_details  String?
  created_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  project_id                 String?                     @db.Uuid
  climate_tokenization_pools climate_tokenization_pools? @relation(fields: [pool_id], references: [pool_id], onDelete: NoAction, onUpdate: NoAction)
  tokens                     tokens                      @relation(fields: [token_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([pool_id], map: "idx_token_climate_properties_pool")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_deployment_verifications {
  id                            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                      String        @db.Uuid
  implementation_verified       Boolean?      @default(false)
  initialization_verified       Boolean?      @default(false)
  functionality_verified        Boolean?      @default(false)
  bytecode_verified             Boolean?      @default(false)
  verification_checks           Json          @default("{}")
  expected_master_address       String?
  actual_implementation_address String?
  verified_at                   DateTime?     @default(now()) @db.Timestamptz(6)
  verified_by                   String?       @db.Uuid
  verification_status           String?       @default("pending")
  errors                        Json?         @default("[]")
  warnings                      Json?         @default("[]")
  created_at                    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?     @default(now()) @db.Timestamptz(6)
  initial_owner                 String?
  tokens                        tokens        @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                         public_users? @relation(fields: [verified_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([verification_status], map: "idx_token_verifications_status")
  @@index([token_id], map: "idx_token_verifications_token")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model token_extensions {
  id                                        String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id                                  String        @db.Uuid
  extension_type                            String
  extension_address                         String
  configuration                             Json          @default("{}")
  is_active                                 Boolean?      @default(true)
  attached_at                               DateTime?     @default(now()) @db.Timestamptz(6)
  attached_by                               String?       @db.Uuid
  attached_tx_hash                          String?
  detached_at                               DateTime?     @db.Timestamptz(6)
  detached_by                               String?       @db.Uuid
  detached_tx_hash                          String?
  created_at                                DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                                DateTime?     @default(now()) @db.Timestamptz(6)
  users_token_extensions_attached_byTousers public_users? @relation("token_extensions_attached_byTousers", fields: [attached_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_token_extensions_detached_byTousers public_users? @relation("token_extensions_detached_byTousers", fields: [detached_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tokens                                    tokens        @relation(fields: [token_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([token_id, extension_type])
  @@index([token_id], map: "idx_token_extensions_token")
  @@index([extension_type], map: "idx_token_extensions_type")
  @@schema("public")
}

model transaction_validations {
  id                String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_hash  String?
  from_address      String
  to_address        String
  value             String?
  data              String?
  validation_result Json
  policies_checked  String[]      @db.Uuid
  rules_checked     String[]      @db.Uuid
  valid             Boolean
  proceeded         Boolean?
  override_used     Boolean?      @default(false)
  override_by       String?       @db.Uuid
  created_at        DateTime?     @default(now()) @db.Timestamptz(6)
  users             public_users? @relation(fields: [override_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_validations_created")
  @@index([from_address], map: "idx_validations_from")
  @@schema("public")
}

model user_organization_roles {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String         @db.Uuid
  role_id         String         @db.Uuid
  organization_id String?        @db.Uuid
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?      @default(now()) @db.Timestamptz(6)
  organizations   organizations? @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  roles           roles          @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           public_users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role_id, organization_id])
  @@index([organization_id], map: "idx_user_organization_roles_org_id")
  @@index([role_id], map: "idx_user_organization_roles_role_id")
  @@index([user_id], map: "idx_user_organization_roles_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_sidebar_preferences {
  id                 String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String?        @db.Uuid
  organization_id    String?        @db.Uuid
  collapsed_sections String[]
  hidden_items       String[]
  custom_order       Json?
  created_at         DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?      @default(now()) @db.Timestamptz(6)
  organizations      organizations? @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users              auth_users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, organization_id], map: "unique_user_prefs")
  @@index([organization_id], map: "idx_user_sidebar_prefs_org")
  @@index([user_id], map: "idx_user_sidebar_prefs_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_verifications {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String    @unique @db.Uuid
  kyc_verified       Boolean?  @default(false)
  kyc_verified_at    DateTime? @db.Timestamptz(6)
  aml_verified       Boolean?  @default(false)
  aml_verified_at    DateTime? @db.Timestamptz(6)
  verification_level String?
  documents          Json?
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model validation_alerts {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  alert_type       String
  severity         String
  transaction_data Json?
  validation_data  Json?
  resolved         Boolean?      @default(false)
  resolved_by      String?       @db.Uuid
  resolved_at      DateTime?     @db.Timestamptz(6)
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  users            public_users? @relation(fields: [resolved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model validation_cache {
  cache_key         String    @id
  validation_result Json
  expires_at        DateTime  @db.Timestamptz(6)
  hit_count         Int?      @default(0)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_cache_expires")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model violation_patterns {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  operator         String
  pattern_type     String
  count            Int
  severity         String
  timeframe        Int?
  first_occurrence DateTime? @db.Timestamptz(6)
  last_occurrence  DateTime? @db.Timestamptz(6)
  violation_ids    String[]
  detected_at      DateTime  @db.Timestamptz(6)
  created_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([detected_at(sort: Desc)], map: "idx_violation_patterns_detected")
  @@index([operator, pattern_type], map: "idx_violation_patterns_operator")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model wallet_access_logs {
  id              String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  wallet_id       String?          @db.Uuid
  accessed_by     String?          @db.Uuid
  action          String
  success         Boolean          @default(true)
  error_message   String?
  ip_address      String?
  user_agent      String?
  metadata        Json?
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  users           public_users?    @relation(fields: [accessed_by], references: [id], onUpdate: NoAction)
  project_wallets project_wallets? @relation(fields: [wallet_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([accessed_by], map: "idx_wallet_access_logs_accessed_by")
  @@index([action], map: "idx_wallet_access_logs_action")
  @@index([created_at(sort: Desc)], map: "idx_wallet_access_logs_created_at")
  @@index([success], map: "idx_wallet_access_logs_success")
  @@index([wallet_id], map: "idx_wallet_access_logs_wallet_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model weather_cache {
  cache_id     String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cache_key    String    @unique @db.VarChar(255)
  weather_data Json
  expires_at   DateTime  @db.Timestamptz(6)
  provider     String?   @default("open-meteo") @db.VarChar(50)
  location_lat Decimal?  @db.Decimal(10, 7)
  location_lon Decimal?  @db.Decimal(10, 7)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([expires_at], map: "idx_weather_cache_expires")
  @@index([cache_key], map: "idx_weather_cache_key")
  @@index([location_lat, location_lon], map: "idx_weather_cache_location")
  @@schema("public")
}

model weather_data {
  weather_id      String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  location        String            @db.VarChar(255)
  date            DateTime          @db.Date
  sunlight_hours  Decimal?          @db.Decimal(5, 2)
  wind_speed      Decimal?          @db.Decimal(5, 2)
  temperature     Decimal?          @db.Decimal(5, 2)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  production_data production_data[]

  @@unique([location, date])
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view activity_analytics {
  id                 String?   @db.Uuid
  action             String?
  source             String?
  category           String?   @db.VarChar
  severity           String?
  timestamp          DateTime? @db.Timestamptz(6)
  user_id            String?   @db.Uuid
  user_email         String?
  entity_type        String?
  entity_id          String?
  status             String?
  duration           Int?
  system_process_id  String?   @db.Uuid
  batch_operation_id String?   @db.Uuid
  project_id         String?   @db.Uuid
  correlation_id     String?   @db.VarChar
  ip_address         String?   @db.VarChar
  session_id         String?   @db.VarChar

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view approval_configs_with_approvers {
  id                       String?   @db.Uuid
  permission_id            String?   @db.Uuid
  config_name              String?
  config_description       String?
  approval_mode            String?
  required_approvals       Int?
  requires_all_approvers   Boolean?
  consensus_type           String?
  eligible_roles           String[]
  auto_approval_conditions Json?
  auto_approve_threshold   Int?
  escalation_config        Json?
  notification_config      Json?
  active                   Boolean?
  created_at               DateTime? @db.Timestamptz(6)
  updated_at               DateTime? @db.Timestamptz(6)
  created_by               String?   @db.Uuid
  last_modified_by         String?   @db.Uuid
  configured_approvers     Json?     @db.Json
  approver_count           BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view latest_nav_by_fund {
  fund_id        String?   @db.Uuid
  date           DateTime? @db.Date
  nav            Decimal?  @db.Decimal(18, 6)
  change_amount  Decimal?  @db.Decimal(18, 6)
  change_percent Decimal?  @db.Decimal(8, 4)
  source         String?
  validated      Boolean?
  created_at     DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view project_type_stats {
  category           String?
  project_type       String?
  project_count      BigInt?
  active_count       BigInt?
  avg_target_raise   Decimal? @db.Decimal
  total_target_raise Decimal? @db.Decimal

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view settlement_summary {
  id                      String?   @db.Uuid
  redemption_request_id   String?   @db.Uuid
  settlement_type         String?
  status                  String?
  token_amount            Decimal?  @db.Decimal(78, 18)
  transfer_amount         Decimal?  @db.Decimal(78, 18)
  nav_used                Decimal?  @db.Decimal(18, 6)
  created_at              DateTime? @db.Timestamptz(6)
  actual_completion       DateTime? @db.Timestamptz(6)
  completion_time         DateTime? @db.Timestamptz(6)
  processing_time_seconds Decimal?  @db.Decimal

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view restriction_statistics {
  total_rules            BigInt?
  active_rules           BigInt?
  blocked_countries      BigInt?
  blocked_investor_types BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view system_process_activity {
  process_id        String?   @db.Uuid
  process_name      String?
  process_status    String?
  start_time        DateTime? @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  duration_seconds  Decimal?  @db.Decimal
  activity_count    BigInt?
  failed_activities BigInt?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view system_process_activities {
  process_id        String?   @db.Uuid
  process_name      String?
  start_time        DateTime? @db.Timestamptz(6)
  end_time          DateTime? @db.Timestamptz(6)
  status            String?
  progress          Float?
  priority          String?   @db.VarChar(10)
  activity_id       String?   @db.Uuid
  action            String?
  entity_type       String?
  entity_id         String?
  activity_status   String?
  activity_time     DateTime? @db.Timestamptz(6)
  activity_metadata Json?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view system_process_performance {
  process_name          String?
  total_executions      BigInt?
  avg_duration_seconds  Decimal? @db.Decimal
  min_duration_seconds  Decimal? @db.Decimal
  max_duration_seconds  Decimal? @db.Decimal
  successful_executions BigInt?
  failed_executions     BigInt?
  success_rate          Decimal? @db.Decimal

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc1155_view {
  token_id                  String?              @db.Uuid
  name                      String?
  symbol                    String?
  decimals                  Int?
  standard                  token_standard_enum?
  total_supply              String?
  metadata                  Json?
  status                    token_status_enum?
  description               String?
  token_created_at          DateTime?            @db.Timestamptz(6)
  token_updated_at          DateTime?            @db.Timestamptz(6)
  erc1155_property_id       String?              @db.Uuid
  base_uri                  String?
  metadata_storage          String?
  has_royalty               Boolean?
  royalty_percentage        String?
  royalty_receiver          String?
  is_burnable               Boolean?
  is_pausable               Boolean?
  access_control            String?
  updatable_uris            Boolean?
  supply_tracking           Boolean?
  enable_approval_for_all   Boolean?
  sales_config              Json?
  whitelist_config          Json?
  batch_transfer_limits     Json?
  dynamic_uri_config        Json?
  batch_minting_config      Json?
  transfer_restrictions     Json?
  container_config          Json?
  lazy_minting_enabled      Boolean?
  burning_enabled           Boolean?
  updatable_metadata        Boolean?
  crafting_enabled          Boolean?
  fusion_enabled            Boolean?
  experience_points_enabled Boolean?
  voting_power_enabled      Boolean?
  marketplace_fees_enabled  Boolean?
  bridge_enabled            Boolean?
  pricing_model             String?
  base_price                String?
  bulk_discount_enabled     Boolean?
  airdrop_enabled           Boolean?
  claim_period_enabled      Boolean?
  claim_start_time          DateTime?            @db.Timestamptz(6)
  claim_end_time            DateTime?            @db.Timestamptz(6)
  property_created_at       DateTime?            @db.Timestamptz(6)
  property_updated_at       DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc3525_view {
  token_id                      String?              @db.Uuid
  name                          String?
  symbol                        String?
  decimals                      Int?
  standard                      token_standard_enum?
  total_supply                  String?
  metadata                      Json?
  status                        token_status_enum?
  description                   String?
  token_created_at              DateTime?            @db.Timestamptz(6)
  token_updated_at              DateTime?            @db.Timestamptz(6)
  erc3525_property_id           String?              @db.Uuid
  value_decimals                Int?
  base_uri                      String?
  metadata_storage              String?
  slot_type                     String?
  is_burnable                   Boolean?
  is_pausable                   Boolean?
  has_royalty                   Boolean?
  royalty_percentage            String?
  royalty_receiver              String?
  slot_approvals                Boolean?
  value_approvals               Boolean?
  access_control                String?
  updatable_uris                Boolean?
  updatable_slots               Boolean?
  value_transfers_enabled       Boolean?
  sales_config                  Json?
  mergable                      Boolean?
  splittable                    Boolean?
  slot_transfer_validation      Json?
  dynamic_metadata              Boolean?
  allows_slot_enumeration       Boolean?
  value_aggregation             Boolean?
  permissioning_enabled         Boolean?
  supply_tracking               Boolean?
  updatable_values              Boolean?
  fractional_ownership_enabled  Boolean?
  financial_instrument_type     String?
  principal_amount              String?
  interest_rate                 String?
  maturity_date                 DateTime?            @db.Timestamptz(6)
  coupon_frequency              String?
  early_redemption_enabled      Boolean?
  derivative_type               String?
  underlying_asset              String?
  strike_price                  String?
  expiration_date               DateTime?            @db.Timestamptz(6)
  settlement_type               String?
  slot_creation_enabled         Boolean?
  dynamic_slot_creation         Boolean?
  cross_slot_transfers          Boolean?
  value_computation_method      String?
  accrual_enabled               Boolean?
  accrual_rate                  String?
  partial_value_trading         Boolean?
  minimum_trade_value           String?
  yield_farming_enabled         Boolean?
  liquidity_provision_enabled   Boolean?
  compound_interest_enabled     Boolean?
  flash_loan_enabled            Boolean?
  regulatory_compliance_enabled Boolean?
  kyc_required                  Boolean?
  accredited_investor_only      Boolean?
  property_created_at           DateTime?            @db.Timestamptz(6)
  property_updated_at           DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc20_view {
  token_id              String?              @db.Uuid
  name                  String?
  symbol                String?
  decimals              Int?
  standard              token_standard_enum?
  total_supply          String?
  metadata              Json?
  status                token_status_enum?
  description           String?
  token_created_at      DateTime?            @db.Timestamptz(6)
  token_updated_at      DateTime?            @db.Timestamptz(6)
  erc20_property_id     String?              @db.Uuid
  token_type            String?
  cap                   String?
  initial_supply        String?
  access_control        String?
  allow_management      Boolean?
  is_mintable           Boolean?
  is_burnable           Boolean?
  is_pausable           Boolean?
  snapshot              Boolean?
  permit                Boolean?
  rebasing              Json?
  fee_on_transfer       Json?
  governance_features   Json?
  compliance_config     Json?
  transfer_config       Json?
  gas_config            Json?
  whitelist_config      Json?
  governance_enabled    Boolean?
  quorum_percentage     String?
  proposal_threshold    String?
  voting_delay          Int?
  voting_period         Int?
  anti_whale_enabled    Boolean?
  max_wallet_amount     String?
  reflection_enabled    Boolean?
  reflection_percentage String?
  vesting_enabled       Boolean?
  vesting_cliff_period  Int?
  presale_enabled       Boolean?
  presale_rate          String?
  trading_start_time    DateTime?            @db.Timestamptz(6)
  property_created_at   DateTime?            @db.Timestamptz(6)
  property_updated_at   DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc721_view {
  token_id                    String?              @db.Uuid
  name                        String?
  symbol                      String?
  decimals                    Int?
  standard                    token_standard_enum?
  total_supply                String?
  metadata                    Json?
  status                      token_status_enum?
  description                 String?
  token_created_at            DateTime?            @db.Timestamptz(6)
  token_updated_at            DateTime?            @db.Timestamptz(6)
  erc721_property_id          String?              @db.Uuid
  base_uri                    String?
  metadata_storage            String?
  max_supply                  String?
  has_royalty                 Boolean?
  royalty_percentage          String?
  royalty_receiver            String?
  is_burnable                 Boolean?
  is_pausable                 Boolean?
  asset_type                  String?
  minting_method              String?
  auto_increment_ids          Boolean?
  enumerable                  Boolean?
  uri_storage                 String?
  access_control              String?
  updatable_uris              Boolean?
  sales_config                Json?
  whitelist_config            Json?
  permission_config           Json?
  contract_uri                String?
  revealable                  Boolean?
  pre_reveal_uri              String?
  reserved_tokens             Int?
  minting_price               String?
  max_mints_per_tx            Int?
  max_mints_per_wallet        Int?
  enable_fractional_ownership Boolean?
  enable_dynamic_metadata     Boolean?
  public_sale_enabled         Boolean?
  public_sale_price           String?
  public_sale_start_time      DateTime?            @db.Timestamptz(6)
  whitelist_sale_enabled      Boolean?
  whitelist_sale_price        String?
  whitelist_sale_start_time   DateTime?            @db.Timestamptz(6)
  utility_enabled             Boolean?
  utility_type                String?
  staking_enabled             Boolean?
  soulbound                   Boolean?
  cross_chain_enabled         Boolean?
  property_created_at         DateTime?            @db.Timestamptz(6)
  property_updated_at         DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_geographic_restrictions_view {
  token_id                     String?              @db.Uuid
  token_name                   String?
  token_symbol                 String?
  standard                     token_standard_enum?
  restriction_type             String?
  country_code                 String?              @db.Char(2)
  country_name                 String?
  region                       String?
  regulatory_regime            String?
  max_ownership_percentage     Decimal?             @db.Decimal(5, 2)
  requires_local_custodian     Boolean?
  requires_regulatory_approval Boolean?
  sanctions_risk_level         String?
  is_ofac_sanctioned           Boolean?
  is_eu_sanctioned             Boolean?
  is_un_sanctioned             Boolean?
  effective_date               DateTime?            @db.Date
  expiry_date                  DateTime?            @db.Date
  notes                        String?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view token_whitelist_summary {
  token_id                  String?              @db.Uuid
  token_name                String?
  token_symbol              String?
  token_standard            token_standard_enum?
  erc20_whitelist_enabled   Boolean?
  erc721_whitelist_enabled  Boolean?
  erc1155_whitelist_enabled Boolean?
  erc1400_whitelist_enabled Boolean?
  erc3525_whitelist_enabled Boolean?
  erc4626_whitelist_enabled Boolean?
  whitelisted_address_count BigInt?
  created_at                DateTime?            @db.Timestamptz(6)
  updated_at                DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view user_permissions_view {
  user_id                String? @db.Uuid
  user_name              String?
  email                  String?
  role_name              String?
  permission_name        String?
  permission_description String?
  organization_id        String? @db.Uuid
  scope                  String?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view transfer_history {
  id            String?   @db.Uuid
  hash          String?
  from_address  String?
  to_address    String?
  amount        Decimal?  @db.Decimal
  asset         String?
  blockchain    String?
  status        String?
  transfer_type String?
  network_fee   Decimal?  @db.Decimal
  gas_used      Decimal?  @db.Decimal
  block_number  Int?
  confirmations Int?
  memo          String?
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view audit_coverage {
  trigger_name  Unsupported("name")?
  schema_name   Unsupported("name")?
  table_name    Unsupported("name")?
  function_name Unsupported("name")?

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc1400_view {
  token_id                        String?              @db.Uuid
  name                            String?
  symbol                          String?
  decimals                        Int?
  standard                        token_standard_enum?
  total_supply                    String?
  metadata                        Json?
  status                          token_status_enum?
  description                     String?
  token_created_at                DateTime?            @db.Timestamptz(6)
  token_updated_at                DateTime?            @db.Timestamptz(6)
  erc1400_property_id             String?              @db.Uuid
  initial_supply                  String?
  cap                             String?
  is_mintable                     Boolean?
  is_burnable                     Boolean?
  is_pausable                     Boolean?
  document_uri                    String?
  document_hash                   String?
  controller_address              String?
  require_kyc                     Boolean?
  security_type                   String?
  issuing_jurisdiction            String?
  issuing_entity_name             String?
  issuing_entity_lei              String?
  transfer_restrictions           Json?
  kyc_settings                    Json?
  compliance_settings             Json?
  forced_transfers                Boolean?
  issuance_modules                Boolean?
  document_management             Boolean?
  recovery_mechanism              Boolean?
  regulation_type                 String?
  is_multi_class                  Boolean?
  tranche_transferability         Boolean?
  token_details                   String?
  legal_terms                     String?
  prospectus                      String?
  enforce_kyc                     Boolean?
  forced_redemption_enabled       Boolean?
  whitelist_enabled               Boolean?
  holding_period                  Int?
  max_investor_count              Int?
  investor_accreditation          Boolean?
  auto_compliance                 Boolean?
  manual_approvals                Boolean?
  compliance_module               String?
  is_issuable                     Boolean?
  granular_control                Boolean?
  dividend_distribution           Boolean?
  corporate_actions               Boolean?
  custom_features                 Json?
  geographic_restrictions         Json?
  compliance_automation_level     String?
  institutional_grade             Boolean?
  custody_integration_enabled     Boolean?
  prime_brokerage_support         Boolean?
  settlement_integration          String?
  real_time_compliance_monitoring Boolean?
  automated_sanctions_screening   Boolean?
  aml_monitoring_enabled          Boolean?
  advanced_corporate_actions      Boolean?
  stock_splits_enabled            Boolean?
  treasury_management_enabled     Boolean?
  advanced_governance_enabled     Boolean?
  proxy_voting_enabled            Boolean?
  cross_border_trading_enabled    Boolean?
  multi_jurisdiction_compliance   Boolean?
  enhanced_reporting_enabled      Boolean?
  beneficial_ownership_tracking   Boolean?
  traditional_finance_integration Boolean?
  swift_integration_enabled       Boolean?
  iso20022_messaging_support      Boolean?
  advanced_risk_management        Boolean?
  insurance_coverage_enabled      Boolean?
  property_created_at             DateTime?            @db.Timestamptz(6)
  property_updated_at             DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view token_erc4626_view {
  token_id                     String?              @db.Uuid
  name                         String?
  symbol                       String?
  decimals                     Int?
  standard                     token_standard_enum?
  total_supply                 String?
  metadata                     Json?
  status                       token_status_enum?
  description                  String?
  token_created_at             DateTime?            @db.Timestamptz(6)
  token_updated_at             DateTime?            @db.Timestamptz(6)
  erc4626_property_id          String?              @db.Uuid
  asset_address                String?
  asset_name                   String?
  asset_symbol                 String?
  asset_decimals               Int?
  vault_type                   String?
  is_mintable                  Boolean?
  is_burnable                  Boolean?
  is_pausable                  Boolean?
  vault_strategy               String?
  custom_strategy              Boolean?
  strategy_controller          String?
  access_control               String?
  permit                       Boolean?
  flash_loans                  Boolean?
  emergency_shutdown           Boolean?
  fee_structure                Json?
  rebalancing_rules            Json?
  performance_metrics          Boolean?
  yield_source                 String?
  automated_rebalancing        Boolean?
  strategy_complexity          String?
  multi_asset_enabled          Boolean?
  rebalancing_enabled          Boolean?
  auto_compounding_enabled     Boolean?
  yield_optimization_enabled   Boolean?
  risk_management_enabled      Boolean?
  risk_tolerance               String?
  apy_tracking_enabled         Boolean?
  benchmark_tracking_enabled   Boolean?
  benchmark_index              String?
  compound_frequency           String?
  governance_token_enabled     Boolean?
  strategy_voting_enabled      Boolean?
  fee_voting_enabled           Boolean?
  insurance_enabled            Boolean?
  emergency_exit_enabled       Boolean?
  circuit_breaker_enabled      Boolean?
  liquidity_mining_enabled     Boolean?
  market_making_enabled        Boolean?
  cross_chain_yield_enabled    Boolean?
  institutional_grade          Boolean?
  compliance_reporting_enabled Boolean?
  third_party_audits_enabled   Boolean?
  property_created_at          DateTime?            @db.Timestamptz(6)
  property_updated_at          DateTime?            @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view valid_policy_approvers {
  id             String?   @db.Uuid
  policy_rule_id String?   @db.Uuid
  user_id        String?   @db.Uuid
  created_by     String?   @db.Uuid
  created_at     DateTime? @db.Timestamptz(6)
  status         String?
  comment        String?
  timestamp      DateTime? @db.Timestamptz(6)

  @@ignore
  @@schema("public")
}

view active_redemption_opportunities {
  project_id               String?   @db.Uuid
  investor_id              String?   @db.Uuid
  product_type             String?
  product_id               String?   @db.Uuid
  eligible_distributions   BigInt?
  total_distributed_amount Decimal?  @db.Decimal
  total_remaining_amount   Decimal?  @db.Decimal
  total_max_redeemable     Decimal?  @db.Decimal
  distribution_ids         String[]  @db.Uuid
  earliest_window_start    DateTime? @db.Timestamp(6)
  latest_window_end        DateTime? @db.Timestamp(6)
  all_eligible             Boolean?
  combined_reasons         String?

  @@schema("public")
}

/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view climate_cache_performance {
  cache_key            String?   @db.VarChar(100)
  hit_count            Int?
  cached_at            DateTime? @db.Timestamptz(6)
  expires_at           DateTime? @db.Timestamptz(6)
  last_accessed        DateTime? @db.Timestamptz(6)
  ttl_hours            Decimal?  @db.Decimal
  minutes_since_access Decimal?  @db.Decimal
  status               String?

  @@schema("public")
}

view climate_cash_flow_forecast {
  projection_date DateTime? @db.Date
  total_projected Decimal?  @db.Decimal
  source_type     String?   @db.VarChar(50)

  @@schema("public")
}

view climate_investor_pool_summary {
  investor_id       String?  @db.Uuid
  pool_id           String?  @db.Uuid
  pool_name         String?  @db.VarChar(255)
  investment_amount Decimal? @db.Decimal(15, 2)
  total_receivables Decimal? @db.Decimal
  avg_risk_score    Decimal? @db.Decimal

  @@schema("public")
}

view climate_token_summary {
  token_id              String?            @db.Uuid
  name                  String?
  symbol                String?
  project_id            String?            @db.Uuid
  status                token_status_enum?
  pool_id               String?            @db.Uuid
  pool_name             String?            @db.VarChar(255)
  total_supply          String?
  average_risk_score    Decimal?           @db.Decimal(5, 2)
  discounted_value      Decimal?           @db.Decimal(15, 2)
  discount_amount       Decimal?           @db.Decimal(15, 2)
  average_discount_rate Decimal?           @db.Decimal(5, 2)
  risk_profile          String?            @db.VarChar(50)

  @@schema("public")
}

/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view database_audit_coverage {
  table_name         Unsupported("name")?
  has_recent_audit   Boolean?
  recent_event_count BigInt?
  last_audit_event   DateTime?            @db.Timestamptz(6)

  @@schema("public")
}

/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view nav_data_with_status {
  id                 String?   @db.Uuid
  asset_id           String?   @db.Uuid
  project_id         String?   @db.Uuid
  date               DateTime? @db.Date
  nav                Decimal?  @db.Decimal(18, 6)
  total_assets       Decimal?  @db.Decimal(78, 18)
  asset_name         String?
  total_liabilities  Decimal?  @db.Decimal(78, 18)
  outstanding_shares Decimal?  @db.Decimal(78, 18)
  previous_nav       Decimal?  @db.Decimal(18, 6)
  change_amount      Decimal?  @db.Decimal(18, 6)
  change_percent     Decimal?  @db.Decimal(8, 4)
  source             String?
  validated          Boolean?
  validated_by       String?   @db.Uuid
  validated_at       DateTime? @db.Timestamptz(6)
  notes              String?
  calculation_method String?
  market_conditions  String?
  created_at         DateTime? @db.Timestamptz(6)
  updated_at         DateTime? @db.Timestamptz(6)
  created_by         String?   @db.Uuid
  calculated_nav     Decimal?  @db.Decimal(18, 6)
  run_id             String?   @db.Uuid
  run_status         String?
  run_started_at     DateTime? @db.Timestamptz(6)
  run_completed_at   DateTime? @db.Timestamptz(6)
  product_type       String?
  approval_status    String?
  approved_by        String?   @db.Uuid
  approved_at        DateTime? @db.Timestamptz(6)
  approval_comments  String?
  validation_status  String?
  total_validations  BigInt?
  failed_validations BigInt?
  error_validations  BigInt?

  @@schema("public")
}

view nav_fx_rates_latest {
  base_ccy  String?
  quote_ccy String?
  rate      Decimal?  @db.Decimal(18, 8)
  as_of     DateTime? @db.Timestamptz(6)
  source    String?

  @@schema("public")
}

view problematic_token_deployments {
  id                      String? @db.Uuid
  name                    String?
  symbol                  String?
  contract_address        String? @db.VarChar(255)
  blockchain              String? @db.VarChar(100)
  deployment_status       String? @db.VarChar(50)
  deployment_error        String?
  deployment_table_status String?
  initialization_error    String?
  recommended_action      String?

  @@schema("public")
}

view redemption_eligibility {
  distribution_id             String?   @db.Uuid
  investor_id                 String?   @db.Uuid
  project_id                  String?   @db.Uuid
  total_distributed           Decimal?  @db.Decimal
  remaining_amount            Decimal?  @db.Decimal
  redemption_percentage_used  Decimal?  @db.Decimal
  fully_redeemed              Boolean?
  rule_id                     String?   @db.Uuid
  is_redemption_open          Boolean?
  open_after_date             DateTime? @db.Timestamptz(6)
  allow_continuous_redemption Boolean?
  max_redemption_percentage   Decimal?  @db.Decimal
  lock_up_period              Int?
  product_type                String?
  product_id                  String?   @db.Uuid
  active_window_id            String?   @db.Uuid
  window_start                DateTime? @db.Timestamp(6)
  window_end                  DateTime? @db.Timestamp(6)
  submission_start_date       DateTime? @db.Timestamp(6)
  submission_end_date         DateTime? @db.Timestamp(6)
  window_status               String?
  is_eligible_now             Boolean?
  max_redeemable_amount       Decimal?  @db.Decimal
  eligibility_reason          String?

  @@schema("public")
}

view redemption_rules_with_product_details {
  id                           String?   @db.Uuid
  rule_id                      String?   @db.Uuid
  redemption_type              String?
  require_multi_sig_approval   Boolean?
  required_approvers           Int?
  total_approvers              Int?
  notify_investors             Boolean?
  settlement_method            String?
  immediate_execution          Boolean?
  use_latest_nav               Boolean?
  allow_any_time_redemption    Boolean?
  repurchase_frequency         String?
  lock_up_period               Int?
  submission_window_days       Int?
  lock_tokens_on_request       Boolean?
  use_window_nav               Boolean?
  enable_pro_rata_distribution Boolean?
  queue_unprocessed_requests   Boolean?
  enable_admin_override        Boolean?
  created_at                   DateTime? @db.Timestamptz(6)
  updated_at                   DateTime? @db.Timestamptz(6)
  project_id                   String?   @db.Uuid
  organization_id              String?   @db.Uuid
  product_type                 String?
  product_id                   String?   @db.Uuid
  is_redemption_open           Boolean?
  open_after_date              DateTime? @db.Timestamptz(6)
  allow_continuous_redemption  Boolean?
  max_redemption_percentage    Decimal?  @db.Decimal
  redemption_eligibility_rules Json?
  target_raise_amount          Decimal?  @db.Decimal
  project_name                 String?
  project_type                 String?
  product_table                String?
  product_details              Json?
  product_name                 String?
  product_status               String?
  product_currency             String?
  effective_target_raise       Decimal?  @db.Decimal
  total_redeemed_amount        Decimal?  @db.Decimal
  available_capacity           Decimal?  @db.Decimal
  capacity_percentage          Decimal?  @db.Decimal
  capacity_status              String?

  @@schema("public")
}

view redemption_system_health {
  projects_with_rules            BigInt?
  total_rules                    BigInt?
  open_redemption_projects       BigInt?
  continuous_redemption_projects BigInt?
  active_windows                 Int?
  eligible_investors             BigInt?
  total_redeemable_amount        Decimal? @db.Decimal

  @@schema("public")
}

/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view sidebar_configurations_with_names {
  id                        String?        @db.Uuid
  name                      String?        @db.VarChar(255)
  description               String?
  target_role_ids           String[]       @db.Uuid
  target_profile_type_enums profile_type[]
  computed_role_names       String[]
  computed_profile_types    profile_type[]
  min_role_priority         Int?
  organization_id           String?        @db.Uuid
  configuration_data        Json?
  is_active                 Boolean?
  is_default                Boolean?
  created_by                String?        @db.Uuid
  updated_by                String?        @db.Uuid
  created_at                DateTime?      @db.Timestamptz(6)
  updated_at                DateTime?      @db.Timestamptz(6)

  @@schema("public")
}

/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view suspicious_wallet_activity {
  wallet_id       String?   @db.Uuid
  wallet_address  String?
  accessed_by     String?   @db.Uuid
  user_email      String?
  failed_attempts BigInt?
  first_failure   DateTime? @db.Timestamptz(6)
  last_failure    DateTime? @db.Timestamptz(6)
  ip_addresses    String[]

  @@schema("public")
}

/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view wallet_access_summary {
  wallet_id       String?   @db.Uuid
  wallet_address  String?
  network         String?
  project_name    String?
  access_count    BigInt?
  failed_count    BigInt?
  last_access     DateTime? @db.Timestamptz(6)
  recent_activity Json?     @db.Json

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum LimitType {
  POSITION_SIZE
  DAILY_LOSS
  VAR_LIMIT
  CONCENTRATION
  LEVERAGE

  @@schema("public")
}

enum OrderType {
  MARKET
  LIMIT
  STOP
  STOP_LIMIT

  @@schema("public")
}

enum TradeSide {
  BUY
  SELL

  @@schema("public")
}

enum TradeStatus {
  PENDING
  PARTIALLY_FILLED
  FILLED
  CANCELLED
  REJECTED
  SETTLED

  @@schema("public")
}

enum UserRole {
  ADMIN
  TRADER
  RISK_MANAGER
  COMPLIANCE
  SETTLEMENT

  @@schema("public")
}

enum compliance_status {
  compliant
  non_compliant
  pending_review

  @@schema("public")
}

enum document_status {
  pending
  approved
  rejected
  expired
  active
  pending_review

  @@schema("public")
}

enum document_type {
  commercial_register
  certificate_incorporation
  memorandum_articles
  director_list
  shareholder_register
  financial_statements
  regulatory_status
  qualification_summary
  business_description
  organizational_chart
  key_people_cv
  aml_kyc_description
  passport
  drivers_license
  national_id
  utility_bill
  bank_statement
  proof_of_income
  proof_of_address
  employment_letter
  tax_return
  social_security

  @@schema("public")
}

enum issuer_document_type {
  issuer_creditworthiness
  project_security_type
  offering_details
  term_sheet
  special_rights
  underwriters
  use_of_proceeds
  financial_highlights
  timing
  risk_factors

  @@schema("public")
}

enum issuer_role {
  admin
  editor
  viewer
  compliance_officer

  @@schema("public")
}

enum kyc_status {
  approved
  pending
  failed
  not_started
  expired

  @@schema("public")
}

enum pool_type_enum {
  Total_Pool @map("Total Pool")
  Tranche

  @@schema("public")
}

enum project_duration {
  m_1 @map("1m")
  m_3 @map("3m")
  m_6 @map("6m")
  m_9 @map("9m")
  m_12 @map("12m")
  y_1 @map("1y")
  y_2 @map("2y")
  y_3 @map("3y")
  y_5 @map("5y")
  y_10 @map("10y")
  y_20 @map("20y")
  y_30 @map("30y")

  @@schema("public")
}

enum token_config_mode_enum {
  min
  max
  basic
  advanced

  @@schema("public")
}

enum token_standard_enum {
  ERC_20   @map("ERC-20")
  ERC_721  @map("ERC-721")
  ERC_1155 @map("ERC-1155")
  ERC_1400 @map("ERC-1400")
  ERC_3525 @map("ERC-3525")
  ERC_4626 @map("ERC-4626")

  @@schema("public")
}

enum token_status_enum {
  DRAFT
  UNDER_REVIEW  @map("UNDER REVIEW")
  APPROVED
  READY_TO_MINT @map("READY TO MINT")
  MINTED
  DEPLOYED
  PAUSED
  DISTRIBUTED
  REJECTED

  @@schema("public")
}

enum workflow_status {
  pending
  completed
  rejected

  @@schema("public")
}

enum oauth_registration_type {
  dynamic
  manual

  @@schema("auth")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum individual_document_type {
  passport
  drivers_license
  national_id
  state_id
  voter_id
  proof_of_address
  utility_bill
  bank_statement
  lease_agreement
  mortgage_statement
  phone_bill
  internet_bill
  insurance_statement
  investment_agreement
  accreditation_letter
  tax_document
  w2_form
  tax_return
  income_statement
  employment_letter
  pay_stub
  financial_statement
  power_of_attorney
  trust_document
  beneficial_ownership
  source_of_funds
  source_of_wealth
  articles_of_incorporation
  bylaws
  operating_agreement
  certificate_of_good_standing
  tax_exemption_letter
  audit_report
  board_resolution
  legal_opinion
  prospectus
  offering_memorandum
  regulatory_filing
  compliance_certificate
  other

  @@schema("public")
}

enum processing_date_mode_enum {
  fixed
  same_day
  offset

  @@schema("public")
}

enum product_status {
  Active
  Called
  Matured
  Redeemed
  Expired
  Suspended
  Delisted
  Open
  Closed

  @@schema("public")
}

enum profile_type {
  service_provider @map("service provider")
  issuer
  investor
  super_admin      @map("super admin")

  @@schema("public")
}

enum stablecoin_collateral_type {
  Fiat
  Crypto
  Commodity
  Algorithmic
  Hybrid
  None

  @@schema("public")
}

enum submission_date_mode_enum {
  fixed
  relative

  @@schema("public")
}
