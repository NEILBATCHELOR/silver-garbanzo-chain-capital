#!/bin/bash

# Bond Calculator Testing Script
# Clears cache and provides testing instructions

echo "üß™ Bond Calculator Testing & Debugging"
echo "======================================"
echo ""

echo "üìã STEP 1: Clear Frontend Cache"
echo "--------------------------------"
echo "In your browser (Chrome/Firefox/Safari):"
echo "1. Open DevTools (F12 or Cmd+Option+I)"
echo "2. Go to Network tab"
echo "3. Check 'Disable cache' checkbox"
echo "4. Hard refresh: Cmd+Shift+R (Mac) or Ctrl+Shift+R (Windows/Linux)"
echo ""
echo "Or manually clear:"
echo "- Chrome: Settings > Privacy > Clear browsing data > Cached images and files"
echo "- Firefox: Settings > Privacy > Cookies and Site Data > Clear Data"
echo "- Safari: Develop > Empty Caches"
echo ""

echo "üìã STEP 2: Check What's Being Sent"
echo "-----------------------------------"
echo "In DevTools Network tab:"
echo "1. Navigate to: http://localhost:5173/projects/cdc4f92c-8da1-4d80-a917-a94eb8cafaf0/nav/bonds/651e4780-bf81-4bdf-8199-9cac79a45624/calculate"
echo "2. Fill in the form (select date, check options)"
echo "3. Click 'Calculate NAV'"
echo "4. Find the request to: /api/v1/nav/bonds/.../calculate"
echo "5. Click on it and check the 'Payload' tab"
echo ""
echo "‚úÖ EXPECTED payload (after fix):"
echo "{"
echo '  "asOfDate": "2025-01-11T00:00:00.000Z",'
echo '  "includeBreakdown": true,'
echo '  "saveToDatabase": true'
echo "}"
echo ""
echo "‚ùå WRONG payload (if cache not cleared):"
echo "{"
echo '  "asOfDate": "2025-01-11T00:00:00.000Z",'
echo '  "accountingMethod": "held_to_maturity",  ‚Üê SHOULD NOT BE HERE!'
echo '  "includeBreakdown": true,'
echo '  "saveToDatabase": true'
echo "}"
echo ""

echo "üìã STEP 3: Check Backend Logs"
echo "------------------------------"
echo "In your terminal where backend is running, you should see:"
echo ""
echo "=== BOND CALCULATION REQUEST ==="
echo "Bond ID: 651e4780-bf81-4bdf-8199-9cac79a45624"
echo "Request Body: {"
echo '  "asOfDate": "2025-01-11T00:00:00.000Z",'
echo '  "includeBreakdown": true,'
echo '  "saveToDatabase": true'
echo "}"
echo "Body Keys: [ 'asOfDate', 'includeBreakdown', 'saveToDatabase' ]"
echo ""
echo "If you see 'accountingMethod' in Body Keys, the frontend cache wasn't cleared!"
echo ""

echo "üìã STEP 4: Test Different Scenarios"
echo "------------------------------------"
echo "1. Test with different dates"
echo "2. Toggle includeBreakdown"
echo "3. Toggle saveToDatabase"
echo "4. Check that results display correctly"
echo ""

echo "üêõ DEBUGGING TIPS"
echo "-----------------"
echo "If still getting errors:"
echo ""
echo "1. Check backend logs for validation errors:"
echo "   Look for: '=== ZOD VALIDATION ERROR ===' or '=== CALCULATION ERROR ==='"
echo ""
echo "2. Check the exact error message in frontend console:"
echo "   Should show specific field that's missing/invalid"
echo ""
echo "3. Verify bond data exists in database:"
echo "   SELECT * FROM bond_products WHERE id = '651e4780-bf81-4bdf-8199-9cac79a45624';"
echo ""
echo "4. Check if bond has required supporting data:"
echo "   - Coupon payments"
echo "   - Market prices (for AFS/Trading)"
echo "   - Accounting classification set"
echo ""

echo "‚úÖ SUCCESS INDICATORS"
echo "---------------------"
echo "‚úÖ Form submits without errors"
echo "‚úÖ Backend logs show clean request (no accountingMethod)"
echo "‚úÖ Backend logs show successful calculation"
echo "‚úÖ Results display on screen"
echo "‚úÖ NAV value is reasonable (> 0)"
echo "‚úÖ Breakdown shows (if enabled)"
echo "‚úÖ Risk metrics show (if bond has market prices)"
echo ""

echo "üîÑ If Still Failing:"
echo "--------------------"
echo "1. Kill all node processes:"
echo "   pkill -f 'node'"
echo ""
echo "2. Restart backend:"
echo "   cd backend && npm run dev"
echo ""
echo "3. Restart frontend:"
echo "   cd frontend && npm run dev"
echo ""
echo "4. Clear browser cache completely"
echo "5. Try in incognito/private mode"
echo ""

echo "üìù Report Issues With:"
echo "-----------------------"
echo "1. Screenshot of Network tab payload"
echo "2. Backend console logs (=== BOND CALCULATION REQUEST ===)"
echo "3. Frontend console errors"
echo "4. Bond ID being tested"
echo ""
